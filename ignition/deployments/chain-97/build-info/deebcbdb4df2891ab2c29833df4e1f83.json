{
  "id": "deebcbdb4df2891ab2c29833df4e1f83",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/LucroPrediction.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/security/Pausable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n/**\n * @title LucroPrediction\n */\ncontract LucroPrediction is Ownable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public immutable token; // Prediction token\n\n    AggregatorV3Interface public oracle;\n\n    bool public genesisLockOnce = false;\n    bool public genesisStartOnce = false;\n\n    address public adminAddress; // address of the admin\n    address public operatorAddress; // address of the operator\n\n    uint256 public bufferSeconds; // number of seconds for valid execution of a prediction round\n    uint256 public intervalSeconds; // interval in seconds between two prediction rounds\n\n    uint256 public minBetAmount; // minimum betting amount (denominated in wei)\n    uint256 public treasuryFee; // treasury rate (e.g. 200 = 2%, 150 = 1.50%)\n    uint256 public treasuryAmount; // treasury amount that was not claimed\n\n    uint256 public currentEpoch; // current epoch for prediction round\n\n    uint256 public oracleLatestRoundId; // converted from uint80 (Chainlink)\n    uint256 public oracleUpdateAllowance; // seconds\n\n    uint256 public constant MAX_TREASURY_FEE = 1000; // 10%\n\n    mapping(uint256 => mapping(address => BetInfo)) public ledger;\n    mapping(uint256 => Round) public rounds;\n    mapping(address => uint256[]) public userRounds;\n\n    enum Position {\n        Bull,\n        Bear\n    }\n\n    struct Round {\n        uint256 epoch;\n        uint256 startTimestamp;\n        uint256 lockTimestamp;\n        uint256 closeTimestamp;\n        int256 lockPrice;\n        int256 closePrice;\n        uint256 lockOracleId;\n        uint256 closeOracleId;\n        uint256 totalAmount;\n        uint256 bullAmount;\n        uint256 bearAmount;\n        uint256 rewardBaseCalAmount;\n        uint256 rewardAmount;\n        bool oracleCalled;\n    }\n\n    struct BetInfo {\n        Position position;\n        uint256 amount;\n        bool claimed; // default false\n    }\n\n    event BetBear(\n        address indexed sender,\n        uint256 indexed epoch,\n        uint256 amount\n    );\n    event BetBull(\n        address indexed sender,\n        uint256 indexed epoch,\n        uint256 amount\n    );\n    event Claim(address indexed sender, uint256 indexed epoch, uint256 amount);\n    event EndRound(\n        uint256 indexed epoch,\n        uint256 indexed roundId,\n        int256 price\n    );\n    event LockRound(\n        uint256 indexed epoch,\n        uint256 indexed roundId,\n        int256 price\n    );\n\n    event NewAdminAddress(address admin);\n    event NewBufferAndIntervalSeconds(\n        uint256 bufferSeconds,\n        uint256 intervalSeconds\n    );\n    event NewMinBetAmount(uint256 indexed epoch, uint256 minBetAmount);\n    event NewTreasuryFee(uint256 indexed epoch, uint256 treasuryFee);\n    event NewOperatorAddress(address operator);\n    event NewOracle(address oracle);\n    event NewOracleUpdateAllowance(uint256 oracleUpdateAllowance);\n\n    event Pause(uint256 indexed epoch);\n    event RewardsCalculated(\n        uint256 indexed epoch,\n        uint256 rewardBaseCalAmount,\n        uint256 rewardAmount,\n        uint256 treasuryAmount\n    );\n\n    event StartRound(uint256 indexed epoch);\n    event TokenRecovery(address indexed token, uint256 amount);\n    event TreasuryClaim(uint256 amount);\n    event Unpause(uint256 indexed epoch);\n\n    modifier onlyAdmin() {\n        require(msg.sender == adminAddress, \"Not admin\");\n        _;\n    }\n\n    modifier onlyAdminOrOperator() {\n        require(\n            msg.sender == adminAddress || msg.sender == operatorAddress,\n            \"Not operator/admin\"\n        );\n        _;\n    }\n\n    modifier onlyOperator() {\n        require(msg.sender == operatorAddress, \"Not operator\");\n        _;\n    }\n\n    modifier notContract() {\n        require(!_isContract(msg.sender), \"Contract not allowed\");\n        require(msg.sender == tx.origin, \"Proxy contract not allowed\");\n        _;\n    }\n\n    /**\n     * @notice Constructor\n     * @param _token: prediction token\n     * @param _oracleAddress: oracle address\n     * @param _adminAddress: admin address\n     * @param _operatorAddress: operator address\n     * @param _intervalSeconds: number of time within an interval\n     * @param _bufferSeconds: buffer of time for resolution of price\n     * @param _minBetAmount: minimum bet amounts (in wei)\n     * @param _oracleUpdateAllowance: oracle update allowance\n     * @param _treasuryFee: treasury fee (1000 = 10%)\n     */\n    constructor(\n        IERC20 _token,\n        address _oracleAddress,\n        address _adminAddress,\n        address _operatorAddress,\n        uint256 _intervalSeconds,\n        uint256 _bufferSeconds,\n        uint256 _minBetAmount,\n        uint256 _oracleUpdateAllowance,\n        uint256 _treasuryFee\n    ) {\n        require(_treasuryFee <= MAX_TREASURY_FEE, \"Treasury fee too high\");\n\n        token = _token;\n        oracle = AggregatorV3Interface(_oracleAddress);\n        adminAddress = _adminAddress;\n        operatorAddress = _operatorAddress;\n        intervalSeconds = _intervalSeconds;\n        bufferSeconds = _bufferSeconds;\n        minBetAmount = _minBetAmount;\n        oracleUpdateAllowance = _oracleUpdateAllowance;\n        treasuryFee = _treasuryFee;\n    }\n\n    /**\n     * @notice Bet bear position\n     * @param epoch: epoch\n     */\n    function betBear(\n        uint256 epoch,\n        uint256 _amount\n    ) external whenNotPaused nonReentrant notContract {\n        require(epoch == currentEpoch, \"Bet is too early/late\");\n        require(_bettable(epoch), \"Round not bettable\");\n        require(\n            _amount >= minBetAmount,\n            \"Bet amount must be greater than minBetAmount\"\n        );\n        require(\n            ledger[epoch][msg.sender].amount == 0,\n            \"Can only bet once per round\"\n        );\n\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n        // Update round data\n        uint256 amount = _amount;\n        Round storage round = rounds[epoch];\n        round.totalAmount = round.totalAmount + amount;\n        round.bearAmount = round.bearAmount + amount;\n\n        // Update user data\n        BetInfo storage betInfo = ledger[epoch][msg.sender];\n        betInfo.position = Position.Bear;\n        betInfo.amount = amount;\n        userRounds[msg.sender].push(epoch);\n\n        emit BetBear(msg.sender, epoch, amount);\n    }\n\n    /**\n     * @notice Bet bull position\n     * @param epoch: epoch\n     */\n    function betBull(\n        uint256 epoch,\n        uint256 _amount\n    ) external whenNotPaused nonReentrant notContract {\n        require(epoch == currentEpoch, \"Bet is too early/late\");\n        require(_bettable(epoch), \"Round not bettable\");\n        require(\n            _amount >= minBetAmount,\n            \"Bet amount must be greater than minBetAmount\"\n        );\n        require(\n            ledger[epoch][msg.sender].amount == 0,\n            \"Can only bet once per round\"\n        );\n\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n        // Update round data\n        uint256 amount = _amount;\n        Round storage round = rounds[epoch];\n        round.totalAmount = round.totalAmount + amount;\n        round.bullAmount = round.bullAmount + amount;\n\n        // Update user data\n        BetInfo storage betInfo = ledger[epoch][msg.sender];\n        betInfo.position = Position.Bull;\n        betInfo.amount = amount;\n        userRounds[msg.sender].push(epoch);\n\n        emit BetBull(msg.sender, epoch, amount);\n    }\n\n    /**\n     * @notice Claim reward for an array of epochs\n     * @param epochs: array of epochs\n     */\n    function claim(\n        uint256[] calldata epochs\n    ) external nonReentrant notContract {\n        uint256 reward; // Initializes reward\n\n        for (uint256 i = 0; i < epochs.length; i++) {\n            require(\n                rounds[epochs[i]].startTimestamp != 0,\n                \"Round has not started\"\n            );\n            require(\n                block.timestamp > rounds[epochs[i]].closeTimestamp,\n                \"Round has not ended\"\n            );\n\n            uint256 addedReward = 0;\n\n            // Round valid, claim rewards\n            if (rounds[epochs[i]].oracleCalled) {\n                require(\n                    claimable(epochs[i], msg.sender),\n                    \"Not eligible for claim\"\n                );\n                Round memory round = rounds[epochs[i]];\n                addedReward =\n                    (ledger[epochs[i]][msg.sender].amount *\n                        round.rewardAmount) /\n                    round.rewardBaseCalAmount;\n            }\n            // Round invalid, refund bet amount\n            else {\n                require(\n                    refundable(epochs[i], msg.sender),\n                    \"Not eligible for refund\"\n                );\n                addedReward = ledger[epochs[i]][msg.sender].amount;\n            }\n\n            ledger[epochs[i]][msg.sender].claimed = true;\n            reward += addedReward;\n\n            emit Claim(msg.sender, epochs[i], addedReward);\n        }\n\n        if (reward > 0) {\n            token.safeTransfer(msg.sender, reward);\n        }\n    }\n\n    /**\n     * @notice Start the next round n, lock price for round n-1, end round n-2\n     * @dev Callable by operator\n     */\n    function executeRound() external whenNotPaused onlyOperator {\n        require(\n            genesisStartOnce && genesisLockOnce,\n            \"Can only run after genesisStartRound and genesisLockRound is triggered\"\n        );\n\n        (uint80 currentRoundId, int256 currentPrice) = _getPriceFromOracle();\n\n        oracleLatestRoundId = uint256(currentRoundId);\n\n        // CurrentEpoch refers to previous round (n-1)\n        _safeLockRound(currentEpoch, currentRoundId, currentPrice);\n        _safeEndRound(currentEpoch - 1, currentRoundId, currentPrice);\n        _calculateRewards(currentEpoch - 1);\n\n        // Increment currentEpoch to current round (n)\n        currentEpoch = currentEpoch + 1;\n        _safeStartRound(currentEpoch);\n    }\n\n    /**\n     * @notice Lock genesis round\n     * @dev Callable by operator\n     */\n    function genesisLockRound() external whenNotPaused onlyOperator {\n        require(\n            genesisStartOnce,\n            \"Can only run after genesisStartRound is triggered\"\n        );\n        require(!genesisLockOnce, \"Can only run genesisLockRound once\");\n\n        (uint80 currentRoundId, int256 currentPrice) = _getPriceFromOracle();\n\n        oracleLatestRoundId = uint256(currentRoundId);\n\n        _safeLockRound(currentEpoch, currentRoundId, currentPrice);\n\n        currentEpoch = currentEpoch + 1;\n        _startRound(currentEpoch);\n        genesisLockOnce = true;\n    }\n\n    /**\n     * @notice Start genesis round\n     * @dev Callable by admin or operator\n     */\n    function genesisStartRound() external whenNotPaused onlyOperator {\n        require(!genesisStartOnce, \"Can only run genesisStartRound once\");\n\n        currentEpoch = currentEpoch + 1;\n        _startRound(currentEpoch);\n        genesisStartOnce = true;\n    }\n\n    /**\n     * @notice called by the admin to pause, triggers stopped state\n     * @dev Callable by admin or operator\n     */\n    function pause() external whenNotPaused onlyAdminOrOperator {\n        _pause();\n\n        emit Pause(currentEpoch);\n    }\n\n    /**\n     * @notice Claim all rewards in treasury\n     * @dev Callable by admin\n     */\n    function claimTreasury() external nonReentrant onlyAdmin {\n        uint256 currentTreasuryAmount = treasuryAmount;\n        treasuryAmount = 0;\n        token.safeTransfer(adminAddress, currentTreasuryAmount);\n        emit TreasuryClaim(currentTreasuryAmount);\n    }\n\n    /**\n     * @notice called by the admin to unpause, returns to normal state\n     * Reset genesis state. Once paused, the rounds would need to be kickstarted by genesis\n     * @dev Callable by admin or operator\n     */\n    function unpause() external whenPaused onlyAdminOrOperator {\n        genesisStartOnce = false;\n        genesisLockOnce = false;\n        _unpause();\n\n        emit Unpause(currentEpoch);\n    }\n\n    /**\n     * @notice Set buffer and interval (in seconds)\n     * @dev Callable by admin\n     */\n    function setBufferAndIntervalSeconds(\n        uint256 _bufferSeconds,\n        uint256 _intervalSeconds\n    ) external whenPaused onlyAdmin {\n        require(\n            _bufferSeconds < _intervalSeconds,\n            \"bufferSeconds must be inferior to intervalSeconds\"\n        );\n        bufferSeconds = _bufferSeconds;\n        intervalSeconds = _intervalSeconds;\n\n        emit NewBufferAndIntervalSeconds(_bufferSeconds, _intervalSeconds);\n    }\n\n    /**\n     * @notice Set minBetAmount\n     * @dev Callable by admin\n     */\n    function setMinBetAmount(\n        uint256 _minBetAmount\n    ) external whenPaused onlyAdmin {\n        require(_minBetAmount != 0, \"Must be superior to 0\");\n        minBetAmount = _minBetAmount;\n\n        emit NewMinBetAmount(currentEpoch, minBetAmount);\n    }\n\n    /**\n     * @notice Set operator address\n     * @dev Callable by admin\n     */\n    function setOperator(address _operatorAddress) external onlyAdmin {\n        require(_operatorAddress != address(0), \"Cannot be zero address\");\n        operatorAddress = _operatorAddress;\n\n        emit NewOperatorAddress(_operatorAddress);\n    }\n\n    /**\n     * @notice Set Oracle address\n     * @dev Callable by admin\n     */\n    function setOracle(address _oracle) external whenPaused onlyAdmin {\n        require(_oracle != address(0), \"Cannot be zero address\");\n        oracleLatestRoundId = 0;\n        oracle = AggregatorV3Interface(_oracle);\n\n        // Dummy check to make sure the interface implements this function properly\n        oracle.latestRoundData();\n\n        emit NewOracle(_oracle);\n    }\n\n    /**\n     * @notice Set oracle update allowance\n     * @dev Callable by admin\n     */\n    function setOracleUpdateAllowance(\n        uint256 _oracleUpdateAllowance\n    ) external whenPaused onlyAdmin {\n        oracleUpdateAllowance = _oracleUpdateAllowance;\n\n        emit NewOracleUpdateAllowance(_oracleUpdateAllowance);\n    }\n\n    /**\n     * @notice Set treasury fee\n     * @dev Callable by admin\n     */\n    function setTreasuryFee(\n        uint256 _treasuryFee\n    ) external whenPaused onlyAdmin {\n        require(_treasuryFee <= MAX_TREASURY_FEE, \"Treasury fee too high\");\n        treasuryFee = _treasuryFee;\n\n        emit NewTreasuryFee(currentEpoch, treasuryFee);\n    }\n\n    /**\n     * @notice It allows the owner to recover tokens sent to the contract by mistake\n     * @param _token: token address\n     * @param _amount: token amount\n     * @dev Callable by owner\n     */\n    function recoverToken(address _token, uint256 _amount) external onlyOwner {\n        require(_token != address(token), \"Cannot be prediction token address\");\n        IERC20(_token).safeTransfer(address(msg.sender), _amount);\n\n        emit TokenRecovery(_token, _amount);\n    }\n\n    /**\n     * @notice Set admin address\n     * @dev Callable by owner\n     */\n    function setAdmin(address _adminAddress) external onlyOwner {\n        require(_adminAddress != address(0), \"Cannot be zero address\");\n        adminAddress = _adminAddress;\n\n        emit NewAdminAddress(_adminAddress);\n    }\n\n    /**\n     * @notice Returns round epochs and bet information for a user that has participated\n     * @param user: user address\n     * @param cursor: cursor\n     * @param size: size\n     */\n    function getUserRounds(\n        address user,\n        uint256 cursor,\n        uint256 size\n    ) external view returns (uint256[] memory, BetInfo[] memory, uint256) {\n        uint256 length = size;\n\n        if (length > userRounds[user].length - cursor) {\n            length = userRounds[user].length - cursor;\n        }\n\n        uint256[] memory values = new uint256[](length);\n        BetInfo[] memory betInfo = new BetInfo[](length);\n\n        for (uint256 i = 0; i < length; i++) {\n            values[i] = userRounds[user][cursor + i];\n            betInfo[i] = ledger[values[i]][user];\n        }\n\n        return (values, betInfo, cursor + length);\n    }\n\n    /**\n     * @notice Returns round epochs length\n     * @param user: user address\n     */\n    function getUserRoundsLength(address user) external view returns (uint256) {\n        return userRounds[user].length;\n    }\n\n    /**\n     * @notice Get the claimable stats of specific epoch and user account\n     * @param epoch: epoch\n     * @param user: user address\n     */\n    function claimable(uint256 epoch, address user) public view returns (bool) {\n        BetInfo memory betInfo = ledger[epoch][user];\n        Round memory round = rounds[epoch];\n        if (round.lockPrice == round.closePrice) {\n            return false;\n        }\n        return\n            round.oracleCalled &&\n            betInfo.amount != 0 &&\n            !betInfo.claimed &&\n            ((round.closePrice > round.lockPrice &&\n                betInfo.position == Position.Bull) ||\n                (round.closePrice < round.lockPrice &&\n                    betInfo.position == Position.Bear));\n    }\n\n    /**\n     * @notice Get the refundable stats of specific epoch and user account\n     * @param epoch: epoch\n     * @param user: user address\n     */\n    function refundable(\n        uint256 epoch,\n        address user\n    ) public view returns (bool) {\n        BetInfo memory betInfo = ledger[epoch][user];\n        Round memory round = rounds[epoch];\n        return\n            !round.oracleCalled &&\n            !betInfo.claimed &&\n            block.timestamp > round.closeTimestamp + bufferSeconds &&\n            betInfo.amount != 0;\n    }\n\n    /**\n     * @notice Calculate rewards for round\n     * @param epoch: epoch\n     */\n    function _calculateRewards(uint256 epoch) internal {\n        require(\n            rounds[epoch].rewardBaseCalAmount == 0 &&\n                rounds[epoch].rewardAmount == 0,\n            \"Rewards calculated\"\n        );\n        Round storage round = rounds[epoch];\n        uint256 rewardBaseCalAmount;\n        uint256 treasuryAmt;\n        uint256 rewardAmount;\n\n        // Bull wins\n        if (round.closePrice > round.lockPrice) {\n            rewardBaseCalAmount = round.bullAmount;\n            treasuryAmt = (round.totalAmount * treasuryFee) / 10000;\n            rewardAmount = round.totalAmount - treasuryAmt;\n        }\n        // Bear wins\n        else if (round.closePrice < round.lockPrice) {\n            rewardBaseCalAmount = round.bearAmount;\n            treasuryAmt = (round.totalAmount * treasuryFee) / 10000;\n            rewardAmount = round.totalAmount - treasuryAmt;\n        }\n        // House wins\n        else {\n            rewardBaseCalAmount = 0;\n            rewardAmount = 0;\n            treasuryAmt = round.totalAmount;\n        }\n        round.rewardBaseCalAmount = rewardBaseCalAmount;\n        round.rewardAmount = rewardAmount;\n\n        // Add to treasury\n        treasuryAmount += treasuryAmt;\n\n        emit RewardsCalculated(\n            epoch,\n            rewardBaseCalAmount,\n            rewardAmount,\n            treasuryAmt\n        );\n    }\n\n    /**\n     * @notice End round\n     * @param epoch: epoch\n     * @param roundId: roundId\n     * @param price: price of the round\n     */\n    function _safeEndRound(\n        uint256 epoch,\n        uint256 roundId,\n        int256 price\n    ) internal {\n        require(\n            rounds[epoch].lockTimestamp != 0,\n            \"Can only end round after round has locked\"\n        );\n        require(\n            block.timestamp >= rounds[epoch].closeTimestamp,\n            \"Can only end round after closeTimestamp\"\n        );\n        require(\n            block.timestamp <= rounds[epoch].closeTimestamp + bufferSeconds,\n            \"Can only end round within bufferSeconds\"\n        );\n        Round storage round = rounds[epoch];\n        round.closePrice = price;\n        round.closeOracleId = roundId;\n        round.oracleCalled = true;\n\n        emit EndRound(epoch, roundId, round.closePrice);\n    }\n\n    /**\n     * @notice Lock round\n     * @param epoch: epoch\n     * @param roundId: roundId\n     * @param price: price of the round\n     */\n    function _safeLockRound(\n        uint256 epoch,\n        uint256 roundId,\n        int256 price\n    ) internal {\n        require(\n            rounds[epoch].startTimestamp != 0,\n            \"Can only lock round after round has started\"\n        );\n        require(\n            block.timestamp >= rounds[epoch].lockTimestamp,\n            \"Can only lock round after lockTimestamp\"\n        );\n        require(\n            block.timestamp <= rounds[epoch].lockTimestamp + bufferSeconds,\n            \"Can only lock round within bufferSeconds\"\n        );\n        Round storage round = rounds[epoch];\n        round.closeTimestamp = block.timestamp + intervalSeconds;\n        round.lockPrice = price;\n        round.lockOracleId = roundId;\n\n        emit LockRound(epoch, roundId, round.lockPrice);\n    }\n\n    /**\n     * @notice Start round\n     * Previous round n-2 must end\n     * @param epoch: epoch\n     */\n    function _safeStartRound(uint256 epoch) internal {\n        require(\n            genesisStartOnce,\n            \"Can only run after genesisStartRound is triggered\"\n        );\n        require(\n            rounds[epoch - 2].closeTimestamp != 0,\n            \"Can only start round after round n-2 has ended\"\n        );\n        require(\n            block.timestamp >= rounds[epoch - 2].closeTimestamp,\n            \"Can only start new round after round n-2 closeTimestamp\"\n        );\n        _startRound(epoch);\n    }\n\n    /**\n     * @notice Start round\n     * Previous round n-2 must end\n     * @param epoch: epoch\n     */\n    function _startRound(uint256 epoch) internal {\n        Round storage round = rounds[epoch];\n        round.startTimestamp = block.timestamp;\n        round.lockTimestamp = block.timestamp + intervalSeconds;\n        round.closeTimestamp = block.timestamp + (2 * intervalSeconds);\n        round.epoch = epoch;\n        round.totalAmount = 0;\n\n        emit StartRound(epoch);\n    }\n\n    /**\n     * @notice Determine if a round is valid for receiving bets\n     * Round must have started and locked\n     * Current timestamp must be within startTimestamp and closeTimestamp\n     */\n    function _bettable(uint256 epoch) internal view returns (bool) {\n        return\n            rounds[epoch].startTimestamp != 0 &&\n            rounds[epoch].lockTimestamp != 0 &&\n            block.timestamp > rounds[epoch].startTimestamp &&\n            block.timestamp < rounds[epoch].lockTimestamp;\n    }\n\n    /**\n     * @notice Get latest recorded price from oracle\n     * If it falls below allowed buffer or has not updated, it would be invalid.\n     */\n    function _getPriceFromOracle() internal view returns (uint80, int256) {\n        uint256 leastAllowedTimestamp = block.timestamp + oracleUpdateAllowance;\n        (uint80 roundId, int256 price, , uint256 timestamp, ) = oracle\n            .latestRoundData();\n        require(\n            timestamp <= leastAllowedTimestamp,\n            \"Oracle update exceeded max timestamp allowance\"\n        );\n        require(\n            uint256(roundId) > oracleLatestRoundId,\n            \"Oracle update roundId must be larger than oracleLatestRoundId\"\n        );\n        return (roundId, price);\n    }\n\n    /**\n     * @notice Returns true if `account` is a contract.\n     * @param account: account address\n     */\n    function _isContract(address account) internal view returns (bool) {\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 99999
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "6321",
        "formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
        "message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 7863,
          "file": "@openzeppelin/contracts/utils/Address.sol",
          "start": 7851
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "6321",
        "formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
        "message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 8678,
          "file": "@openzeppelin/contracts/utils/Address.sol",
          "start": 8666
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              45
            ]
          },
          "id": 46,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 45,
              "linearizedBaseContracts": [
                45
              ],
              "name": "AggregatorV3Interface",
              "nameLocation": "67:21:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 6,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "102:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "110:2:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 6,
                        "src": "136:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "136:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "135:7:0"
                  },
                  "scope": 45,
                  "src": "93:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7284e416",
                  "id": 11,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "description",
                  "nameLocation": "156:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "167:2:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "193:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "193:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "192:15:0"
                  },
                  "scope": 45,
                  "src": "147:61:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "54fd4d50",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nameLocation": "221:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "228:2:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "254:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "254:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "253:9:0"
                  },
                  "scope": 45,
                  "src": "212:51:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9a6fc8f5",
                  "id": 31,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundData",
                  "nameLocation": "487:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "_roundId",
                        "nameLocation": "507:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "500:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "500:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "499:17:0"
                  },
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "566:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "559:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "559:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "588:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "581:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "581:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "610:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "602:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "602:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "635:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "627:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "627:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "659:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "652:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "551:129:0"
                  },
                  "scope": 45,
                  "src": "478:203:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "feaf968c",
                  "id": 44,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "694:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "709:2:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "761:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "754:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "754:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "783:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "776:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "776:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "805:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "797:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "797:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "830:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "822:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "854:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "847:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "847:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "746:129:0"
                  },
                  "scope": 45,
                  "src": "685:191:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 46,
              "src": "57:821:0",
              "usedErrors": []
            }
          ],
          "src": "32:847:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1181
            ],
            "Ownable": [
              158
            ]
          },
          "id": 159,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 47,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 48,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 159,
              "sourceUnit": 1182,
              "src": "127:30:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 50,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1181,
                    "src": "683:7:1"
                  },
                  "id": 51,
                  "nodeType": "InheritanceSpecifier",
                  "src": "683:7:1"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 49,
                "nodeType": "StructuredDocumentation",
                "src": "159:494:1",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 158,
              "linearizedBaseContracts": [
                158,
                1181
              ],
              "name": "Ownable",
              "nameLocation": "672:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "713:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "697:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 59,
                  "name": "OwnershipTransferred",
                  "nameLocation": "732:20:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 58,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 55,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "769:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "753:29:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "753:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 57,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "800:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "784:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "752:57:1"
                  },
                  "src": "726:84:1"
                },
                {
                  "body": {
                    "id": 68,
                    "nodeType": "Block",
                    "src": "926:49:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 64,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1163,
                                "src": "955:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 65,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "955:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 63,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "936:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67,
                        "nodeType": "ExpressionStatement",
                        "src": "936:32:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 60,
                    "nodeType": "StructuredDocumentation",
                    "src": "816:91:1",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 69,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 61,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "923:2:1"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "926:0:1"
                  },
                  "scope": 158,
                  "src": "912:63:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 76,
                    "nodeType": "Block",
                    "src": "1084:41:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 72,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1094:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1094:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "1094:13:1"
                      },
                      {
                        "id": 75,
                        "nodeType": "PlaceholderStatement",
                        "src": "1117:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 70,
                    "nodeType": "StructuredDocumentation",
                    "src": "981:77:1",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 77,
                  "name": "onlyOwner",
                  "nameLocation": "1072:9:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1081:2:1"
                  },
                  "src": "1063:62:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 85,
                    "nodeType": "Block",
                    "src": "1256:30:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 83,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1273:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 82,
                        "id": 84,
                        "nodeType": "Return",
                        "src": "1266:13:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 78,
                    "nodeType": "StructuredDocumentation",
                    "src": "1131:65:1",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 86,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1210:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 79,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1215:2:1"
                  },
                  "returnParameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 86,
                        "src": "1247:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1247:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1246:9:1"
                  },
                  "scope": 158,
                  "src": "1201:85:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1404:85:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 91,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "1422:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1422:7:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 93,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1163,
                                  "src": "1433:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1433:12:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1422:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1447:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 90,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1414:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:68:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:68:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 87,
                    "nodeType": "StructuredDocumentation",
                    "src": "1292:62:1",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 100,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1368:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1379:2:1"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1404:0:1"
                  },
                  "scope": 158,
                  "src": "1359:130:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "1878:47:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1915:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1907:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 107,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1907:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1907:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 106,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "1888:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "1888:30:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 101,
                    "nodeType": "StructuredDocumentation",
                    "src": "1495:324:1",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "1868:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1868:9:1"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1833:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1850:2:1"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1878:0:1"
                  },
                  "scope": 158,
                  "src": "1824:101:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 136,
                    "nodeType": "Block",
                    "src": "2144:128:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 123,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 117,
                                "src": "2162:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2182:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2174:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 124,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2174:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2174:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2162:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2186:40:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 122,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2154:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2154:73:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 131,
                        "nodeType": "ExpressionStatement",
                        "src": "2154:73:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 133,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2256:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 132,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "2237:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2237:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "2237:28:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "1931:138:1",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 137,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 120,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 119,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "2134:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2134:9:1"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2083:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2109:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "2101:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2101:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2100:18:1"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2144:0:1"
                  },
                  "scope": 158,
                  "src": "2074:198:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "2489:124:1",
                    "statements": [
                      {
                        "assignments": [
                          144
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 144,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2507:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 156,
                            "src": "2499:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 143,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2499:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 146,
                        "initialValue": {
                          "id": 145,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2518:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2499:25:1"
                      },
                      {
                        "expression": {
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 147,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "2534:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 148,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "2543:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2534:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "2534:17:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 152,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "2587:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 153,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "2597:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 151,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "2566:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2566:40:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 155,
                        "nodeType": "EmitStatement",
                        "src": "2561:45:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 138,
                    "nodeType": "StructuredDocumentation",
                    "src": "2278:143:1",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 157,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2435:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2462:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "2454:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2454:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2453:18:1"
                  },
                  "returnParameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2489:0:1"
                  },
                  "scope": 158,
                  "src": "2426:187:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 159,
              "src": "654:1961:1",
              "usedErrors": []
            }
          ],
          "src": "102:2514:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1181
            ],
            "Pausable": [
              266
            ]
          },
          "id": 267,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 160,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:23:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 161,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 267,
              "sourceUnit": 1182,
              "src": "130:30:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 163,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1181,
                    "src": "632:7:2"
                  },
                  "id": 164,
                  "nodeType": "InheritanceSpecifier",
                  "src": "632:7:2"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 162,
                "nodeType": "StructuredDocumentation",
                "src": "162:439:2",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 266,
              "linearizedBaseContracts": [
                266,
                1181
              ],
              "name": "Pausable",
              "nameLocation": "620:8:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "646:73:2",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "id": 169,
                  "name": "Paused",
                  "nameLocation": "730:6:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "745:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "737:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "737:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "736:17:2"
                  },
                  "src": "724:30:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "760:70:2",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "id": 174,
                  "name": "Unpaused",
                  "nameLocation": "841:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "858:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "850:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:17:2"
                  },
                  "src": "835:32:2"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "886:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "873:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 184,
                    "nodeType": "Block",
                    "src": "986:32:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 180,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "996:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1006:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "996:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 183,
                        "nodeType": "ExpressionStatement",
                        "src": "996:15:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 177,
                    "nodeType": "StructuredDocumentation",
                    "src": "900:67:2",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 185,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "983:2:2"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "986:0:2"
                  },
                  "scope": 266,
                  "src": "972:46:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "1229:47:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 188,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "1239:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1239:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:19:2"
                      },
                      {
                        "id": 191,
                        "nodeType": "PlaceholderStatement",
                        "src": "1268:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 186,
                    "nodeType": "StructuredDocumentation",
                    "src": "1024:175:2",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 193,
                  "name": "whenNotPaused",
                  "nameLocation": "1213:13:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1226:2:2"
                  },
                  "src": "1204:72:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 200,
                    "nodeType": "Block",
                    "src": "1476:44:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 196,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "1486:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:16:2"
                      },
                      {
                        "id": 199,
                        "nodeType": "PlaceholderStatement",
                        "src": "1512:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 194,
                    "nodeType": "StructuredDocumentation",
                    "src": "1282:167:2",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 201,
                  "name": "whenPaused",
                  "nameLocation": "1463:10:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1473:2:2"
                  },
                  "src": "1454:66:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 209,
                    "nodeType": "Block",
                    "src": "1668:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 207,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "1685:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 206,
                        "id": 208,
                        "nodeType": "Return",
                        "src": "1678:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 202,
                    "nodeType": "StructuredDocumentation",
                    "src": "1526:84:2",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 210,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1624:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1630:2:2"
                  },
                  "returnParameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "1662:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1662:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1661:6:2"
                  },
                  "scope": 266,
                  "src": "1615:84:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "1818:55:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1836:9:2",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 215,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "1837:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1837:8:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a20706175736564",
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1847:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              },
                              "value": "Pausable: paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              }
                            ],
                            "id": 214,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1828:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:38:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 220,
                        "nodeType": "ExpressionStatement",
                        "src": "1828:38:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 211,
                    "nodeType": "StructuredDocumentation",
                    "src": "1705:57:2",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 222,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1776:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1793:2:2"
                  },
                  "returnParameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1818:0:2"
                  },
                  "scope": 266,
                  "src": "1767:106:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "1993:58:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 227,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "2011:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2011:8:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a206e6f7420706175736564",
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2021:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              },
                              "value": "Pausable: not paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              }
                            ],
                            "id": 226,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2003:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2003:41:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "2003:41:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 223,
                    "nodeType": "StructuredDocumentation",
                    "src": "1879:61:2",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 233,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "1954:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1968:2:2"
                  },
                  "returnParameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1993:0:2"
                  },
                  "scope": 266,
                  "src": "1945:106:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 248,
                    "nodeType": "Block",
                    "src": "2235:66:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 239,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "2245:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2255:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2245:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:14:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 244,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1163,
                                "src": "2281:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2281:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 243,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "2274:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2274:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 247,
                        "nodeType": "EmitStatement",
                        "src": "2269:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "2057:124:2",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 249,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 237,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 236,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "2221:13:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2221:13:2"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2195:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2201:2:2"
                  },
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2235:0:2"
                  },
                  "scope": 266,
                  "src": "2186:115:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "2481:69:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 255,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "2491:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2501:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2491:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 258,
                        "nodeType": "ExpressionStatement",
                        "src": "2491:15:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 260,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1163,
                                "src": "2530:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2530:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 259,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "2521:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2521:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 263,
                        "nodeType": "EmitStatement",
                        "src": "2516:27:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "2307:121:2",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 265,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 253,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 252,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "2470:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2470:10:2"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2442:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2450:2:2"
                  },
                  "returnParameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2481:0:2"
                  },
                  "scope": 266,
                  "src": "2433:117:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 267,
              "src": "602:1950:2",
              "usedErrors": []
            }
          ],
          "src": "105:2448:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              331
            ]
          },
          "id": 332,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 268,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:23:3"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 269,
                "nodeType": "StructuredDocumentation",
                "src": "137:750:3",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 331,
              "linearizedBaseContracts": [
                331
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "906:15:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 272,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1701:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 331,
                  "src": "1676:41:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 275,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1748:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 331,
                  "src": "1723:37:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1759:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1783:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 331,
                  "src": "1767:23:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 284,
                    "nodeType": "Block",
                    "src": "1811:39:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 280,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "1821:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 281,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "1831:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1821:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 283,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:22:3"
                      }
                    ]
                  },
                  "id": 285,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1808:2:3"
                  },
                  "returnParameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1811:0:3"
                  },
                  "scope": 331,
                  "src": "1797:53:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "2251:79:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 288,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "2261:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 290,
                        "nodeType": "ExpressionStatement",
                        "src": "2261:21:3"
                      },
                      {
                        "id": 291,
                        "nodeType": "PlaceholderStatement",
                        "src": "2292:1:3"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 292,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "2303:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2303:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "2303:20:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 286,
                    "nodeType": "StructuredDocumentation",
                    "src": "1856:366:3",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 296,
                  "name": "nonReentrant",
                  "nameLocation": "2236:12:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2248:2:3"
                  },
                  "src": "2227:103:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 310,
                    "nodeType": "Block",
                    "src": "2375:248:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 300,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "2468:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 301,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 275,
                                "src": "2479:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2468:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2489:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 299,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2460:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:63:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "2460:63:3"
                      },
                      {
                        "expression": {
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 306,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "2598:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 307,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "2608:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2598:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 309,
                        "nodeType": "ExpressionStatement",
                        "src": "2598:18:3"
                      }
                    ]
                  },
                  "id": 311,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2345:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 297,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2364:2:3"
                  },
                  "returnParameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2375:0:3"
                  },
                  "scope": 331,
                  "src": "2336:287:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 318,
                    "nodeType": "Block",
                    "src": "2667:171:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 314,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "2809:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 315,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "2819:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2809:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "2809:22:3"
                      }
                    ]
                  },
                  "id": 319,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2638:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 312,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2656:2:3"
                  },
                  "returnParameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2667:0:3"
                  },
                  "scope": 331,
                  "src": "2629:209:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "3081:43:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 325,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "3098:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 326,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "3109:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3098:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 324,
                        "id": 328,
                        "nodeType": "Return",
                        "src": "3091:26:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "2844:168:3",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3026:23:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3049:2:3"
                  },
                  "returnParameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "3075:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3075:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3074:6:3"
                  },
                  "scope": 331,
                  "src": "3017:107:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 332,
              "src": "888:2238:3",
              "usedErrors": []
            }
          ],
          "src": "112:3015:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              409
            ]
          },
          "id": 410,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 333,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 334,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:4",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 409,
              "linearizedBaseContracts": [
                409
              ],
              "name": "IERC20",
              "nameLocation": "212:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 335,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 343,
                  "name": "Transfer",
                  "nameLocation": "394:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 337,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "419:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "403:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "403:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "441:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "425:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "453:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "445:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "402:57:4"
                  },
                  "src": "388:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 344,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 352,
                  "name": "Approval",
                  "nameLocation": "625:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "650:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 352,
                        "src": "634:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 348,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "673:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 352,
                        "src": "657:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 350,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "690:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 352,
                        "src": "682:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:63:4"
                  },
                  "src": "619:78:4"
                },
                {
                  "documentation": {
                    "id": 353,
                    "nodeType": "StructuredDocumentation",
                    "src": "703:66:4",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 358,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:4"
                  },
                  "returnParameters": {
                    "id": 357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "820:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:4"
                  },
                  "scope": 409,
                  "src": "774:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 359,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:72:4",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 366,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 409,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 367,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:202:4",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 376,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1202:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1219:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "1211:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1231:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "1223:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1210:28:4"
                  },
                  "returnParameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "1257:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1256:6:4"
                  },
                  "scope": 409,
                  "src": "1193:70:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 377,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 386,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1547:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1565:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "1557:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 381,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1580:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "1572:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 380,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1572:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:32:4"
                  },
                  "returnParameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "1612:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1611:9:4"
                  },
                  "scope": 409,
                  "src": "1538:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 387,
                    "nodeType": "StructuredDocumentation",
                    "src": "1627:642:4",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 396,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2283:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 389,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2299:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 396,
                        "src": "2291:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 388,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2316:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 396,
                        "src": "2308:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:33:4"
                  },
                  "returnParameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 396,
                        "src": "2342:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2341:6:4"
                  },
                  "scope": 409,
                  "src": "2274:74:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 397,
                    "nodeType": "StructuredDocumentation",
                    "src": "2354:287:4",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 408,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2655:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 399,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2676:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2668:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2668:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2690:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2682:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2682:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2702:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2694:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2694:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2667:42:4"
                  },
                  "returnParameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2728:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2727:6:4"
                  },
                  "scope": 409,
                  "src": "2646:88:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 410,
              "src": "202:2534:4",
              "usedErrors": []
            }
          ],
          "src": "106:2631:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
          "exportedSymbols": {
            "IERC20Permit": [
              445
            ]
          },
          "id": 446,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 411,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "123:23:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 412,
                "nodeType": "StructuredDocumentation",
                "src": "148:1963:5",
                "text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
              },
              "fullyImplemented": false,
              "id": 445,
              "linearizedBaseContracts": [
                445
              ],
              "name": "IERC20Permit",
              "nameLocation": "2122:12:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 413,
                    "nodeType": "StructuredDocumentation",
                    "src": "2141:850:5",
                    "text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
                  },
                  "functionSelector": "d505accf",
                  "id": 430,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "3005:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3029:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3021:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3021:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3052:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3044:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3044:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3077:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3069:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3069:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "3100:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3092:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3092:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "3124:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3118:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3118:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3143:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3135:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3135:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 427,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "3162:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3154:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3154:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3011:158:5"
                  },
                  "returnParameters": {
                    "id": 429,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3178:0:5"
                  },
                  "scope": 445,
                  "src": "2996:183:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 431,
                    "nodeType": "StructuredDocumentation",
                    "src": "3185:294:5",
                    "text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
                  },
                  "functionSelector": "7ecebe00",
                  "id": 438,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "3493:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 434,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3508:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "3500:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3500:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3499:15:5"
                  },
                  "returnParameters": {
                    "id": 437,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "3538:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3538:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3537:9:5"
                  },
                  "scope": 445,
                  "src": "3484:63:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 439,
                    "nodeType": "StructuredDocumentation",
                    "src": "3553:128:5",
                    "text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
                  },
                  "functionSelector": "3644e515",
                  "id": 444,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "3748:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3764:2:5"
                  },
                  "returnParameters": {
                    "id": 443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "3790:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3790:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3789:9:5"
                  },
                  "scope": 445,
                  "src": "3739:60:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 446,
              "src": "2112:1689:5",
              "usedErrors": []
            }
          ],
          "src": "123:3679:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "Address": [
              1151
            ],
            "IERC20": [
              409
            ],
            "IERC20Permit": [
              445
            ],
            "SafeERC20": [
              821
            ]
          },
          "id": 822,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 447,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:23:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 448,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 822,
              "sourceUnit": 410,
              "src": "140:23:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
              "file": "../extensions/IERC20Permit.sol",
              "id": 449,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 822,
              "sourceUnit": 446,
              "src": "164:40:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../../utils/Address.sol",
              "id": 450,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 822,
              "sourceUnit": 1152,
              "src": "205:36:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 451,
                "nodeType": "StructuredDocumentation",
                "src": "243:457:6",
                "text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 821,
              "linearizedBaseContracts": [
                821
              ],
              "name": "SafeERC20",
              "nameLocation": "709:9:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 454,
                  "libraryName": {
                    "id": 452,
                    "name": "Address",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1151,
                    "src": "731:7:6"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "725:26:6",
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "body": {
                    "id": 477,
                    "nodeType": "Block",
                    "src": "1013:103:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 466,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "1043:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 469,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 458,
                                      "src": "1073:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$409",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 470,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 376,
                                    "src": "1073:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1073:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 472,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 460,
                                  "src": "1098:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 473,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 462,
                                  "src": "1102:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 467,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1050:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1050:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1050:58:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 465,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "1023:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1023:86:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 476,
                        "nodeType": "ExpressionStatement",
                        "src": "1023:86:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 455,
                    "nodeType": "StructuredDocumentation",
                    "src": "757:179:6",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 478,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "950:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "970:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "963:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 457,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 456,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "963:6:6"
                          },
                          "referencedDeclaration": 409,
                          "src": "963:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "985:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "977:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 462,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "997:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "989:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "989:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "962:41:6"
                  },
                  "returnParameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:0:6"
                  },
                  "scope": 821,
                  "src": "941:175:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 504,
                    "nodeType": "Block",
                    "src": "1445:113:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 492,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 482,
                              "src": "1475:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 495,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 482,
                                      "src": "1505:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$409",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 496,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 408,
                                    "src": "1505:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1505:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 498,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 484,
                                  "src": "1534:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 499,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 486,
                                  "src": "1540:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 500,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 488,
                                  "src": "1544:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 493,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1482:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1482:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1482:68:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 491,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "1455:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1455:96:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "1455:96:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 479,
                    "nodeType": "StructuredDocumentation",
                    "src": "1122:228:6",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 505,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1364:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1388:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "1381:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 481,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 480,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "1381:6:6"
                          },
                          "referencedDeclaration": 409,
                          "src": "1381:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 484,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1403:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "1395:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1395:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 486,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1417:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "1409:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 485,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1409:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1429:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "1421:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1421:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1380:55:6"
                  },
                  "returnParameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1445:0:6"
                  },
                  "scope": 821,
                  "src": "1355:203:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 548,
                    "nodeType": "Block",
                    "src": "1894:497:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 517,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 513,
                                      "src": "2143:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 518,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2152:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "2143:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 520,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2142:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 530,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 525,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "2183:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SafeERC20_$821",
                                                "typeString": "library SafeERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_SafeERC20_$821",
                                                "typeString": "library SafeERC20"
                                              }
                                            ],
                                            "id": 524,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2175:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 523,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2175:7:6",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 526,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2175:13:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 527,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 511,
                                          "src": "2190:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 521,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 509,
                                          "src": "2159:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$409",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 522,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 386,
                                        "src": "2159:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 528,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2159:39:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 529,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2202:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "2159:44:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 531,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2158:46:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2142:62:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2218:56:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                                "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                              },
                              "value": "SafeERC20: approve from non-zero to non-zero allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                                "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                              }
                            ],
                            "id": 516,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2121:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2121:163:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 535,
                        "nodeType": "ExpressionStatement",
                        "src": "2121:163:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 537,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 509,
                              "src": "2314:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 540,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 509,
                                      "src": "2344:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$409",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 541,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 396,
                                    "src": "2344:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2344:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 543,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 511,
                                  "src": "2368:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 544,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 513,
                                  "src": "2377:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 538,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2321:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2321:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2321:62:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 536,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "2294:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2294:90:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 547,
                        "nodeType": "ExpressionStatement",
                        "src": "2294:90:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 506,
                    "nodeType": "StructuredDocumentation",
                    "src": "1564:249:6",
                    "text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
                  },
                  "id": 549,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeApprove",
                  "nameLocation": "1827:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 509,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1846:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 549,
                        "src": "1839:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 508,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 507,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "1839:6:6"
                          },
                          "referencedDeclaration": 409,
                          "src": "1839:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 511,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1861:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 549,
                        "src": "1853:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 510,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 513,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1878:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 549,
                        "src": "1870:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1870:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:46:6"
                  },
                  "returnParameters": {
                    "id": 515,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1894:0:6"
                  },
                  "scope": 821,
                  "src": "1818:573:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 585,
                    "nodeType": "Block",
                    "src": "2668:194:6",
                    "statements": [
                      {
                        "assignments": [
                          561
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 561,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "2686:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 585,
                            "src": "2678:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 560,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2678:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 570,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 566,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2725:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$821",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$821",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2717:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 564,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2717:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2717:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 568,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "2732:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 562,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "2701:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 386,
                            "src": "2701:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2701:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2678:62:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 572,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "2770:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 575,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "2800:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$409",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 576,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 396,
                                    "src": "2800:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2800:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 578,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 555,
                                  "src": "2824:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 581,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 579,
                                    "name": "oldAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 561,
                                    "src": "2833:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 580,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 557,
                                    "src": "2848:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2833:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 573,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2777:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2777:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2777:77:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 571,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "2750:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2750:105:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 584,
                        "nodeType": "ExpressionStatement",
                        "src": "2750:105:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 550,
                    "nodeType": "StructuredDocumentation",
                    "src": "2397:180:6",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 586,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "2591:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2620:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "2613:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 552,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 551,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "2613:6:6"
                          },
                          "referencedDeclaration": 409,
                          "src": "2613:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2635:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "2627:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2627:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 557,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2652:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "2644:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2644:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2612:46:6"
                  },
                  "returnParameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2668:0:6"
                  },
                  "scope": 821,
                  "src": "2582:280:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 630,
                    "nodeType": "Block",
                    "src": "3139:321:6",
                    "statements": [
                      {
                        "id": 629,
                        "nodeType": "UncheckedBlock",
                        "src": "3149:305:6",
                        "statements": [
                          {
                            "assignments": [
                              598
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 598,
                                "mutability": "mutable",
                                "name": "oldAllowance",
                                "nameLocation": "3181:12:6",
                                "nodeType": "VariableDeclaration",
                                "scope": 629,
                                "src": "3173:20:6",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 597,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3173:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 607,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 603,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3220:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$821",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$821",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 602,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3212:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 601,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3212:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3212:13:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 605,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 592,
                                  "src": "3227:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 599,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 590,
                                  "src": "3196:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$409",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 386,
                                "src": "3196:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3196:39:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3173:62:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 611,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 609,
                                    "name": "oldAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 598,
                                    "src": "3257:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 610,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 594,
                                    "src": "3273:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3257:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                                  "id": 612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3280:43:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                                    "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                                  },
                                  "value": "SafeERC20: decreased allowance below zero"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                                    "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                                  }
                                ],
                                "id": 608,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "3249:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3249:75:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 614,
                            "nodeType": "ExpressionStatement",
                            "src": "3249:75:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 616,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 590,
                                  "src": "3358:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$409",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 619,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 590,
                                          "src": "3388:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$409",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 620,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 396,
                                        "src": "3388:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 621,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "3388:22:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    {
                                      "id": 622,
                                      "name": "spender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 592,
                                      "src": "3412:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 625,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 623,
                                        "name": "oldAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 598,
                                        "src": "3421:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 624,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 594,
                                        "src": "3436:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3421:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 617,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "3365:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSelector",
                                    "nodeType": "MemberAccess",
                                    "src": "3365:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes4) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3365:77:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$409",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 615,
                                "name": "_callOptionalReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 772,
                                "src": "3338:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (contract IERC20,bytes memory)"
                                }
                              },
                              "id": 627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3338:105:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 628,
                            "nodeType": "ExpressionStatement",
                            "src": "3338:105:6"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 587,
                    "nodeType": "StructuredDocumentation",
                    "src": "2868:180:6",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 631,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "3062:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3091:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "3084:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 589,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 588,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "3084:6:6"
                          },
                          "referencedDeclaration": 409,
                          "src": "3084:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3106:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "3098:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3098:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3123:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "3115:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3115:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3083:46:6"
                  },
                  "returnParameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3139:0:6"
                  },
                  "scope": 821,
                  "src": "3053:407:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 677,
                    "nodeType": "Block",
                    "src": "3856:333:6",
                    "statements": [
                      {
                        "assignments": [
                          643
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 643,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "3879:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 677,
                            "src": "3866:25:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 642,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3866:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 652,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 646,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 635,
                                  "src": "3917:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$409",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "approve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 396,
                                "src": "3917:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "3917:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 649,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "3941:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 650,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 639,
                              "src": "3950:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 644,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3894:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "3894:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3894:62:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3866:90:6"
                      },
                      {
                        "condition": {
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3971:45:6",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 654,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "3996:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$409",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 655,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 643,
                                "src": "4003:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$409",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 653,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 820,
                              "src": "3972:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3972:44:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 676,
                        "nodeType": "IfStatement",
                        "src": "3967:216:6",
                        "trueBody": {
                          "id": 675,
                          "nodeType": "Block",
                          "src": "4018:165:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 659,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 635,
                                    "src": "4052:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 662,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 635,
                                            "src": "4082:5:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$409",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 663,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "approve",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 396,
                                          "src": "4082:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function (address,uint256) external returns (bool)"
                                          }
                                        },
                                        "id": 664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "4082:22:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      {
                                        "id": 665,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 637,
                                        "src": "4106:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "hexValue": "30",
                                        "id": 666,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4115:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "expression": {
                                        "id": 660,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "4059:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 661,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodeWithSelector",
                                      "nodeType": "MemberAccess",
                                      "src": "4059:22:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4059:58:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 658,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 772,
                                  "src": "4032:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4032:86:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 669,
                              "nodeType": "ExpressionStatement",
                              "src": "4032:86:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 671,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 635,
                                    "src": "4152:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 672,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 643,
                                    "src": "4159:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 670,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 772,
                                  "src": "4132:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4132:40:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 674,
                              "nodeType": "ExpressionStatement",
                              "src": "4132:40:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 632,
                    "nodeType": "StructuredDocumentation",
                    "src": "3466:308:6",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
                  },
                  "id": 678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "3788:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3808:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "3801:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 634,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 633,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "3801:6:6"
                          },
                          "referencedDeclaration": 409,
                          "src": "3801:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 637,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3823:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "3815:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3815:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3840:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "3832:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3800:46:6"
                  },
                  "returnParameters": {
                    "id": 641,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3856:0:6"
                  },
                  "scope": 821,
                  "src": "3779:410:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "4556:257:6",
                    "statements": [
                      {
                        "assignments": [
                          700
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 700,
                            "mutability": "mutable",
                            "name": "nonceBefore",
                            "nameLocation": "4574:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 734,
                            "src": "4566:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 699,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4566:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 705,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 703,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4601:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 701,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "4588:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Permit_$445",
                                "typeString": "contract IERC20Permit"
                              }
                            },
                            "id": 702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonces",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 438,
                            "src": "4588:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4588:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4566:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 709,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4630:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 710,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "4637:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 711,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4646:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 712,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4653:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 713,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "4663:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 714,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "4666:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 715,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "4669:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 706,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "4617:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Permit_$445",
                                "typeString": "contract IERC20Permit"
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "permit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 430,
                            "src": "4617:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4617:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 717,
                        "nodeType": "ExpressionStatement",
                        "src": "4617:54:6"
                      },
                      {
                        "assignments": [
                          719
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 719,
                            "mutability": "mutable",
                            "name": "nonceAfter",
                            "nameLocation": "4689:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 734,
                            "src": "4681:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 718,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4681:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 724,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 722,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4715:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 720,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "4702:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Permit_$445",
                                "typeString": "contract IERC20Permit"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonces",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 438,
                            "src": "4702:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4702:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4681:40:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 726,
                                "name": "nonceAfter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 719,
                                "src": "4739:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 727,
                                  "name": "nonceBefore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 700,
                                  "src": "4753:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4767:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4753:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4739:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4770:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
                                "typeString": "literal_string \"SafeERC20: permit did not succeed\""
                              },
                              "value": "SafeERC20: permit did not succeed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
                                "typeString": "literal_string \"SafeERC20: permit did not succeed\""
                              }
                            ],
                            "id": 725,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4731:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4731:75:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "4731:75:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 679,
                    "nodeType": "StructuredDocumentation",
                    "src": "4195:141:6",
                    "text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
                  },
                  "id": 735,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safePermit",
                  "nameLocation": "4350:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 697,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4383:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "4370:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$445",
                          "typeString": "contract IERC20Permit"
                        },
                        "typeName": {
                          "id": 681,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 680,
                            "name": "IERC20Permit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 445,
                            "src": "4370:12:6"
                          },
                          "referencedDeclaration": 445,
                          "src": "4370:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Permit_$445",
                            "typeString": "contract IERC20Permit"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4406:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "4398:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4398:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4429:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "4421:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4421:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4454:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "4446:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4446:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 690,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "4477:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "4469:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4469:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 692,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "4501:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "4495:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4495:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4520:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "4512:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4512:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 696,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "4539:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "4531:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4531:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4360:186:6"
                  },
                  "returnParameters": {
                    "id": 698,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4556:0:6"
                  },
                  "scope": 821,
                  "src": "4341:472:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 771,
                    "nodeType": "Block",
                    "src": "5266:572:6",
                    "statements": [
                      {
                        "assignments": [
                          745
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 745,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5628:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 771,
                            "src": "5615:23:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 744,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5615:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 754,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 751,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "5669:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5675:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              },
                              "value": "SafeERC20: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 748,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 739,
                                  "src": "5649:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$409",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$409",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5641:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 746,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5641:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5641:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 911,
                            "src": "5641:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5641:69:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5615:95:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 756,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 745,
                                    "src": "5728:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5728:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5749:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5728:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 762,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 745,
                                    "src": "5765:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 764,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5778:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        },
                                        "typeName": {
                                          "id": 763,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5778:4:6",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 765,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5777:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 760,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5754:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "5754:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5754:30:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5728:56:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5786:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                              },
                              "value": "SafeERC20: ERC20 operation did not succeed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                              }
                            ],
                            "id": 755,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5720:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5720:111:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 770,
                        "nodeType": "ExpressionStatement",
                        "src": "5720:111:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 736,
                    "nodeType": "StructuredDocumentation",
                    "src": "4819:372:6",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
                  },
                  "id": 772,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "5205:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 739,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5232:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "5225:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 738,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 737,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "5225:6:6"
                          },
                          "referencedDeclaration": 409,
                          "src": "5225:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 741,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5252:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "5239:17:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5239:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5224:33:6"
                  },
                  "returnParameters": {
                    "id": 743,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5266:0:6"
                  },
                  "scope": 821,
                  "src": "5196:642:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 819,
                    "nodeType": "Block",
                    "src": "6428:505:6",
                    "statements": [
                      {
                        "assignments": [
                          784,
                          786
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 784,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "6729:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 819,
                            "src": "6724:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 783,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6724:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 786,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "6751:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 819,
                            "src": "6738:23:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 785,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6738:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 794,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 792,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "6785:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 789,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 776,
                                  "src": "6773:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$409",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$409",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6765:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 787,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6765:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6765:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "6765:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6765:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6723:67:6"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 795,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "6819:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 799,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 796,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 786,
                                        "src": "6831:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 797,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "6831:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 798,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6852:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "6831:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 802,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 786,
                                        "src": "6868:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 804,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "6881:4:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": {
                                              "id": 803,
                                              "name": "bool",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "6881:4:6",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "id": 805,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "6880:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 800,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "6857:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 801,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "src": "6857:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6857:30:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "6831:56:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 808,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6830:58:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6819:69:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 814,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 776,
                                    "src": "6919:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6911:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 812,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6911:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6911:14:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 810,
                                "name": "Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1151,
                                "src": "6892:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Address_$1151_$",
                                  "typeString": "type(library Address)"
                                }
                              },
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 839,
                              "src": "6892:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6892:34:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6819:107:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 782,
                        "id": 818,
                        "nodeType": "Return",
                        "src": "6800:126:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 773,
                    "nodeType": "StructuredDocumentation",
                    "src": "5844:490:6",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
                  },
                  "id": 820,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "6348:23:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 779,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 776,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6379:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "6372:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 775,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 774,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "6372:6:6"
                          },
                          "referencedDeclaration": 409,
                          "src": "6372:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 778,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6399:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "6386:17:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6386:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6371:33:6"
                  },
                  "returnParameters": {
                    "id": 782,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 781,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "6422:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 780,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6422:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6421:6:6"
                  },
                  "scope": 821,
                  "src": "6339:594:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 822,
              "src": "701:6234:6",
              "usedErrors": []
            }
          ],
          "src": "115:6821:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              1151
            ]
          },
          "id": 1152,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 823,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".1"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 824,
                "nodeType": "StructuredDocumentation",
                "src": "126:67:7",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 1151,
              "linearizedBaseContracts": [
                1151
              ],
              "name": "Address",
              "nameLocation": "202:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 838,
                    "nodeType": "Block",
                    "src": "1478:254:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 832,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 827,
                                "src": "1702:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "1702:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1702:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1724:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1702:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 831,
                        "id": 837,
                        "nodeType": "Return",
                        "src": "1695:30:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 825,
                    "nodeType": "StructuredDocumentation",
                    "src": "216:1191:7",
                    "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
                  },
                  "id": 839,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nameLocation": "1421:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 827,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1440:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 839,
                        "src": "1432:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1432:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1431:17:7"
                  },
                  "returnParameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 839,
                        "src": "1472:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1472:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1471:6:7"
                  },
                  "scope": 1151,
                  "src": "1412:320:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 872,
                    "nodeType": "Block",
                    "src": "2718:241:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 850,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2744:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$1151",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$1151",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2736:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 848,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2736:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2736:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2736:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 853,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "2761:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2736:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2769:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 847,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2728:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2728:73:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 857,
                        "nodeType": "ExpressionStatement",
                        "src": "2728:73:7"
                      },
                      {
                        "assignments": [
                          859,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 859,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2818:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 872,
                            "src": "2813:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 858,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2813:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 866,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2861:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 860,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 842,
                                "src": "2831:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2831:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 862,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "2853:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2831:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2831:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2812:52:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 868,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "2882:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2891:60:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 867,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2874:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2874:78:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 871,
                        "nodeType": "ExpressionStatement",
                        "src": "2874:78:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 840,
                    "nodeType": "StructuredDocumentation",
                    "src": "1738:904:7",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 873,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nameLocation": "2656:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 845,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2682:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 873,
                        "src": "2666:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2666:15:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 844,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2701:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 873,
                        "src": "2693:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 843,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2693:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2665:43:7"
                  },
                  "returnParameters": {
                    "id": 846,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2718:0:7"
                  },
                  "scope": 1151,
                  "src": "2647:312:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 890,
                    "nodeType": "Block",
                    "src": "3790:96:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 884,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 876,
                              "src": "3829:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 885,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "3837:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3843:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3846:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              },
                              "value": "Address: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              }
                            ],
                            "id": 883,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              931,
                              975
                            ],
                            "referencedDeclaration": 975,
                            "src": "3807:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3807:72:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 882,
                        "id": 889,
                        "nodeType": "Return",
                        "src": "3800:79:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 874,
                    "nodeType": "StructuredDocumentation",
                    "src": "2965:731:7",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                  },
                  "id": 891,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "3710:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3731:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 891,
                        "src": "3723:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3723:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3752:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 891,
                        "src": "3739:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3739:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3722:35:7"
                  },
                  "returnParameters": {
                    "id": 882,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 881,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 891,
                        "src": "3776:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3776:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3775:14:7"
                  },
                  "scope": 1151,
                  "src": "3701:185:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 910,
                    "nodeType": "Block",
                    "src": "4255:76:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 904,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 894,
                              "src": "4294:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 905,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 896,
                              "src": "4302:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4308:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 907,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "4311:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 903,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              931,
                              975
                            ],
                            "referencedDeclaration": 975,
                            "src": "4272:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4272:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 902,
                        "id": 909,
                        "nodeType": "Return",
                        "src": "4265:59:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 892,
                    "nodeType": "StructuredDocumentation",
                    "src": "3892:211:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 911,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "4117:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4147:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "4139:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4139:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 896,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4176:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "4163:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 895,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4163:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "4204:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "4190:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4190:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4129:93:7"
                  },
                  "returnParameters": {
                    "id": 902,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 901,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "4241:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 900,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4241:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4240:14:7"
                  },
                  "scope": 1151,
                  "src": "4108:223:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 930,
                    "nodeType": "Block",
                    "src": "4806:111:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 924,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "4845:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 925,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 916,
                              "src": "4853:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 926,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "4859:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                              "id": 927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4866:43:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              },
                              "value": "Address: low-level call with value failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              }
                            ],
                            "id": 923,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              931,
                              975
                            ],
                            "referencedDeclaration": 975,
                            "src": "4823:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:87:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 922,
                        "id": 929,
                        "nodeType": "Return",
                        "src": "4816:94:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 912,
                    "nodeType": "StructuredDocumentation",
                    "src": "4337:351:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                  },
                  "id": 931,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "4702:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4732:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 931,
                        "src": "4724:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4724:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 916,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4753:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 931,
                        "src": "4740:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 915,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4740:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4767:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 931,
                        "src": "4759:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4759:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4723:50:7"
                  },
                  "returnParameters": {
                    "id": 922,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 931,
                        "src": "4792:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 920,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4792:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4791:14:7"
                  },
                  "scope": 1151,
                  "src": "4693:224:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 974,
                    "nodeType": "Block",
                    "src": "5344:267:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 948,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5370:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$1151",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$1151",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 947,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5362:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 946,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5362:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 949,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5362:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "5362:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 951,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 938,
                                "src": "5387:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5362:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                              "id": 953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5394:40:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              },
                              "value": "Address: insufficient balance for call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              }
                            ],
                            "id": 945,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5354:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5354:81:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 955,
                        "nodeType": "ExpressionStatement",
                        "src": "5354:81:7"
                      },
                      {
                        "assignments": [
                          957,
                          959
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 957,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5451:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 974,
                            "src": "5446:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 956,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5446:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 959,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5473:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 974,
                            "src": "5460:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 958,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5460:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 966,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 964,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "5513:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 960,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 934,
                                "src": "5487:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5487:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 962,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 938,
                                "src": "5506:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5487:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5487:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5445:73:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 968,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "5562:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 969,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 957,
                              "src": "5570:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 970,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 959,
                              "src": "5579:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 971,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 940,
                              "src": "5591:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 967,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "5535:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5535:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 944,
                        "id": 973,
                        "nodeType": "Return",
                        "src": "5528:76:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 932,
                    "nodeType": "StructuredDocumentation",
                    "src": "4923:237:7",
                    "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 975,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "5174:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 941,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 934,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "5213:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "5205:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 933,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5205:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 936,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5242:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "5229:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 935,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5229:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5264:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "5256:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5256:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 940,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5293:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "5279:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 939,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5279:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5195:116:7"
                  },
                  "returnParameters": {
                    "id": 944,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 943,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "5330:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5329:14:7"
                  },
                  "scope": 1151,
                  "src": "5165:446:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 991,
                    "nodeType": "Block",
                    "src": "5888:97:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 986,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "5924:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 987,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "5932:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                              "id": 988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5938:39:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              },
                              "value": "Address: low-level static call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              }
                            ],
                            "id": 985,
                            "name": "functionStaticCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              992,
                              1021
                            ],
                            "referencedDeclaration": 1021,
                            "src": "5905:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5905:73:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 984,
                        "id": 990,
                        "nodeType": "Return",
                        "src": "5898:80:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 976,
                    "nodeType": "StructuredDocumentation",
                    "src": "5617:166:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 992,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "5797:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "5824:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "5816:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5816:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5845:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "5832:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5832:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5815:35:7"
                  },
                  "returnParameters": {
                    "id": 984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 983,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "5874:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 982,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5874:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5873:14:7"
                  },
                  "scope": 1151,
                  "src": "5788:197:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1020,
                    "nodeType": "Block",
                    "src": "6327:168:7",
                    "statements": [
                      {
                        "assignments": [
                          1005,
                          1007
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1005,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "6343:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1020,
                            "src": "6338:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1004,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6338:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1007,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "6365:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1020,
                            "src": "6352:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1006,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6352:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1012,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1010,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "6397:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1008,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 995,
                              "src": "6379:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "6379:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6379:23:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6337:65:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1014,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 995,
                              "src": "6446:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1015,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "6454:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1016,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "6463:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1017,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "6475:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1013,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "6419:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6419:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1003,
                        "id": 1019,
                        "nodeType": "Return",
                        "src": "6412:76:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 993,
                    "nodeType": "StructuredDocumentation",
                    "src": "5991:173:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 1021,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "6178:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1000,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "6214:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1021,
                        "src": "6206:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6206:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6243:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1021,
                        "src": "6230:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6230:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 999,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "6271:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1021,
                        "src": "6257:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6257:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6196:93:7"
                  },
                  "returnParameters": {
                    "id": 1003,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1021,
                        "src": "6313:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6313:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6312:14:7"
                  },
                  "scope": 1151,
                  "src": "6169:326:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1037,
                    "nodeType": "Block",
                    "src": "6771:101:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1032,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "6809:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1033,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "6817:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                              "id": 1034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6823:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              },
                              "value": "Address: low-level delegate call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              }
                            ],
                            "id": 1031,
                            "name": "functionDelegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1038,
                              1067
                            ],
                            "referencedDeclaration": 1067,
                            "src": "6788:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6788:77:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1030,
                        "id": 1036,
                        "nodeType": "Return",
                        "src": "6781:84:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1022,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:168:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 1038,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "6683:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1027,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1024,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "6712:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "6704:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1023,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6704:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1026,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6733:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "6720:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6720:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6703:35:7"
                  },
                  "returnParameters": {
                    "id": 1030,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1029,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "6757:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1028,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6757:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6756:14:7"
                  },
                  "scope": 1151,
                  "src": "6674:198:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1066,
                    "nodeType": "Block",
                    "src": "7213:170:7",
                    "statements": [
                      {
                        "assignments": [
                          1051,
                          1053
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1051,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7229:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1066,
                            "src": "7224:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1050,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7224:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1053,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "7251:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1066,
                            "src": "7238:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1052,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7238:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1058,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1056,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1043,
                              "src": "7285:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1054,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "7265:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "7265:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7265:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7223:67:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1060,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "7334:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1061,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1051,
                              "src": "7342:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1062,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "7351:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1063,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "7363:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1059,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "7307:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7307:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1049,
                        "id": 1065,
                        "nodeType": "Return",
                        "src": "7300:76:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1039,
                    "nodeType": "StructuredDocumentation",
                    "src": "6878:175:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 1067,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "7067:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1041,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "7105:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "7097:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7097:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7134:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "7121:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7121:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1045,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "7162:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "7148:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7148:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7087:93:7"
                  },
                  "returnParameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1048,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "7199:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7199:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7198:14:7"
                  },
                  "scope": 1151,
                  "src": "7058:325:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1105,
                    "nodeType": "Block",
                    "src": "7865:434:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 1081,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1072,
                          "src": "7879:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1103,
                          "nodeType": "Block",
                          "src": "8235:58:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1099,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "8257:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 1100,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "8269:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1098,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1150,
                                  "src": "8249:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory,string memory) pure"
                                  }
                                },
                                "id": 1101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8249:33:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1102,
                              "nodeType": "ExpressionStatement",
                              "src": "8249:33:7"
                            }
                          ]
                        },
                        "id": 1104,
                        "nodeType": "IfStatement",
                        "src": "7875:418:7",
                        "trueBody": {
                          "id": 1097,
                          "nodeType": "Block",
                          "src": "7888:341:7",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1082,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "7906:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "7906:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1084,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7927:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7906:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1094,
                              "nodeType": "IfStatement",
                              "src": "7902:286:7",
                              "trueBody": {
                                "id": 1093,
                                "nodeType": "Block",
                                "src": "7930:258:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1088,
                                              "name": "target",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1070,
                                              "src": "8132:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1087,
                                            "name": "isContract",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 839,
                                            "src": "8121:10:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                              "typeString": "function (address) view returns (bool)"
                                            }
                                          },
                                          "id": 1089,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8121:18:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                                          "id": 1090,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8141:31:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                            "typeString": "literal_string \"Address: call to non-contract\""
                                          },
                                          "value": "Address: call to non-contract"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                            "typeString": "literal_string \"Address: call to non-contract\""
                                          }
                                        ],
                                        "id": 1086,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "8113:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1091,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8113:60:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1092,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8113:60:7"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 1095,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "8208:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 1080,
                              "id": 1096,
                              "nodeType": "Return",
                              "src": "8201:17:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1068,
                    "nodeType": "StructuredDocumentation",
                    "src": "7389:277:7",
                    "text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
                  },
                  "id": 1106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResultFromTarget",
                  "nameLocation": "7680:26:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "7724:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "7716:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7716:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1072,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "7745:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "7740:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1071,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7740:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "7775:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "7762:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7762:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "7809:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "7795:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7795:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7706:121:7"
                  },
                  "returnParameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1079,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "7851:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1078,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7851:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7850:14:7"
                  },
                  "scope": 1151,
                  "src": "7671:628:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1129,
                    "nodeType": "Block",
                    "src": "8680:135:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 1118,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8694:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1127,
                          "nodeType": "Block",
                          "src": "8751:58:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1123,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1111,
                                    "src": "8773:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 1124,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1113,
                                    "src": "8785:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1122,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1150,
                                  "src": "8765:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory,string memory) pure"
                                  }
                                },
                                "id": 1125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8765:33:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1126,
                              "nodeType": "ExpressionStatement",
                              "src": "8765:33:7"
                            }
                          ]
                        },
                        "id": 1128,
                        "nodeType": "IfStatement",
                        "src": "8690:119:7",
                        "trueBody": {
                          "id": 1121,
                          "nodeType": "Block",
                          "src": "8703:42:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1119,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1111,
                                "src": "8724:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 1117,
                              "id": 1120,
                              "nodeType": "Return",
                              "src": "8717:17:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1107,
                    "nodeType": "StructuredDocumentation",
                    "src": "8305:210:7",
                    "text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
                  },
                  "id": 1130,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResult",
                  "nameLocation": "8529:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1109,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "8560:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "8555:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8555:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1111,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "8590:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "8577:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1110,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8577:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1113,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "8624:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "8610:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1112,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8610:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8545:97:7"
                  },
                  "returnParameters": {
                    "id": 1117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "8666:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8666:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8665:14:7"
                  },
                  "scope": 1151,
                  "src": "8520:295:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1149,
                    "nodeType": "Block",
                    "src": "8904:457:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1137,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "8980:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8980:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9000:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8980:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1147,
                          "nodeType": "Block",
                          "src": "9310:45:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1144,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1134,
                                    "src": "9331:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1143,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "9324:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9324:20:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1146,
                              "nodeType": "ExpressionStatement",
                              "src": "9324:20:7"
                            }
                          ]
                        },
                        "id": 1148,
                        "nodeType": "IfStatement",
                        "src": "8976:379:7",
                        "trueBody": {
                          "id": 1142,
                          "nodeType": "Block",
                          "src": "9003:301:7",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "9161:133:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "9179:40:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nodeType": "YulIdentifier",
                                          "src": "9208:10:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "9202:5:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9202:17:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "9183:15:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9247:2:7",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "9251:10:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "9243:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9243:19:7"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "9264:15:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9236:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9236:44:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9236:44:7"
                                  }
                                ]
                              },
                              "documentation": "@solidity memory-safe-assembly",
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 1132,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "9208:10:7",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1132,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "9251:10:7",
                                  "valueSize": 1
                                }
                              ],
                              "id": 1141,
                              "nodeType": "InlineAssembly",
                              "src": "9152:142:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1150,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revert",
                  "nameLocation": "8830:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1132,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "8851:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "8838:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8838:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1134,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "8877:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "8863:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1133,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8863:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8837:53:7"
                  },
                  "returnParameters": {
                    "id": 1136,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8904:0:7"
                  },
                  "scope": 1151,
                  "src": "8821:540:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1152,
              "src": "194:9169:7",
              "usedErrors": []
            }
          ],
          "src": "101:9263:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1181
            ]
          },
          "id": 1182,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1153,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:8"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1154,
                "nodeType": "StructuredDocumentation",
                "src": "126:496:8",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1181,
              "linearizedBaseContracts": [
                1181
              ],
              "name": "Context",
              "nameLocation": "641:7:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1162,
                    "nodeType": "Block",
                    "src": "717:34:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1159,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "734:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "734:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1158,
                        "id": 1161,
                        "nodeType": "Return",
                        "src": "727:17:8"
                      }
                    ]
                  },
                  "id": 1163,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "664:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "674:2:8"
                  },
                  "returnParameters": {
                    "id": 1158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1157,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1163,
                        "src": "708:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "707:9:8"
                  },
                  "scope": 1181,
                  "src": "655:96:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1171,
                    "nodeType": "Block",
                    "src": "824:32:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1168,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "841:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "841:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1167,
                        "id": 1170,
                        "nodeType": "Return",
                        "src": "834:15:8"
                      }
                    ]
                  },
                  "id": 1172,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "766:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "774:2:8"
                  },
                  "returnParameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1172,
                        "src": "808:14:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "807:16:8"
                  },
                  "scope": 1181,
                  "src": "757:99:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1179,
                    "nodeType": "Block",
                    "src": "934:25:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "951:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1176,
                        "id": 1178,
                        "nodeType": "Return",
                        "src": "944:8:8"
                      }
                    ]
                  },
                  "id": 1180,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "871:20:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "891:2:8"
                  },
                  "returnParameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1175,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "925:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "925:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "924:9:8"
                  },
                  "scope": 1181,
                  "src": "862:97:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1182,
              "src": "623:338:8",
              "usedErrors": []
            }
          ],
          "src": "101:861:8"
        },
        "id": 8
      },
      "contracts/LucroPrediction.sol": {
        "ast": {
          "absolutePath": "contracts/LucroPrediction.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              45
            ],
            "IERC20": [
              409
            ],
            "LucroPrediction": [
              3149
            ],
            "Ownable": [
              158
            ],
            "Pausable": [
              266
            ],
            "ReentrancyGuard": [
              331
            ],
            "SafeERC20": [
              821
            ]
          },
          "id": 3150,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1183,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:9"
            },
            {
              "id": 1184,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "56:19:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1186,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3150,
              "sourceUnit": 159,
              "src": "77:67:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1185,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "85:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 1188,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3150,
              "sourceUnit": 267,
              "src": "145:71:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1187,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "153:8:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 1190,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3150,
              "sourceUnit": 332,
              "src": "217:85:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1189,
                    "name": "ReentrancyGuard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "225:15:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1192,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3150,
              "sourceUnit": 410,
              "src": "303:70:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1191,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "311:6:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 1194,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3150,
              "sourceUnit": 822,
              "src": "374:82:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1193,
                    "name": "SafeERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "382:9:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "id": 1196,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3150,
              "sourceUnit": 46,
              "src": "457:105:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1195,
                    "name": "AggregatorV3Interface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "465:21:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1198,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 158,
                    "src": "626:7:9"
                  },
                  "id": 1199,
                  "nodeType": "InheritanceSpecifier",
                  "src": "626:7:9"
                },
                {
                  "baseName": {
                    "id": 1200,
                    "name": "Pausable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 266,
                    "src": "635:8:9"
                  },
                  "id": 1201,
                  "nodeType": "InheritanceSpecifier",
                  "src": "635:8:9"
                },
                {
                  "baseName": {
                    "id": 1202,
                    "name": "ReentrancyGuard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 331,
                    "src": "645:15:9"
                  },
                  "id": 1203,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:15:9"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1197,
                "nodeType": "StructuredDocumentation",
                "src": "564:33:9",
                "text": " @title LucroPrediction"
              },
              "fullyImplemented": true,
              "id": 3149,
              "linearizedBaseContracts": [
                3149,
                331,
                266,
                158,
                1181
              ],
              "name": "LucroPrediction",
              "nameLocation": "607:15:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1207,
                  "libraryName": {
                    "id": 1204,
                    "name": "SafeERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 821,
                    "src": "673:9:9"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "667:27:9",
                  "typeName": {
                    "id": 1206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1205,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 409,
                      "src": "687:6:9"
                    },
                    "referencedDeclaration": 409,
                    "src": "687:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$409",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "fc0c546a",
                  "id": 1210,
                  "mutability": "immutable",
                  "name": "token",
                  "nameLocation": "724:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "700:29:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$409",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1209,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1208,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 409,
                      "src": "700:6:9"
                    },
                    "referencedDeclaration": 409,
                    "src": "700:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$409",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7dc0d1d0",
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "oracle",
                  "nameLocation": "785:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "756:35:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "id": 1212,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1211,
                      "name": "AggregatorV3Interface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45,
                      "src": "756:21:9"
                    },
                    "referencedDeclaration": 45,
                    "src": "756:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0f74174f",
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "genesisLockOnce",
                  "nameLocation": "810:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "798:35:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "828:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f7fdec28",
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "genesisStartOnce",
                  "nameLocation": "851:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "839:36:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "870:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fc6f9468",
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "adminAddress",
                  "nameLocation": "897:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "882:27:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "127effb2",
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "operatorAddress",
                  "nameLocation": "954:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "939:30:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "eaba2361",
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "bufferSeconds",
                  "nameLocation": "1018:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1003:28:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7d1cd04f",
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "intervalSeconds",
                  "nameLocation": "1115:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1100:30:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fa968eea",
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "minBetAmount",
                  "nameLocation": "1205:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1190:27:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cc32d176",
                  "id": 1231,
                  "mutability": "mutable",
                  "name": "treasuryFee",
                  "nameLocation": "1285:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1270:26:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "368acb09",
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "treasuryAmount",
                  "nameLocation": "1363:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1348:29:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "76671808",
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "currentEpoch",
                  "nameLocation": "1439:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1424:27:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ec324703",
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "oracleLatestRoundId",
                  "nameLocation": "1511:19:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1496:34:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "60554011",
                  "id": 1239,
                  "mutability": "mutable",
                  "name": "oracleUpdateAllowance",
                  "nameLocation": "1588:21:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1573:36:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "f2b3c809",
                  "id": 1242,
                  "mutability": "constant",
                  "name": "MAX_TREASURY_FEE",
                  "nameLocation": "1651:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1627:47:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303030",
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1670:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7285c58b",
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "ledger",
                  "nameLocation": "1743:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1688:61:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                    "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo))"
                  },
                  "typeName": {
                    "id": 1248,
                    "keyType": {
                      "id": 1243,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1696:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1688:47:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                      "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo))"
                    },
                    "valueType": {
                      "id": 1247,
                      "keyType": {
                        "id": 1244,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1715:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1707:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                        "typeString": "mapping(address => struct LucroPrediction.BetInfo)"
                      },
                      "valueType": {
                        "id": 1246,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1245,
                          "name": "BetInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1299,
                          "src": "1726:7:9"
                        },
                        "referencedDeclaration": 1299,
                        "src": "1726:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                          "typeString": "struct LucroPrediction.BetInfo"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8c65c81f",
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "rounds",
                  "nameLocation": "1788:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1755:39:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                    "typeString": "mapping(uint256 => struct LucroPrediction.Round)"
                  },
                  "typeName": {
                    "id": 1253,
                    "keyType": {
                      "id": 1250,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1763:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1755:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                      "typeString": "mapping(uint256 => struct LucroPrediction.Round)"
                    },
                    "valueType": {
                      "id": 1252,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1251,
                        "name": "Round",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1291,
                        "src": "1774:5:9"
                      },
                      "referencedDeclaration": 1291,
                      "src": "1774:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                        "typeString": "struct LucroPrediction.Round"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dd1f7596",
                  "id": 1259,
                  "mutability": "mutable",
                  "name": "userRounds",
                  "nameLocation": "1837:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "1800:47:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 1258,
                    "keyType": {
                      "id": 1255,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1808:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1800:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 1256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1819:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1257,
                      "nodeType": "ArrayTypeName",
                      "src": "1819:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "LucroPrediction.Position",
                  "id": 1262,
                  "members": [
                    {
                      "id": 1260,
                      "name": "Bull",
                      "nameLocation": "1878:4:9",
                      "nodeType": "EnumValue",
                      "src": "1878:4:9"
                    },
                    {
                      "id": 1261,
                      "name": "Bear",
                      "nameLocation": "1892:4:9",
                      "nodeType": "EnumValue",
                      "src": "1892:4:9"
                    }
                  ],
                  "name": "Position",
                  "nameLocation": "1859:8:9",
                  "nodeType": "EnumDefinition",
                  "src": "1854:48:9"
                },
                {
                  "canonicalName": "LucroPrediction.Round",
                  "id": 1291,
                  "members": [
                    {
                      "constant": false,
                      "id": 1264,
                      "mutability": "mutable",
                      "name": "epoch",
                      "nameLocation": "1939:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "1931:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1931:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1266,
                      "mutability": "mutable",
                      "name": "startTimestamp",
                      "nameLocation": "1962:14:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "1954:22:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1954:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1268,
                      "mutability": "mutable",
                      "name": "lockTimestamp",
                      "nameLocation": "1994:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "1986:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1986:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1270,
                      "mutability": "mutable",
                      "name": "closeTimestamp",
                      "nameLocation": "2025:14:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2017:22:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1269,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2017:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1272,
                      "mutability": "mutable",
                      "name": "lockPrice",
                      "nameLocation": "2056:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2049:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1271,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2049:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1274,
                      "mutability": "mutable",
                      "name": "closePrice",
                      "nameLocation": "2082:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2075:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1273,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2075:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1276,
                      "mutability": "mutable",
                      "name": "lockOracleId",
                      "nameLocation": "2110:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2102:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1278,
                      "mutability": "mutable",
                      "name": "closeOracleId",
                      "nameLocation": "2140:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2132:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2132:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1280,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nameLocation": "2171:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2163:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2163:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1282,
                      "mutability": "mutable",
                      "name": "bullAmount",
                      "nameLocation": "2200:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2192:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1281,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2192:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1284,
                      "mutability": "mutable",
                      "name": "bearAmount",
                      "nameLocation": "2228:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2220:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2220:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1286,
                      "mutability": "mutable",
                      "name": "rewardBaseCalAmount",
                      "nameLocation": "2256:19:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2248:27:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1285,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2248:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1288,
                      "mutability": "mutable",
                      "name": "rewardAmount",
                      "nameLocation": "2293:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2285:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2285:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1290,
                      "mutability": "mutable",
                      "name": "oracleCalled",
                      "nameLocation": "2320:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2315:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1289,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2315:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Round",
                  "nameLocation": "1915:5:9",
                  "nodeType": "StructDefinition",
                  "scope": 3149,
                  "src": "1908:431:9",
                  "visibility": "public"
                },
                {
                  "canonicalName": "LucroPrediction.BetInfo",
                  "id": 1299,
                  "members": [
                    {
                      "constant": false,
                      "id": 1294,
                      "mutability": "mutable",
                      "name": "position",
                      "nameLocation": "2379:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1299,
                      "src": "2370:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Position_$1262",
                        "typeString": "enum LucroPrediction.Position"
                      },
                      "typeName": {
                        "id": 1293,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1292,
                          "name": "Position",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1262,
                          "src": "2370:8:9"
                        },
                        "referencedDeclaration": 1262,
                        "src": "2370:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Position_$1262",
                          "typeString": "enum LucroPrediction.Position"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1296,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2405:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1299,
                      "src": "2397:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2397:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1298,
                      "mutability": "mutable",
                      "name": "claimed",
                      "nameLocation": "2426:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1299,
                      "src": "2421:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1297,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2421:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BetInfo",
                  "nameLocation": "2352:7:9",
                  "nodeType": "StructDefinition",
                  "scope": 3149,
                  "src": "2345:112:9",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 1307,
                  "name": "BetBear",
                  "nameLocation": "2469:7:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1301,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2502:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1307,
                        "src": "2486:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2486:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1303,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "2534:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1307,
                        "src": "2518:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2518:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1305,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2557:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1307,
                        "src": "2549:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2549:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2476:93:9"
                  },
                  "src": "2463:107:9"
                },
                {
                  "anonymous": false,
                  "id": 1315,
                  "name": "BetBull",
                  "nameLocation": "2581:7:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1309,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2614:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1315,
                        "src": "2598:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2598:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "2646:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1315,
                        "src": "2630:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2630:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1313,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2669:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1315,
                        "src": "2661:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1312,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2588:93:9"
                  },
                  "src": "2575:107:9"
                },
                {
                  "anonymous": false,
                  "id": 1323,
                  "name": "Claim",
                  "nameLocation": "2693:5:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1317,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2715:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1323,
                        "src": "2699:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1316,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2699:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1319,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "2739:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1323,
                        "src": "2723:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1318,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2723:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1321,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2754:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1323,
                        "src": "2746:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1320,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2746:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2698:63:9"
                  },
                  "src": "2687:75:9"
                },
                {
                  "anonymous": false,
                  "id": 1331,
                  "name": "EndRound",
                  "nameLocation": "2773:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1325,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "2807:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "2791:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2791:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1327,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "2838:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "2822:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1326,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2822:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1329,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "2862:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "2855:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1328,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2855:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2781:92:9"
                  },
                  "src": "2767:107:9"
                },
                {
                  "anonymous": false,
                  "id": 1339,
                  "name": "LockRound",
                  "nameLocation": "2885:9:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "2920:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "2904:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2904:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1335,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "2951:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "2935:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2935:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1337,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "2975:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "2968:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1336,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2968:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2894:92:9"
                  },
                  "src": "2879:108:9"
                },
                {
                  "anonymous": false,
                  "id": 1343,
                  "name": "NewAdminAddress",
                  "nameLocation": "2999:15:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1341,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "3023:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "3015:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3015:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3014:15:9"
                  },
                  "src": "2993:37:9"
                },
                {
                  "anonymous": false,
                  "id": 1349,
                  "name": "NewBufferAndIntervalSeconds",
                  "nameLocation": "3041:27:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1345,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bufferSeconds",
                        "nameLocation": "3086:13:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "3078:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3078:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1347,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "intervalSeconds",
                        "nameLocation": "3117:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "3109:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1346,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3109:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3068:70:9"
                  },
                  "src": "3035:104:9"
                },
                {
                  "anonymous": false,
                  "id": 1355,
                  "name": "NewMinBetAmount",
                  "nameLocation": "3150:15:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1351,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "3182:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "3166:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3166:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1353,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "minBetAmount",
                        "nameLocation": "3197:12:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "3189:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3189:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3165:45:9"
                  },
                  "src": "3144:67:9"
                },
                {
                  "anonymous": false,
                  "id": 1361,
                  "name": "NewTreasuryFee",
                  "nameLocation": "3222:14:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1360,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1357,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "3253:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1361,
                        "src": "3237:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1359,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "treasuryFee",
                        "nameLocation": "3268:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1361,
                        "src": "3260:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1358,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3260:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:44:9"
                  },
                  "src": "3216:65:9"
                },
                {
                  "anonymous": false,
                  "id": 1365,
                  "name": "NewOperatorAddress",
                  "nameLocation": "3292:18:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1363,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3319:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1365,
                        "src": "3311:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1362,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3311:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3310:18:9"
                  },
                  "src": "3286:43:9"
                },
                {
                  "anonymous": false,
                  "id": 1369,
                  "name": "NewOracle",
                  "nameLocation": "3340:9:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1367,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracle",
                        "nameLocation": "3358:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "3350:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3350:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3349:16:9"
                  },
                  "src": "3334:32:9"
                },
                {
                  "anonymous": false,
                  "id": 1373,
                  "name": "NewOracleUpdateAllowance",
                  "nameLocation": "3377:24:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1371,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracleUpdateAllowance",
                        "nameLocation": "3410:21:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1373,
                        "src": "3402:29:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3402:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3401:31:9"
                  },
                  "src": "3371:62:9"
                },
                {
                  "anonymous": false,
                  "id": 1377,
                  "name": "Pause",
                  "nameLocation": "3445:5:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1375,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "3467:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1377,
                        "src": "3451:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:23:9"
                  },
                  "src": "3439:35:9"
                },
                {
                  "anonymous": false,
                  "id": 1387,
                  "name": "RewardsCalculated",
                  "nameLocation": "3485:17:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1379,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "3528:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "3512:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3512:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardBaseCalAmount",
                        "nameLocation": "3551:19:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "3543:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3543:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1383,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nameLocation": "3588:12:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "3580:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3580:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1385,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "treasuryAmount",
                        "nameLocation": "3618:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "3610:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1384,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3610:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3502:136:9"
                  },
                  "src": "3479:160:9"
                },
                {
                  "anonymous": false,
                  "id": 1391,
                  "name": "StartRound",
                  "nameLocation": "3651:10:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1390,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1389,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "3678:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "3662:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3662:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3661:23:9"
                  },
                  "src": "3645:40:9"
                },
                {
                  "anonymous": false,
                  "id": 1397,
                  "name": "TokenRecovery",
                  "nameLocation": "3696:13:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1393,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3726:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1397,
                        "src": "3710:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3710:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1395,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3741:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1397,
                        "src": "3733:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3733:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3709:39:9"
                  },
                  "src": "3690:59:9"
                },
                {
                  "anonymous": false,
                  "id": 1401,
                  "name": "TreasuryClaim",
                  "nameLocation": "3760:13:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1399,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3782:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1401,
                        "src": "3774:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3773:16:9"
                  },
                  "src": "3754:36:9"
                },
                {
                  "anonymous": false,
                  "id": 1405,
                  "name": "Unpause",
                  "nameLocation": "3801:7:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1403,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "3825:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1405,
                        "src": "3809:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3809:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3808:23:9"
                  },
                  "src": "3795:37:9"
                },
                {
                  "body": {
                    "id": 1416,
                    "nodeType": "Block",
                    "src": "3859:76:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1408,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3877:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3877:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1410,
                                "name": "adminAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1221,
                                "src": "3891:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3877:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742061646d696e",
                              "id": 1412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3905:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
                                "typeString": "literal_string \"Not admin\""
                              },
                              "value": "Not admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
                                "typeString": "literal_string \"Not admin\""
                              }
                            ],
                            "id": 1407,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3869:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3869:48:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1414,
                        "nodeType": "ExpressionStatement",
                        "src": "3869:48:9"
                      },
                      {
                        "id": 1415,
                        "nodeType": "PlaceholderStatement",
                        "src": "3927:1:9"
                      }
                    ]
                  },
                  "id": 1417,
                  "name": "onlyAdmin",
                  "nameLocation": "3847:9:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1406,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3856:2:9"
                  },
                  "src": "3838:97:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1433,
                    "nodeType": "Block",
                    "src": "3972:152:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1420,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4003:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4003:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1422,
                                  "name": "adminAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1221,
                                  "src": "4017:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4003:26:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1424,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4033:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4033:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1426,
                                  "name": "operatorAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1223,
                                  "src": "4047:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4033:29:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4003:59:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206f70657261746f722f61646d696e",
                              "id": 1429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4076:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_49d662e2e497c75dff2142bf1640750ac7d04cac14a37cbabfe479aeb27de903",
                                "typeString": "literal_string \"Not operator/admin\""
                              },
                              "value": "Not operator/admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_49d662e2e497c75dff2142bf1640750ac7d04cac14a37cbabfe479aeb27de903",
                                "typeString": "literal_string \"Not operator/admin\""
                              }
                            ],
                            "id": 1419,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3982:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3982:124:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1431,
                        "nodeType": "ExpressionStatement",
                        "src": "3982:124:9"
                      },
                      {
                        "id": 1432,
                        "nodeType": "PlaceholderStatement",
                        "src": "4116:1:9"
                      }
                    ]
                  },
                  "id": 1434,
                  "name": "onlyAdminOrOperator",
                  "nameLocation": "3950:19:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3969:2:9"
                  },
                  "src": "3941:183:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1445,
                    "nodeType": "Block",
                    "src": "4154:82:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1437,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4172:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4172:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1439,
                                "name": "operatorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1223,
                                "src": "4186:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4172:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206f70657261746f72",
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4203:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f62ead2258bbb12f965d46919f1c0f382053ba2024e91da3661aec8b15585f38",
                                "typeString": "literal_string \"Not operator\""
                              },
                              "value": "Not operator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f62ead2258bbb12f965d46919f1c0f382053ba2024e91da3661aec8b15585f38",
                                "typeString": "literal_string \"Not operator\""
                              }
                            ],
                            "id": 1436,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4164:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4164:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1443,
                        "nodeType": "ExpressionStatement",
                        "src": "4164:54:9"
                      },
                      {
                        "id": 1444,
                        "nodeType": "PlaceholderStatement",
                        "src": "4228:1:9"
                      }
                    ]
                  },
                  "id": 1446,
                  "name": "onlyOperator",
                  "nameLocation": "4139:12:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1435,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4151:2:9"
                  },
                  "src": "4130:106:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1467,
                    "nodeType": "Block",
                    "src": "4265:157:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4283:24:9",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1450,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4296:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4296:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1449,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3148,
                                  "src": "4284:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 1452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4284:23:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7472616374206e6f7420616c6c6f776564",
                              "id": 1454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4309:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3121f7b79283aa0596509798902a70205287bb5aa7cf6024beaaf19d6d89ba68",
                                "typeString": "literal_string \"Contract not allowed\""
                              },
                              "value": "Contract not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3121f7b79283aa0596509798902a70205287bb5aa7cf6024beaaf19d6d89ba68",
                                "typeString": "literal_string \"Contract not allowed\""
                              }
                            ],
                            "id": 1448,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4275:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4275:57:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1456,
                        "nodeType": "ExpressionStatement",
                        "src": "4275:57:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1458,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4350:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4350:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1460,
                                  "name": "tx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -26,
                                  "src": "4364:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_transaction",
                                    "typeString": "tx"
                                  }
                                },
                                "id": 1461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "src": "4364:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4350:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f787920636f6e7472616374206e6f7420616c6c6f776564",
                              "id": 1463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4375:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_805913a464b2b4d6ef9cb52137d9a1509b46d9c4cc7c32415f075bb6c16a902c",
                                "typeString": "literal_string \"Proxy contract not allowed\""
                              },
                              "value": "Proxy contract not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_805913a464b2b4d6ef9cb52137d9a1509b46d9c4cc7c32415f075bb6c16a902c",
                                "typeString": "literal_string \"Proxy contract not allowed\""
                              }
                            ],
                            "id": 1457,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4342:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4342:62:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1465,
                        "nodeType": "ExpressionStatement",
                        "src": "4342:62:9"
                      },
                      {
                        "id": 1466,
                        "nodeType": "PlaceholderStatement",
                        "src": "4414:1:9"
                      }
                    ]
                  },
                  "id": 1468,
                  "name": "notContract",
                  "nameLocation": "4251:11:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1447,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4262:2:9"
                  },
                  "src": "4242:180:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1536,
                    "nodeType": "Block",
                    "src": "5261:460:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1492,
                                "name": "_treasuryFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1488,
                                "src": "5279:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1493,
                                "name": "MAX_TREASURY_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1242,
                                "src": "5295:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5279:32:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726561737572792066656520746f6f2068696768",
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5313:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff",
                                "typeString": "literal_string \"Treasury fee too high\""
                              },
                              "value": "Treasury fee too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff",
                                "typeString": "literal_string \"Treasury fee too high\""
                              }
                            ],
                            "id": 1491,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5271:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5271:66:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1497,
                        "nodeType": "ExpressionStatement",
                        "src": "5271:66:9"
                      },
                      {
                        "expression": {
                          "id": 1500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1498,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "5348:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$409",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1499,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1472,
                            "src": "5356:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$409",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "5348:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1501,
                        "nodeType": "ExpressionStatement",
                        "src": "5348:14:9"
                      },
                      {
                        "expression": {
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1502,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1213,
                            "src": "5372:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1504,
                                "name": "_oracleAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1474,
                                "src": "5403:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1503,
                              "name": "AggregatorV3Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "5381:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                                "typeString": "type(contract AggregatorV3Interface)"
                              }
                            },
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5381:37:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "5372:46:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 1507,
                        "nodeType": "ExpressionStatement",
                        "src": "5372:46:9"
                      },
                      {
                        "expression": {
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1508,
                            "name": "adminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1221,
                            "src": "5428:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1509,
                            "name": "_adminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "5443:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5428:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1511,
                        "nodeType": "ExpressionStatement",
                        "src": "5428:28:9"
                      },
                      {
                        "expression": {
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1512,
                            "name": "operatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1223,
                            "src": "5466:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1513,
                            "name": "_operatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1478,
                            "src": "5484:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5466:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1515,
                        "nodeType": "ExpressionStatement",
                        "src": "5466:34:9"
                      },
                      {
                        "expression": {
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1516,
                            "name": "intervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "5510:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1517,
                            "name": "_intervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1480,
                            "src": "5528:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5510:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1519,
                        "nodeType": "ExpressionStatement",
                        "src": "5510:34:9"
                      },
                      {
                        "expression": {
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1520,
                            "name": "bufferSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "5554:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1521,
                            "name": "_bufferSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1482,
                            "src": "5570:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5554:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1523,
                        "nodeType": "ExpressionStatement",
                        "src": "5554:30:9"
                      },
                      {
                        "expression": {
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1524,
                            "name": "minBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "5594:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1525,
                            "name": "_minBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "5609:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5594:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1527,
                        "nodeType": "ExpressionStatement",
                        "src": "5594:28:9"
                      },
                      {
                        "expression": {
                          "id": 1530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1528,
                            "name": "oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1239,
                            "src": "5632:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1529,
                            "name": "_oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "5656:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5632:46:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1531,
                        "nodeType": "ExpressionStatement",
                        "src": "5632:46:9"
                      },
                      {
                        "expression": {
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1532,
                            "name": "treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1231,
                            "src": "5688:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1533,
                            "name": "_treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1488,
                            "src": "5702:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5688:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1535,
                        "nodeType": "ExpressionStatement",
                        "src": "5688:26:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1469,
                    "nodeType": "StructuredDocumentation",
                    "src": "4428:523:9",
                    "text": " @notice Constructor\n @param _token: prediction token\n @param _oracleAddress: oracle address\n @param _adminAddress: admin address\n @param _operatorAddress: operator address\n @param _intervalSeconds: number of time within an interval\n @param _bufferSeconds: buffer of time for resolution of price\n @param _minBetAmount: minimum bet amounts (in wei)\n @param _oracleUpdateAllowance: oracle update allowance\n @param _treasuryFee: treasury fee (1000 = 10%)"
                  },
                  "id": 1537,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1472,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "4984:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "4977:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$409",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1471,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1470,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 409,
                            "src": "4977:6:9"
                          },
                          "referencedDeclaration": 409,
                          "src": "4977:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$409",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1474,
                        "mutability": "mutable",
                        "name": "_oracleAddress",
                        "nameLocation": "5008:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "5000:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5000:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1476,
                        "mutability": "mutable",
                        "name": "_adminAddress",
                        "nameLocation": "5040:13:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "5032:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5032:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1478,
                        "mutability": "mutable",
                        "name": "_operatorAddress",
                        "nameLocation": "5071:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "5063:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1477,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5063:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1480,
                        "mutability": "mutable",
                        "name": "_intervalSeconds",
                        "nameLocation": "5105:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "5097:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1479,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5097:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1482,
                        "mutability": "mutable",
                        "name": "_bufferSeconds",
                        "nameLocation": "5139:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "5131:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5131:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1484,
                        "mutability": "mutable",
                        "name": "_minBetAmount",
                        "nameLocation": "5171:13:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "5163:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5163:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1486,
                        "mutability": "mutable",
                        "name": "_oracleUpdateAllowance",
                        "nameLocation": "5202:22:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "5194:30:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5194:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1488,
                        "mutability": "mutable",
                        "name": "_treasuryFee",
                        "nameLocation": "5242:12:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "5234:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1487,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5234:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4967:293:9"
                  },
                  "returnParameters": {
                    "id": 1490,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5261:0:9"
                  },
                  "scope": 3149,
                  "src": "4956:765:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "5922:920:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1552,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1540,
                                "src": "5940:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1553,
                                "name": "currentEpoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "5949:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5940:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420697320746f6f206561726c792f6c617465",
                              "id": 1555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5963:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2",
                                "typeString": "literal_string \"Bet is too early/late\""
                              },
                              "value": "Bet is too early/late"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2",
                                "typeString": "literal_string \"Bet is too early/late\""
                              }
                            ],
                            "id": 1551,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5932:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5932:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1557,
                        "nodeType": "ExpressionStatement",
                        "src": "5932:55:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1560,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1540,
                                  "src": "6015:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1559,
                                "name": "_bettable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "6005:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view returns (bool)"
                                }
                              },
                              "id": 1561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6005:16:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526f756e64206e6f74206265747461626c65",
                              "id": 1562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6023:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63",
                                "typeString": "literal_string \"Round not bettable\""
                              },
                              "value": "Round not bettable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63",
                                "typeString": "literal_string \"Round not bettable\""
                              }
                            ],
                            "id": 1558,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5997:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5997:47:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1564,
                        "nodeType": "ExpressionStatement",
                        "src": "5997:47:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1566,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1542,
                                "src": "6075:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1567,
                                "name": "minBetAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1229,
                                "src": "6086:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6075:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420616d6f756e74206d7573742062652067726561746572207468616e206d696e426574416d6f756e74",
                              "id": 1569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6112:46:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834",
                                "typeString": "literal_string \"Bet amount must be greater than minBetAmount\""
                              },
                              "value": "Bet amount must be greater than minBetAmount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834",
                                "typeString": "literal_string \"Bet amount must be greater than minBetAmount\""
                              }
                            ],
                            "id": 1565,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6054:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6054:114:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1571,
                        "nodeType": "ExpressionStatement",
                        "src": "6054:114:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1573,
                                      "name": "ledger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1249,
                                      "src": "6199:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                                      }
                                    },
                                    "id": 1575,
                                    "indexExpression": {
                                      "id": 1574,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1540,
                                      "src": "6206:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6199:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                                      "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                                    }
                                  },
                                  "id": 1578,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1576,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6213:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6213:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6199:25:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                                    "typeString": "struct LucroPrediction.BetInfo storage ref"
                                  }
                                },
                                "id": 1579,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1296,
                                "src": "6199:32:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6235:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6199:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920626574206f6e63652070657220726f756e64",
                              "id": 1582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6250:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232",
                                "typeString": "literal_string \"Can only bet once per round\""
                              },
                              "value": "Can only bet once per round"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232",
                                "typeString": "literal_string \"Can only bet once per round\""
                              }
                            ],
                            "id": 1572,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6178:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6178:111:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1584,
                        "nodeType": "ExpressionStatement",
                        "src": "6178:111:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1588,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6323:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6323:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1592,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6343:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LucroPrediction_$3149",
                                    "typeString": "contract LucroPrediction"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LucroPrediction_$3149",
                                    "typeString": "contract LucroPrediction"
                                  }
                                ],
                                "id": 1591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6335:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1590,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6335:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6335:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1594,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1542,
                              "src": "6350:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1585,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "6300:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 505,
                            "src": "6300:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$409_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6300:58:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1596,
                        "nodeType": "ExpressionStatement",
                        "src": "6300:58:9"
                      },
                      {
                        "assignments": [
                          1598
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1598,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "6405:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "6397:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1597,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6397:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1600,
                        "initialValue": {
                          "id": 1599,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1542,
                          "src": "6414:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6397:24:9"
                      },
                      {
                        "assignments": [
                          1603
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1603,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "6445:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "6431:19:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                              "typeString": "struct LucroPrediction.Round"
                            },
                            "typeName": {
                              "id": 1602,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1601,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1291,
                                "src": "6431:5:9"
                              },
                              "referencedDeclaration": 1291,
                              "src": "6431:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1607,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1604,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "6453:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                              "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                            }
                          },
                          "id": 1606,
                          "indexExpression": {
                            "id": 1605,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "6460:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6453:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$1291_storage",
                            "typeString": "struct LucroPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6431:35:9"
                      },
                      {
                        "expression": {
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1608,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "6476:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 1610,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1280,
                            "src": "6476:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1611,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1603,
                                "src": "6496:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                  "typeString": "struct LucroPrediction.Round storage pointer"
                                }
                              },
                              "id": 1612,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1280,
                              "src": "6496:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1613,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1598,
                              "src": "6516:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6496:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6476:46:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1616,
                        "nodeType": "ExpressionStatement",
                        "src": "6476:46:9"
                      },
                      {
                        "expression": {
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1617,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "6532:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 1619,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bearAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1284,
                            "src": "6532:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1620,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1603,
                                "src": "6551:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                  "typeString": "struct LucroPrediction.Round storage pointer"
                                }
                              },
                              "id": 1621,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bearAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1284,
                              "src": "6551:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1622,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1598,
                              "src": "6570:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6551:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6532:44:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1625,
                        "nodeType": "ExpressionStatement",
                        "src": "6532:44:9"
                      },
                      {
                        "assignments": [
                          1628
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1628,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nameLocation": "6631:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "6615:23:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                              "typeString": "struct LucroPrediction.BetInfo"
                            },
                            "typeName": {
                              "id": 1627,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1626,
                                "name": "BetInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1299,
                                "src": "6615:7:9"
                              },
                              "referencedDeclaration": 1299,
                              "src": "6615:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1635,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1629,
                              "name": "ledger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "6641:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                              }
                            },
                            "id": 1631,
                            "indexExpression": {
                              "id": 1630,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "6648:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6641:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                              "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                            }
                          },
                          "id": 1634,
                          "indexExpression": {
                            "expression": {
                              "id": 1632,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6655:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6655:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6641:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                            "typeString": "struct LucroPrediction.BetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6615:51:9"
                      },
                      {
                        "expression": {
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1636,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1628,
                              "src": "6676:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo storage pointer"
                              }
                            },
                            "id": 1638,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "position",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1294,
                            "src": "6676:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Position_$1262",
                              "typeString": "enum LucroPrediction.Position"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1639,
                              "name": "Position",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1262,
                              "src": "6695:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Position_$1262_$",
                                "typeString": "type(enum LucroPrediction.Position)"
                              }
                            },
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Bear",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1261,
                            "src": "6695:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Position_$1262",
                              "typeString": "enum LucroPrediction.Position"
                            }
                          },
                          "src": "6676:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Position_$1262",
                            "typeString": "enum LucroPrediction.Position"
                          }
                        },
                        "id": 1642,
                        "nodeType": "ExpressionStatement",
                        "src": "6676:32:9"
                      },
                      {
                        "expression": {
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1643,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1628,
                              "src": "6718:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo storage pointer"
                              }
                            },
                            "id": 1645,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1296,
                            "src": "6718:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1646,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1598,
                            "src": "6735:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6718:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1648,
                        "nodeType": "ExpressionStatement",
                        "src": "6718:23:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1654,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "6779:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1649,
                                "name": "userRounds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "6751:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 1652,
                              "indexExpression": {
                                "expression": {
                                  "id": 1650,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6762:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6762:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6751:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6751:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6751:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1656,
                        "nodeType": "ExpressionStatement",
                        "src": "6751:34:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1658,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6809:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6809:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1660,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "6821:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1661,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1598,
                              "src": "6828:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1657,
                            "name": "BetBear",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1307,
                            "src": "6801:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6801:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1663,
                        "nodeType": "EmitStatement",
                        "src": "6796:39:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1538,
                    "nodeType": "StructuredDocumentation",
                    "src": "5727:71:9",
                    "text": " @notice Bet bear position\n @param epoch: epoch"
                  },
                  "functionSelector": "0e89e5a4",
                  "id": 1665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1545,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1544,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "5883:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5883:13:9"
                    },
                    {
                      "id": 1547,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1546,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 296,
                        "src": "5897:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5897:12:9"
                    },
                    {
                      "id": 1549,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1548,
                        "name": "notContract",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1468,
                        "src": "5910:11:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5910:11:9"
                    }
                  ],
                  "name": "betBear",
                  "nameLocation": "5812:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1540,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "5837:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "5829:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5829:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1542,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "5860:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "5852:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1541,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5852:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5819:54:9"
                  },
                  "returnParameters": {
                    "id": 1550,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5922:0:9"
                  },
                  "scope": 3149,
                  "src": "5803:1039:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1792,
                    "nodeType": "Block",
                    "src": "7043:920:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1680,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1668,
                                "src": "7061:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1681,
                                "name": "currentEpoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "7070:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7061:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420697320746f6f206561726c792f6c617465",
                              "id": 1683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7084:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2",
                                "typeString": "literal_string \"Bet is too early/late\""
                              },
                              "value": "Bet is too early/late"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2",
                                "typeString": "literal_string \"Bet is too early/late\""
                              }
                            ],
                            "id": 1679,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7053:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7053:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1685,
                        "nodeType": "ExpressionStatement",
                        "src": "7053:55:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1688,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1668,
                                  "src": "7136:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1687,
                                "name": "_bettable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "7126:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view returns (bool)"
                                }
                              },
                              "id": 1689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7126:16:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526f756e64206e6f74206265747461626c65",
                              "id": 1690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7144:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63",
                                "typeString": "literal_string \"Round not bettable\""
                              },
                              "value": "Round not bettable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63",
                                "typeString": "literal_string \"Round not bettable\""
                              }
                            ],
                            "id": 1686,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7118:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7118:47:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1692,
                        "nodeType": "ExpressionStatement",
                        "src": "7118:47:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1694,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "7196:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1695,
                                "name": "minBetAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1229,
                                "src": "7207:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7196:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420616d6f756e74206d7573742062652067726561746572207468616e206d696e426574416d6f756e74",
                              "id": 1697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7233:46:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834",
                                "typeString": "literal_string \"Bet amount must be greater than minBetAmount\""
                              },
                              "value": "Bet amount must be greater than minBetAmount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834",
                                "typeString": "literal_string \"Bet amount must be greater than minBetAmount\""
                              }
                            ],
                            "id": 1693,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7175:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7175:114:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1699,
                        "nodeType": "ExpressionStatement",
                        "src": "7175:114:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1701,
                                      "name": "ledger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1249,
                                      "src": "7320:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                                      }
                                    },
                                    "id": 1703,
                                    "indexExpression": {
                                      "id": 1702,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1668,
                                      "src": "7327:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7320:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                                      "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                                    }
                                  },
                                  "id": 1706,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1704,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7334:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1705,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7334:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7320:25:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                                    "typeString": "struct LucroPrediction.BetInfo storage ref"
                                  }
                                },
                                "id": 1707,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1296,
                                "src": "7320:32:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7356:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7320:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920626574206f6e63652070657220726f756e64",
                              "id": 1710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7371:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232",
                                "typeString": "literal_string \"Can only bet once per round\""
                              },
                              "value": "Can only bet once per round"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232",
                                "typeString": "literal_string \"Can only bet once per round\""
                              }
                            ],
                            "id": 1700,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7299:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7299:111:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1712,
                        "nodeType": "ExpressionStatement",
                        "src": "7299:111:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1716,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7444:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7444:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1720,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7464:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LucroPrediction_$3149",
                                    "typeString": "contract LucroPrediction"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LucroPrediction_$3149",
                                    "typeString": "contract LucroPrediction"
                                  }
                                ],
                                "id": 1719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7456:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1718,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7456:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7456:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1722,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "7471:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1713,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "7421:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 505,
                            "src": "7421:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$409_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7421:58:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1724,
                        "nodeType": "ExpressionStatement",
                        "src": "7421:58:9"
                      },
                      {
                        "assignments": [
                          1726
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1726,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "7526:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1792,
                            "src": "7518:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1725,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7518:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1728,
                        "initialValue": {
                          "id": 1727,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1670,
                          "src": "7535:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7518:24:9"
                      },
                      {
                        "assignments": [
                          1731
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1731,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "7566:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1792,
                            "src": "7552:19:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                              "typeString": "struct LucroPrediction.Round"
                            },
                            "typeName": {
                              "id": 1730,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1729,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1291,
                                "src": "7552:5:9"
                              },
                              "referencedDeclaration": 1291,
                              "src": "7552:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1735,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1732,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "7574:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                              "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                            }
                          },
                          "id": 1734,
                          "indexExpression": {
                            "id": 1733,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1668,
                            "src": "7581:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7574:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$1291_storage",
                            "typeString": "struct LucroPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7552:35:9"
                      },
                      {
                        "expression": {
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1736,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "7597:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 1738,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1280,
                            "src": "7597:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1739,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1731,
                                "src": "7617:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                  "typeString": "struct LucroPrediction.Round storage pointer"
                                }
                              },
                              "id": 1740,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1280,
                              "src": "7617:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1741,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "7637:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7617:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7597:46:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1744,
                        "nodeType": "ExpressionStatement",
                        "src": "7597:46:9"
                      },
                      {
                        "expression": {
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1745,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "7653:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 1747,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bullAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1282,
                            "src": "7653:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1748,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1731,
                                "src": "7672:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                  "typeString": "struct LucroPrediction.Round storage pointer"
                                }
                              },
                              "id": 1749,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bullAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1282,
                              "src": "7672:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1750,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "7691:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7672:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7653:44:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1753,
                        "nodeType": "ExpressionStatement",
                        "src": "7653:44:9"
                      },
                      {
                        "assignments": [
                          1756
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1756,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nameLocation": "7752:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1792,
                            "src": "7736:23:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                              "typeString": "struct LucroPrediction.BetInfo"
                            },
                            "typeName": {
                              "id": 1755,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1754,
                                "name": "BetInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1299,
                                "src": "7736:7:9"
                              },
                              "referencedDeclaration": 1299,
                              "src": "7736:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1763,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1757,
                              "name": "ledger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "7762:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                              }
                            },
                            "id": 1759,
                            "indexExpression": {
                              "id": 1758,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "7769:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7762:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                              "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                            }
                          },
                          "id": 1762,
                          "indexExpression": {
                            "expression": {
                              "id": 1760,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7776:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7776:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7762:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                            "typeString": "struct LucroPrediction.BetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7736:51:9"
                      },
                      {
                        "expression": {
                          "id": 1769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1764,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1756,
                              "src": "7797:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo storage pointer"
                              }
                            },
                            "id": 1766,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "position",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1294,
                            "src": "7797:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Position_$1262",
                              "typeString": "enum LucroPrediction.Position"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1767,
                              "name": "Position",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1262,
                              "src": "7816:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Position_$1262_$",
                                "typeString": "type(enum LucroPrediction.Position)"
                              }
                            },
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Bull",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1260,
                            "src": "7816:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Position_$1262",
                              "typeString": "enum LucroPrediction.Position"
                            }
                          },
                          "src": "7797:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Position_$1262",
                            "typeString": "enum LucroPrediction.Position"
                          }
                        },
                        "id": 1770,
                        "nodeType": "ExpressionStatement",
                        "src": "7797:32:9"
                      },
                      {
                        "expression": {
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1771,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1756,
                              "src": "7839:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo storage pointer"
                              }
                            },
                            "id": 1773,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1296,
                            "src": "7839:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1774,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1726,
                            "src": "7856:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7839:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1776,
                        "nodeType": "ExpressionStatement",
                        "src": "7839:23:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1782,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "7900:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1777,
                                "name": "userRounds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "7872:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 1780,
                              "indexExpression": {
                                "expression": {
                                  "id": 1778,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7883:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7883:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7872:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7872:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7872:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1784,
                        "nodeType": "ExpressionStatement",
                        "src": "7872:34:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1786,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7930:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7930:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1788,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "7942:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1789,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "7949:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1785,
                            "name": "BetBull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1315,
                            "src": "7922:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7922:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1791,
                        "nodeType": "EmitStatement",
                        "src": "7917:39:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1666,
                    "nodeType": "StructuredDocumentation",
                    "src": "6848:71:9",
                    "text": " @notice Bet bull position\n @param epoch: epoch"
                  },
                  "functionSelector": "3923e1b4",
                  "id": 1793,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1673,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1672,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "7004:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7004:13:9"
                    },
                    {
                      "id": 1675,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1674,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 296,
                        "src": "7018:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7018:12:9"
                    },
                    {
                      "id": 1677,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1676,
                        "name": "notContract",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1468,
                        "src": "7031:11:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7031:11:9"
                    }
                  ],
                  "name": "betBull",
                  "nameLocation": "6933:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1668,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "6958:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1793,
                        "src": "6950:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6950:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1670,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "6981:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1793,
                        "src": "6973:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1669,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6973:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6940:54:9"
                  },
                  "returnParameters": {
                    "id": 1678,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7043:0:9"
                  },
                  "scope": 3149,
                  "src": "6924:1039:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1958,
                    "nodeType": "Block",
                    "src": "8164:1456:9",
                    "statements": [
                      {
                        "assignments": [
                          1805
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1805,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "8182:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1958,
                            "src": "8174:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1804,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8174:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1806,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8174:14:9"
                      },
                      {
                        "body": {
                          "id": 1943,
                          "nodeType": "Block",
                          "src": "8265:1260:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1826,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1819,
                                          "name": "rounds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1254,
                                          "src": "8304:6:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                            "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                          }
                                        },
                                        "id": 1823,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 1820,
                                            "name": "epochs",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1797,
                                            "src": "8311:6:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 1822,
                                          "indexExpression": {
                                            "id": 1821,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1808,
                                            "src": "8318:1:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8311:9:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8304:17:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$1291_storage",
                                          "typeString": "struct LucroPrediction.Round storage ref"
                                        }
                                      },
                                      "id": 1824,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1266,
                                      "src": "8304:32:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1825,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8340:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "8304:37:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "526f756e6420686173206e6f742073746172746564",
                                    "id": 1827,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8359:23:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d1836faf5a24c20648fe1feea8bcbadf99f3e9a49b28354c8afadd4a78cb02f7",
                                      "typeString": "literal_string \"Round has not started\""
                                    },
                                    "value": "Round has not started"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d1836faf5a24c20648fe1feea8bcbadf99f3e9a49b28354c8afadd4a78cb02f7",
                                      "typeString": "literal_string \"Round has not started\""
                                    }
                                  ],
                                  "id": 1818,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8279:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8279:117:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1829,
                              "nodeType": "ExpressionStatement",
                              "src": "8279:117:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1831,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "8435:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1832,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "8435:15:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1833,
                                          "name": "rounds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1254,
                                          "src": "8453:6:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                            "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                          }
                                        },
                                        "id": 1837,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 1834,
                                            "name": "epochs",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1797,
                                            "src": "8460:6:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 1836,
                                          "indexExpression": {
                                            "id": 1835,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1808,
                                            "src": "8467:1:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8460:9:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8453:17:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$1291_storage",
                                          "typeString": "struct LucroPrediction.Round storage ref"
                                        }
                                      },
                                      "id": 1838,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "closeTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1270,
                                      "src": "8453:32:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8435:50:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "526f756e6420686173206e6f7420656e646564",
                                    "id": 1840,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8503:21:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_620bac5ce7ce07e7a24266f5d1f82fa5a6fdb12107b06bacff04582c4c3dd298",
                                      "typeString": "literal_string \"Round has not ended\""
                                    },
                                    "value": "Round has not ended"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_620bac5ce7ce07e7a24266f5d1f82fa5a6fdb12107b06bacff04582c4c3dd298",
                                      "typeString": "literal_string \"Round has not ended\""
                                    }
                                  ],
                                  "id": 1830,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8410:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8410:128:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1842,
                              "nodeType": "ExpressionStatement",
                              "src": "8410:128:9"
                            },
                            {
                              "assignments": [
                                1844
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1844,
                                  "mutability": "mutable",
                                  "name": "addedReward",
                                  "nameLocation": "8561:11:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1943,
                                  "src": "8553:19:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1843,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8553:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1846,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8575:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8553:23:9"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1847,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "8637:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                      "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 1851,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1848,
                                      "name": "epochs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1797,
                                      "src": "8644:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 1850,
                                    "indexExpression": {
                                      "id": 1849,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1808,
                                      "src": "8651:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8644:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8637:17:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_storage",
                                    "typeString": "struct LucroPrediction.Round storage ref"
                                  }
                                },
                                "id": 1852,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "oracleCalled",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1290,
                                "src": "8637:30:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1916,
                                "nodeType": "Block",
                                "src": "9132:228:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 1895,
                                                "name": "epochs",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1797,
                                                "src": "9190:6:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 1897,
                                              "indexExpression": {
                                                "id": 1896,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1808,
                                                "src": "9197:1:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "9190:9:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1898,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "9201:3:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 1899,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "9201:10:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1894,
                                            "name": "refundable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2654,
                                            "src": "9179:10:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                                              "typeString": "function (uint256,address) view returns (bool)"
                                            }
                                          },
                                          "id": 1900,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9179:33:9",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "4e6f7420656c696769626c6520666f7220726566756e64",
                                          "id": 1901,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9234:25:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_10916da313aec2d89ae884214021eae2adcdb0000848c813099dbdefabcb1887",
                                            "typeString": "literal_string \"Not eligible for refund\""
                                          },
                                          "value": "Not eligible for refund"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_10916da313aec2d89ae884214021eae2adcdb0000848c813099dbdefabcb1887",
                                            "typeString": "literal_string \"Not eligible for refund\""
                                          }
                                        ],
                                        "id": 1893,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "9150:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1902,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9150:127:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1903,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9150:127:9"
                                  },
                                  {
                                    "expression": {
                                      "id": 1914,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1904,
                                        "name": "addedReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1844,
                                        "src": "9295:11:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1905,
                                              "name": "ledger",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1249,
                                              "src": "9309:6:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                                "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                                              }
                                            },
                                            "id": 1909,
                                            "indexExpression": {
                                              "baseExpression": {
                                                "id": 1906,
                                                "name": "epochs",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1797,
                                                "src": "9316:6:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 1908,
                                              "indexExpression": {
                                                "id": 1907,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1808,
                                                "src": "9323:1:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "9316:9:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9309:17:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                                              "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                                            }
                                          },
                                          "id": 1912,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 1910,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "9327:3:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 1911,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "9327:10:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9309:29:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                                            "typeString": "struct LucroPrediction.BetInfo storage ref"
                                          }
                                        },
                                        "id": 1913,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1296,
                                        "src": "9309:36:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9295:50:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1915,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9295:50:9"
                                  }
                                ]
                              },
                              "id": 1917,
                              "nodeType": "IfStatement",
                              "src": "8633:727:9",
                              "trueBody": {
                                "id": 1892,
                                "nodeType": "Block",
                                "src": "8669:397:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 1855,
                                                "name": "epochs",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1797,
                                                "src": "8726:6:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 1857,
                                              "indexExpression": {
                                                "id": 1856,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1808,
                                                "src": "8733:1:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8726:9:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1858,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "8737:3:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 1859,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "8737:10:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1854,
                                            "name": "claimable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2606,
                                            "src": "8716:9:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                                              "typeString": "function (uint256,address) view returns (bool)"
                                            }
                                          },
                                          "id": 1860,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8716:32:9",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "4e6f7420656c696769626c6520666f7220636c61696d",
                                          "id": 1861,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8770:24:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4485251d168175c070f4245faf8e035abbbbeb2b93ec5dd30a17635d7bf82fa6",
                                            "typeString": "literal_string \"Not eligible for claim\""
                                          },
                                          "value": "Not eligible for claim"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_4485251d168175c070f4245faf8e035abbbbeb2b93ec5dd30a17635d7bf82fa6",
                                            "typeString": "literal_string \"Not eligible for claim\""
                                          }
                                        ],
                                        "id": 1853,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "8687:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1862,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8687:125:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1863,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8687:125:9"
                                  },
                                  {
                                    "assignments": [
                                      1866
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1866,
                                        "mutability": "mutable",
                                        "name": "round",
                                        "nameLocation": "8843:5:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1892,
                                        "src": "8830:18:9",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                          "typeString": "struct LucroPrediction.Round"
                                        },
                                        "typeName": {
                                          "id": 1865,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 1864,
                                            "name": "Round",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1291,
                                            "src": "8830:5:9"
                                          },
                                          "referencedDeclaration": 1291,
                                          "src": "8830:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                            "typeString": "struct LucroPrediction.Round"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1872,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 1867,
                                        "name": "rounds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1254,
                                        "src": "8851:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                          "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                        }
                                      },
                                      "id": 1871,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1868,
                                          "name": "epochs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1797,
                                          "src": "8858:6:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 1870,
                                        "indexExpression": {
                                          "id": 1869,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1808,
                                          "src": "8865:1:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8858:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8851:17:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$1291_storage",
                                        "typeString": "struct LucroPrediction.Round storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8830:38:9"
                                  },
                                  {
                                    "expression": {
                                      "id": 1890,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1873,
                                        "name": "addedReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1844,
                                        "src": "8886:11:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1889,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1885,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 1874,
                                                      "name": "ledger",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1249,
                                                      "src": "8921:6:9",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                                        "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                                                      }
                                                    },
                                                    "id": 1878,
                                                    "indexExpression": {
                                                      "baseExpression": {
                                                        "id": 1875,
                                                        "name": "epochs",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1797,
                                                        "src": "8928:6:9",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                          "typeString": "uint256[] calldata"
                                                        }
                                                      },
                                                      "id": 1877,
                                                      "indexExpression": {
                                                        "id": 1876,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1808,
                                                        "src": "8935:1:9",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "8928:9:9",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "8921:17:9",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                                                      "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                                                    }
                                                  },
                                                  "id": 1881,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 1879,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -15,
                                                      "src": "8939:3:9",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 1880,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "8939:10:9",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8921:29:9",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                                                    "typeString": "struct LucroPrediction.BetInfo storage ref"
                                                  }
                                                },
                                                "id": 1882,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1296,
                                                "src": "8921:36:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 1883,
                                                  "name": "round",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1866,
                                                  "src": "8984:5:9",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                                    "typeString": "struct LucroPrediction.Round memory"
                                                  }
                                                },
                                                "id": 1884,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "rewardAmount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1288,
                                                "src": "8984:18:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "8921:81:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1886,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "8920:83:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1887,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1866,
                                            "src": "9026:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                              "typeString": "struct LucroPrediction.Round memory"
                                            }
                                          },
                                          "id": 1888,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "rewardBaseCalAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1286,
                                          "src": "9026:25:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8920:131:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8886:165:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1891,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8886:165:9"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 1928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1918,
                                        "name": "ledger",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1249,
                                        "src": "9374:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                          "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                                        }
                                      },
                                      "id": 1924,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1919,
                                          "name": "epochs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1797,
                                          "src": "9381:6:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 1921,
                                        "indexExpression": {
                                          "id": 1920,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1808,
                                          "src": "9388:1:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9381:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9374:17:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                                        "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                                      }
                                    },
                                    "id": 1925,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1922,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "9392:3:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1923,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "9392:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9374:29:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                                      "typeString": "struct LucroPrediction.BetInfo storage ref"
                                    }
                                  },
                                  "id": 1926,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "claimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1298,
                                  "src": "9374:37:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1927,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9414:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9374:44:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1929,
                              "nodeType": "ExpressionStatement",
                              "src": "9374:44:9"
                            },
                            {
                              "expression": {
                                "id": 1932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1930,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1805,
                                  "src": "9432:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1931,
                                  "name": "addedReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1844,
                                  "src": "9442:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9432:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1933,
                              "nodeType": "ExpressionStatement",
                              "src": "9432:21:9"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1935,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9479:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1936,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9479:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1937,
                                      "name": "epochs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1797,
                                      "src": "9491:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 1939,
                                    "indexExpression": {
                                      "id": 1938,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1808,
                                      "src": "9498:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9491:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1940,
                                    "name": "addedReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1844,
                                    "src": "9502:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1934,
                                  "name": "Claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1323,
                                  "src": "9473:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 1941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9473:41:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1942,
                              "nodeType": "EmitStatement",
                              "src": "9468:46:9"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1811,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1808,
                            "src": "8241:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1812,
                              "name": "epochs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1797,
                              "src": "8245:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8245:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8241:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1944,
                        "initializationExpression": {
                          "assignments": [
                            1808
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1808,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8234:1:9",
                              "nodeType": "VariableDeclaration",
                              "scope": 1944,
                              "src": "8226:9:9",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1807,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8226:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1810,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8238:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8226:13:9"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8260:3:9",
                            "subExpression": {
                              "id": 1815,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1808,
                              "src": "8260:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1817,
                          "nodeType": "ExpressionStatement",
                          "src": "8260:3:9"
                        },
                        "nodeType": "ForStatement",
                        "src": "8221:1304:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1945,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1805,
                            "src": "9539:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9548:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9539:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1957,
                        "nodeType": "IfStatement",
                        "src": "9535:79:9",
                        "trueBody": {
                          "id": 1956,
                          "nodeType": "Block",
                          "src": "9551:63:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1951,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9584:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1952,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9584:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1953,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1805,
                                    "src": "9596:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1948,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1210,
                                    "src": "9565:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 478,
                                  "src": "9565:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$409_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9565:38:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1955,
                              "nodeType": "ExpressionStatement",
                              "src": "9565:38:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1794,
                    "nodeType": "StructuredDocumentation",
                    "src": "7969:100:9",
                    "text": " @notice Claim reward for an array of epochs\n @param epochs: array of epochs"
                  },
                  "functionSelector": "6ba4c138",
                  "id": 1959,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1800,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1799,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 296,
                        "src": "8139:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8139:12:9"
                    },
                    {
                      "id": 1802,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1801,
                        "name": "notContract",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1468,
                        "src": "8152:11:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8152:11:9"
                    }
                  ],
                  "name": "claim",
                  "nameLocation": "8083:5:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1798,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1797,
                        "mutability": "mutable",
                        "name": "epochs",
                        "nameLocation": "8117:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1959,
                        "src": "8098:25:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1795,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8098:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1796,
                          "nodeType": "ArrayTypeName",
                          "src": "8098:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8088:41:9"
                  },
                  "returnParameters": {
                    "id": 1803,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8164:0:9"
                  },
                  "scope": 3149,
                  "src": "8074:1546:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2018,
                    "nodeType": "Block",
                    "src": "9814:680:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1968,
                                "name": "genesisStartOnce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1219,
                                "src": "9845:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 1969,
                                "name": "genesisLockOnce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1216,
                                "src": "9865:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9845:35:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e6420616e642067656e657369734c6f636b526f756e6420697320747269676765726564",
                              "id": 1971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9894:72:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b0f2a84e88f57bf6d829bd69a411a43d04b00c018b197d9d18656699d1a2cb4f",
                                "typeString": "literal_string \"Can only run after genesisStartRound and genesisLockRound is triggered\""
                              },
                              "value": "Can only run after genesisStartRound and genesisLockRound is triggered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b0f2a84e88f57bf6d829bd69a411a43d04b00c018b197d9d18656699d1a2cb4f",
                                "typeString": "literal_string \"Can only run after genesisStartRound and genesisLockRound is triggered\""
                              }
                            ],
                            "id": 1967,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9824:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9824:152:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1973,
                        "nodeType": "ExpressionStatement",
                        "src": "9824:152:9"
                      },
                      {
                        "assignments": [
                          1975,
                          1977
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1975,
                            "mutability": "mutable",
                            "name": "currentRoundId",
                            "nameLocation": "9995:14:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2018,
                            "src": "9988:21:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 1974,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "9988:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1977,
                            "mutability": "mutable",
                            "name": "currentPrice",
                            "nameLocation": "10018:12:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2018,
                            "src": "10011:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 1976,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10011:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1980,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1978,
                            "name": "_getPriceFromOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3131,
                            "src": "10034:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint80_$_t_int256_$",
                              "typeString": "function () view returns (uint80,int256)"
                            }
                          },
                          "id": 1979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10034:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$",
                            "typeString": "tuple(uint80,int256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9987:68:9"
                      },
                      {
                        "expression": {
                          "id": 1986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1981,
                            "name": "oracleLatestRoundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "10066:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1984,
                                "name": "currentRoundId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "10096:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              ],
                              "id": 1983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10088:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1982,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10088:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10088:23:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10066:45:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1987,
                        "nodeType": "ExpressionStatement",
                        "src": "10066:45:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1989,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "10192:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1990,
                              "name": "currentRoundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1975,
                              "src": "10206:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 1991,
                              "name": "currentPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1977,
                              "src": "10222:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 1988,
                            "name": "_safeLockRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2946,
                            "src": "10177:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10177:58:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1993,
                        "nodeType": "ExpressionStatement",
                        "src": "10177:58:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1995,
                                "name": "currentEpoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "10259:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10274:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "10259:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1998,
                              "name": "currentRoundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1975,
                              "src": "10277:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 1999,
                              "name": "currentPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1977,
                              "src": "10293:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 1994,
                            "name": "_safeEndRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2866,
                            "src": "10245:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 2000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10245:61:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2001,
                        "nodeType": "ExpressionStatement",
                        "src": "10245:61:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2003,
                                "name": "currentEpoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "10334:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10349:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "10334:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2002,
                            "name": "_calculateRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "10316:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10316:35:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2007,
                        "nodeType": "ExpressionStatement",
                        "src": "10316:35:9"
                      },
                      {
                        "expression": {
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2008,
                            "name": "currentEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "10417:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2009,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "10432:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10447:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10432:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10417:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2013,
                        "nodeType": "ExpressionStatement",
                        "src": "10417:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2015,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "10474:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2014,
                            "name": "_safeStartRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2987,
                            "src": "10458:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10458:29:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2017,
                        "nodeType": "ExpressionStatement",
                        "src": "10458:29:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1960,
                    "nodeType": "StructuredDocumentation",
                    "src": "9626:123:9",
                    "text": " @notice Start the next round n, lock price for round n-1, end round n-2\n @dev Callable by operator"
                  },
                  "functionSelector": "7b3205f5",
                  "id": 2019,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1963,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1962,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "9787:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9787:13:9"
                    },
                    {
                      "id": 1965,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1964,
                        "name": "onlyOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1446,
                        "src": "9801:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9801:12:9"
                    }
                  ],
                  "name": "executeRound",
                  "nameLocation": "9763:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1961,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9775:2:9"
                  },
                  "returnParameters": {
                    "id": 1966,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9814:0:9"
                  },
                  "scope": 3149,
                  "src": "9754:740:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2072,
                    "nodeType": "Block",
                    "src": "10647:515:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2028,
                              "name": "genesisStartOnce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1219,
                              "src": "10678:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e6420697320747269676765726564",
                              "id": 2029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10708:51:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab",
                                "typeString": "literal_string \"Can only run after genesisStartRound is triggered\""
                              },
                              "value": "Can only run after genesisStartRound is triggered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab",
                                "typeString": "literal_string \"Can only run after genesisStartRound is triggered\""
                              }
                            ],
                            "id": 2027,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10657:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10657:112:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2031,
                        "nodeType": "ExpressionStatement",
                        "src": "10657:112:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "10787:16:9",
                              "subExpression": {
                                "id": 2033,
                                "name": "genesisLockOnce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1216,
                                "src": "10788:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2067656e657369734c6f636b526f756e64206f6e6365",
                              "id": 2035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10805:36:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_54c1dd6be5b30f20d2093c3e980ed73015a2bbe4a9e8d6c4aca1b60af3f18649",
                                "typeString": "literal_string \"Can only run genesisLockRound once\""
                              },
                              "value": "Can only run genesisLockRound once"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_54c1dd6be5b30f20d2093c3e980ed73015a2bbe4a9e8d6c4aca1b60af3f18649",
                                "typeString": "literal_string \"Can only run genesisLockRound once\""
                              }
                            ],
                            "id": 2032,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10779:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10779:63:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2037,
                        "nodeType": "ExpressionStatement",
                        "src": "10779:63:9"
                      },
                      {
                        "assignments": [
                          2039,
                          2041
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2039,
                            "mutability": "mutable",
                            "name": "currentRoundId",
                            "nameLocation": "10861:14:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2072,
                            "src": "10854:21:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 2038,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "10854:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2041,
                            "mutability": "mutable",
                            "name": "currentPrice",
                            "nameLocation": "10884:12:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2072,
                            "src": "10877:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 2040,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10877:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2044,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2042,
                            "name": "_getPriceFromOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3131,
                            "src": "10900:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint80_$_t_int256_$",
                              "typeString": "function () view returns (uint80,int256)"
                            }
                          },
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10900:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$",
                            "typeString": "tuple(uint80,int256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10853:68:9"
                      },
                      {
                        "expression": {
                          "id": 2050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2045,
                            "name": "oracleLatestRoundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "10932:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2048,
                                "name": "currentRoundId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "10962:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              ],
                              "id": 2047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10954:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2046,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10954:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10954:23:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10932:45:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2051,
                        "nodeType": "ExpressionStatement",
                        "src": "10932:45:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2053,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "11003:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2054,
                              "name": "currentRoundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2039,
                              "src": "11017:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 2055,
                              "name": "currentPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2041,
                              "src": "11033:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 2052,
                            "name": "_safeLockRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2946,
                            "src": "10988:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 2056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10988:58:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2057,
                        "nodeType": "ExpressionStatement",
                        "src": "10988:58:9"
                      },
                      {
                        "expression": {
                          "id": 2062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2058,
                            "name": "currentEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "11057:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2059,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "11072:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11087:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11072:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11057:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2063,
                        "nodeType": "ExpressionStatement",
                        "src": "11057:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2065,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "11110:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2064,
                            "name": "_startRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3045,
                            "src": "11098:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11098:25:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2067,
                        "nodeType": "ExpressionStatement",
                        "src": "11098:25:9"
                      },
                      {
                        "expression": {
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2068,
                            "name": "genesisLockOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "11133:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11151:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11133:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2071,
                        "nodeType": "ExpressionStatement",
                        "src": "11133:22:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2020,
                    "nodeType": "StructuredDocumentation",
                    "src": "10500:78:9",
                    "text": " @notice Lock genesis round\n @dev Callable by operator"
                  },
                  "functionSelector": "d9d55eac",
                  "id": 2073,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2023,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2022,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "10620:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10620:13:9"
                    },
                    {
                      "id": 2025,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2024,
                        "name": "onlyOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1446,
                        "src": "10634:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10634:12:9"
                    }
                  ],
                  "name": "genesisLockRound",
                  "nameLocation": "10592:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10608:2:9"
                  },
                  "returnParameters": {
                    "id": 2026,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10647:0:9"
                  },
                  "scope": 3149,
                  "src": "10583:579:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2101,
                    "nodeType": "Block",
                    "src": "11326:192:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "11344:17:9",
                              "subExpression": {
                                "id": 2082,
                                "name": "genesisStartOnce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1219,
                                "src": "11345:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2067656e657369735374617274526f756e64206f6e6365",
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11363:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a9ea304ddc1d813a52e1a9668db582745527adccdd0906ce8d85b183192c0132",
                                "typeString": "literal_string \"Can only run genesisStartRound once\""
                              },
                              "value": "Can only run genesisStartRound once"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a9ea304ddc1d813a52e1a9668db582745527adccdd0906ce8d85b183192c0132",
                                "typeString": "literal_string \"Can only run genesisStartRound once\""
                              }
                            ],
                            "id": 2081,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11336:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11336:65:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2086,
                        "nodeType": "ExpressionStatement",
                        "src": "11336:65:9"
                      },
                      {
                        "expression": {
                          "id": 2091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2087,
                            "name": "currentEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "11412:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2088,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "11427:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11442:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11427:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11412:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2092,
                        "nodeType": "ExpressionStatement",
                        "src": "11412:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2094,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "11465:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2093,
                            "name": "_startRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3045,
                            "src": "11453:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11453:25:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2096,
                        "nodeType": "ExpressionStatement",
                        "src": "11453:25:9"
                      },
                      {
                        "expression": {
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2097,
                            "name": "genesisStartOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "11488:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11507:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11488:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2100,
                        "nodeType": "ExpressionStatement",
                        "src": "11488:23:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2074,
                    "nodeType": "StructuredDocumentation",
                    "src": "11168:88:9",
                    "text": " @notice Start genesis round\n @dev Callable by admin or operator"
                  },
                  "functionSelector": "452fd75a",
                  "id": 2102,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2077,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2076,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "11299:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11299:13:9"
                    },
                    {
                      "id": 2079,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2078,
                        "name": "onlyOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1446,
                        "src": "11313:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11313:12:9"
                    }
                  ],
                  "name": "genesisStartRound",
                  "nameLocation": "11270:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2075,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11287:2:9"
                  },
                  "returnParameters": {
                    "id": 2080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11326:0:9"
                  },
                  "scope": 3149,
                  "src": "11261:257:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2117,
                    "nodeType": "Block",
                    "src": "11710:60:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2110,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "11720:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11720:8:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2112,
                        "nodeType": "ExpressionStatement",
                        "src": "11720:8:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2114,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "11750:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2113,
                            "name": "Pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "11744:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11744:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2116,
                        "nodeType": "EmitStatement",
                        "src": "11739:24:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2103,
                    "nodeType": "StructuredDocumentation",
                    "src": "11524:121:9",
                    "text": " @notice called by the admin to pause, triggers stopped state\n @dev Callable by admin or operator"
                  },
                  "functionSelector": "8456cb59",
                  "id": 2118,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2106,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2105,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "11676:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11676:13:9"
                    },
                    {
                      "id": 2108,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2107,
                        "name": "onlyAdminOrOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1434,
                        "src": "11690:19:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11690:19:9"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "11659:5:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2104,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11664:2:9"
                  },
                  "returnParameters": {
                    "id": 2109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11710:0:9"
                  },
                  "scope": 3149,
                  "src": "11650:120:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2145,
                    "nodeType": "Block",
                    "src": "11924:207:9",
                    "statements": [
                      {
                        "assignments": [
                          2127
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2127,
                            "mutability": "mutable",
                            "name": "currentTreasuryAmount",
                            "nameLocation": "11942:21:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2145,
                            "src": "11934:29:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2126,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11934:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2129,
                        "initialValue": {
                          "id": 2128,
                          "name": "treasuryAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1233,
                          "src": "11966:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11934:46:9"
                      },
                      {
                        "expression": {
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2130,
                            "name": "treasuryAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "11990:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12007:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11990:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2133,
                        "nodeType": "ExpressionStatement",
                        "src": "11990:18:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2137,
                              "name": "adminAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "12037:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2138,
                              "name": "currentTreasuryAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "12051:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2134,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "12018:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 478,
                            "src": "12018:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$409_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12018:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2140,
                        "nodeType": "ExpressionStatement",
                        "src": "12018:55:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2142,
                              "name": "currentTreasuryAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "12102:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2141,
                            "name": "TreasuryClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "12088:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12088:36:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2144,
                        "nodeType": "EmitStatement",
                        "src": "12083:41:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2119,
                    "nodeType": "StructuredDocumentation",
                    "src": "11776:86:9",
                    "text": " @notice Claim all rewards in treasury\n @dev Callable by admin"
                  },
                  "functionSelector": "003bdc74",
                  "id": 2146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2122,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2121,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 296,
                        "src": "11901:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11901:12:9"
                    },
                    {
                      "id": 2124,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2123,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1417,
                        "src": "11914:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11914:9:9"
                    }
                  ],
                  "name": "claimTreasury",
                  "nameLocation": "11876:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2120,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11889:2:9"
                  },
                  "returnParameters": {
                    "id": 2125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11924:0:9"
                  },
                  "scope": 3149,
                  "src": "11867:264:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2169,
                    "nodeType": "Block",
                    "src": "12417:131:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2154,
                            "name": "genesisStartOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "12427:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12446:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "12427:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2157,
                        "nodeType": "ExpressionStatement",
                        "src": "12427:24:9"
                      },
                      {
                        "expression": {
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2158,
                            "name": "genesisLockOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "12461:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12479:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "12461:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2161,
                        "nodeType": "ExpressionStatement",
                        "src": "12461:23:9"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2162,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "12494:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12494:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2164,
                        "nodeType": "ExpressionStatement",
                        "src": "12494:10:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2166,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "12528:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2165,
                            "name": "Unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1405,
                            "src": "12520:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12520:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2168,
                        "nodeType": "EmitStatement",
                        "src": "12515:26:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2147,
                    "nodeType": "StructuredDocumentation",
                    "src": "12137:216:9",
                    "text": " @notice called by the admin to unpause, returns to normal state\n Reset genesis state. Once paused, the rounds would need to be kickstarted by genesis\n @dev Callable by admin or operator"
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 2170,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2150,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2149,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "12386:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12386:10:9"
                    },
                    {
                      "id": 2152,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2151,
                        "name": "onlyAdminOrOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1434,
                        "src": "12397:19:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12397:19:9"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "12367:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2148,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12374:2:9"
                  },
                  "returnParameters": {
                    "id": 2153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12417:0:9"
                  },
                  "scope": 3149,
                  "src": "12358:190:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2202,
                    "nodeType": "Block",
                    "src": "12791:307:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2183,
                                "name": "_bufferSeconds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2173,
                                "src": "12822:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2184,
                                "name": "_intervalSeconds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2175,
                                "src": "12839:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12822:33:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6275666665725365636f6e6473206d75737420626520696e666572696f7220746f20696e74657276616c5365636f6e6473",
                              "id": 2186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12869:51:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_33274a361372ebeacba5c8e2184d7f229ddb12fab7235d1315991afd5a00ecae",
                                "typeString": "literal_string \"bufferSeconds must be inferior to intervalSeconds\""
                              },
                              "value": "bufferSeconds must be inferior to intervalSeconds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_33274a361372ebeacba5c8e2184d7f229ddb12fab7235d1315991afd5a00ecae",
                                "typeString": "literal_string \"bufferSeconds must be inferior to intervalSeconds\""
                              }
                            ],
                            "id": 2182,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12801:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12801:129:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2188,
                        "nodeType": "ExpressionStatement",
                        "src": "12801:129:9"
                      },
                      {
                        "expression": {
                          "id": 2191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2189,
                            "name": "bufferSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "12940:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2190,
                            "name": "_bufferSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2173,
                            "src": "12956:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12940:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2192,
                        "nodeType": "ExpressionStatement",
                        "src": "12940:30:9"
                      },
                      {
                        "expression": {
                          "id": 2195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2193,
                            "name": "intervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "12980:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2194,
                            "name": "_intervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "12998:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12980:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2196,
                        "nodeType": "ExpressionStatement",
                        "src": "12980:34:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2198,
                              "name": "_bufferSeconds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2173,
                              "src": "13058:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2199,
                              "name": "_intervalSeconds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "13074:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2197,
                            "name": "NewBufferAndIntervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1349,
                            "src": "13030:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13030:61:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2201,
                        "nodeType": "EmitStatement",
                        "src": "13025:66:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2171,
                    "nodeType": "StructuredDocumentation",
                    "src": "12554:93:9",
                    "text": " @notice Set buffer and interval (in seconds)\n @dev Callable by admin"
                  },
                  "functionSelector": "890dc766",
                  "id": 2203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2178,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2177,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "12770:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12770:10:9"
                    },
                    {
                      "id": 2180,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2179,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1417,
                        "src": "12781:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12781:9:9"
                    }
                  ],
                  "name": "setBufferAndIntervalSeconds",
                  "nameLocation": "12661:27:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2173,
                        "mutability": "mutable",
                        "name": "_bufferSeconds",
                        "nameLocation": "12706:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2203,
                        "src": "12698:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12698:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2175,
                        "mutability": "mutable",
                        "name": "_intervalSeconds",
                        "nameLocation": "12738:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2203,
                        "src": "12730:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12730:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12688:72:9"
                  },
                  "returnParameters": {
                    "id": 2181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12791:0:9"
                  },
                  "scope": 3149,
                  "src": "12652:446:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2229,
                    "nodeType": "Block",
                    "src": "13274:166:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2214,
                                "name": "_minBetAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2206,
                                "src": "13292:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13309:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "13292:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d757374206265207375706572696f7220746f2030",
                              "id": 2217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13312:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b0163f2fb50c6c5784d12ab9af56eb359b1d810de577e2657eccb92b9a70f495",
                                "typeString": "literal_string \"Must be superior to 0\""
                              },
                              "value": "Must be superior to 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b0163f2fb50c6c5784d12ab9af56eb359b1d810de577e2657eccb92b9a70f495",
                                "typeString": "literal_string \"Must be superior to 0\""
                              }
                            ],
                            "id": 2213,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13284:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13284:52:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2219,
                        "nodeType": "ExpressionStatement",
                        "src": "13284:52:9"
                      },
                      {
                        "expression": {
                          "id": 2222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2220,
                            "name": "minBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "13346:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2221,
                            "name": "_minBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "13361:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13346:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2223,
                        "nodeType": "ExpressionStatement",
                        "src": "13346:28:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2225,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "13406:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2226,
                              "name": "minBetAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1229,
                              "src": "13420:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2224,
                            "name": "NewMinBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "13390:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13390:43:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2228,
                        "nodeType": "EmitStatement",
                        "src": "13385:48:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2204,
                    "nodeType": "StructuredDocumentation",
                    "src": "13104:73:9",
                    "text": " @notice Set minBetAmount\n @dev Callable by admin"
                  },
                  "functionSelector": "6c188593",
                  "id": 2230,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2209,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2208,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "13253:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13253:10:9"
                    },
                    {
                      "id": 2211,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2210,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1417,
                        "src": "13264:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13264:9:9"
                    }
                  ],
                  "name": "setMinBetAmount",
                  "nameLocation": "13191:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2206,
                        "mutability": "mutable",
                        "name": "_minBetAmount",
                        "nameLocation": "13224:13:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "13216:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13216:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13206:37:9"
                  },
                  "returnParameters": {
                    "id": 2212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13274:0:9"
                  },
                  "scope": 3149,
                  "src": "13182:258:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2256,
                    "nodeType": "Block",
                    "src": "13594:178:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2239,
                                "name": "_operatorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2233,
                                "src": "13612:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2242,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13640:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13632:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2240,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13632:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13632:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "13612:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13644:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              },
                              "value": "Cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              }
                            ],
                            "id": 2238,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13604:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13604:65:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2247,
                        "nodeType": "ExpressionStatement",
                        "src": "13604:65:9"
                      },
                      {
                        "expression": {
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2248,
                            "name": "operatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1223,
                            "src": "13679:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2249,
                            "name": "_operatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2233,
                            "src": "13697:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13679:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2251,
                        "nodeType": "ExpressionStatement",
                        "src": "13679:34:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2253,
                              "name": "_operatorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2233,
                              "src": "13748:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2252,
                            "name": "NewOperatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1365,
                            "src": "13729:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13729:36:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2255,
                        "nodeType": "EmitStatement",
                        "src": "13724:41:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2231,
                    "nodeType": "StructuredDocumentation",
                    "src": "13446:77:9",
                    "text": " @notice Set operator address\n @dev Callable by admin"
                  },
                  "functionSelector": "b3ab15fb",
                  "id": 2257,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2236,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2235,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1417,
                        "src": "13584:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13584:9:9"
                    }
                  ],
                  "name": "setOperator",
                  "nameLocation": "13537:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2233,
                        "mutability": "mutable",
                        "name": "_operatorAddress",
                        "nameLocation": "13557:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2257,
                        "src": "13549:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13549:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13548:26:9"
                  },
                  "returnParameters": {
                    "id": 2237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13594:0:9"
                  },
                  "scope": 3149,
                  "src": "13528:244:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2296,
                    "nodeType": "Block",
                    "src": "13924:308:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2268,
                                "name": "_oracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2260,
                                "src": "13942:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2271,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13961:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2270,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13953:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2269,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13953:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13953:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "13942:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13965:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              },
                              "value": "Cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              }
                            ],
                            "id": 2267,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13934:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13934:56:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2276,
                        "nodeType": "ExpressionStatement",
                        "src": "13934:56:9"
                      },
                      {
                        "expression": {
                          "id": 2279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2277,
                            "name": "oracleLatestRoundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "14000:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14022:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14000:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2280,
                        "nodeType": "ExpressionStatement",
                        "src": "14000:23:9"
                      },
                      {
                        "expression": {
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2281,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1213,
                            "src": "14033:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2283,
                                "name": "_oracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2260,
                                "src": "14064:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2282,
                              "name": "AggregatorV3Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "14042:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                                "typeString": "type(contract AggregatorV3Interface)"
                              }
                            },
                            "id": 2284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14042:30:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "14033:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 2286,
                        "nodeType": "ExpressionStatement",
                        "src": "14033:39:9"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2287,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "14167:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 2289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44,
                            "src": "14167:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 2290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14167:24:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "id": 2291,
                        "nodeType": "ExpressionStatement",
                        "src": "14167:24:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2293,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2260,
                              "src": "14217:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2292,
                            "name": "NewOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1369,
                            "src": "14207:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14207:18:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2295,
                        "nodeType": "EmitStatement",
                        "src": "14202:23:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2258,
                    "nodeType": "StructuredDocumentation",
                    "src": "13778:75:9",
                    "text": " @notice Set Oracle address\n @dev Callable by admin"
                  },
                  "functionSelector": "7adbf973",
                  "id": 2297,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2263,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2262,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "13903:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13903:10:9"
                    },
                    {
                      "id": 2265,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2264,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1417,
                        "src": "13914:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13914:9:9"
                    }
                  ],
                  "name": "setOracle",
                  "nameLocation": "13867:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2260,
                        "mutability": "mutable",
                        "name": "_oracle",
                        "nameLocation": "13885:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2297,
                        "src": "13877:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13877:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13876:17:9"
                  },
                  "returnParameters": {
                    "id": 2266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13924:0:9"
                  },
                  "scope": 3149,
                  "src": "13858:374:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2315,
                    "nodeType": "Block",
                    "src": "14437:127:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 2309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2307,
                            "name": "oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1239,
                            "src": "14447:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2308,
                            "name": "_oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2300,
                            "src": "14471:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14447:46:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2310,
                        "nodeType": "ExpressionStatement",
                        "src": "14447:46:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2312,
                              "name": "_oracleUpdateAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2300,
                              "src": "14534:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2311,
                            "name": "NewOracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "14509:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14509:48:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2314,
                        "nodeType": "EmitStatement",
                        "src": "14504:53:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2298,
                    "nodeType": "StructuredDocumentation",
                    "src": "14238:84:9",
                    "text": " @notice Set oracle update allowance\n @dev Callable by admin"
                  },
                  "functionSelector": "cf2f5039",
                  "id": 2316,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2303,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2302,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "14416:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14416:10:9"
                    },
                    {
                      "id": 2305,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2304,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1417,
                        "src": "14427:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14427:9:9"
                    }
                  ],
                  "name": "setOracleUpdateAllowance",
                  "nameLocation": "14336:24:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2300,
                        "mutability": "mutable",
                        "name": "_oracleUpdateAllowance",
                        "nameLocation": "14378:22:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2316,
                        "src": "14370:30:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14370:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14360:46:9"
                  },
                  "returnParameters": {
                    "id": 2306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14437:0:9"
                  },
                  "scope": 3149,
                  "src": "14327:237:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2342,
                    "nodeType": "Block",
                    "src": "14738:176:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2327,
                                "name": "_treasuryFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2319,
                                "src": "14756:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 2328,
                                "name": "MAX_TREASURY_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1242,
                                "src": "14772:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14756:32:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726561737572792066656520746f6f2068696768",
                              "id": 2330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14790:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff",
                                "typeString": "literal_string \"Treasury fee too high\""
                              },
                              "value": "Treasury fee too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff",
                                "typeString": "literal_string \"Treasury fee too high\""
                              }
                            ],
                            "id": 2326,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14748:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14748:66:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2332,
                        "nodeType": "ExpressionStatement",
                        "src": "14748:66:9"
                      },
                      {
                        "expression": {
                          "id": 2335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2333,
                            "name": "treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1231,
                            "src": "14824:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2334,
                            "name": "_treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2319,
                            "src": "14838:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14824:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2336,
                        "nodeType": "ExpressionStatement",
                        "src": "14824:26:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2338,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "14881:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2339,
                              "name": "treasuryFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1231,
                              "src": "14895:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2337,
                            "name": "NewTreasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "14866:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14866:41:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2341,
                        "nodeType": "EmitStatement",
                        "src": "14861:46:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2317,
                    "nodeType": "StructuredDocumentation",
                    "src": "14570:73:9",
                    "text": " @notice Set treasury fee\n @dev Callable by admin"
                  },
                  "functionSelector": "77e741c7",
                  "id": 2343,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2322,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2321,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "14717:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14717:10:9"
                    },
                    {
                      "id": 2324,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2323,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1417,
                        "src": "14728:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14728:9:9"
                    }
                  ],
                  "name": "setTreasuryFee",
                  "nameLocation": "14657:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2319,
                        "mutability": "mutable",
                        "name": "_treasuryFee",
                        "nameLocation": "14689:12:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2343,
                        "src": "14681:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2318,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14681:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14671:36:9"
                  },
                  "returnParameters": {
                    "id": 2325,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14738:0:9"
                  },
                  "scope": 3149,
                  "src": "14648:266:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2380,
                    "nodeType": "Block",
                    "src": "15197:201:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2354,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2346,
                                "src": "15215:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2357,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1210,
                                    "src": "15233:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$409",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15225:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2355,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15225:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15225:14:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15215:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f742062652070726564696374696f6e20746f6b656e2061646472657373",
                              "id": 2360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15241:36:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fdc01b32442620471a9658ad8d4f600b20f28bafa372c47b397a9042c39956d",
                                "typeString": "literal_string \"Cannot be prediction token address\""
                              },
                              "value": "Cannot be prediction token address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fdc01b32442620471a9658ad8d4f600b20f28bafa372c47b397a9042c39956d",
                                "typeString": "literal_string \"Cannot be prediction token address\""
                              }
                            ],
                            "id": 2353,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15207:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15207:71:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2362,
                        "nodeType": "ExpressionStatement",
                        "src": "15207:71:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2369,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "15324:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "15324:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15316:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2367,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15316:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15316:19:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2372,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2348,
                              "src": "15337:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2364,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2346,
                                  "src": "15295:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2363,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 409,
                                "src": "15288:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$409_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15288:14:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$409",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 478,
                            "src": "15288:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$409_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15288:57:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2374,
                        "nodeType": "ExpressionStatement",
                        "src": "15288:57:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2376,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2346,
                              "src": "15375:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2377,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2348,
                              "src": "15383:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2375,
                            "name": "TokenRecovery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "15361:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15361:30:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2379,
                        "nodeType": "EmitStatement",
                        "src": "15356:35:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2344,
                    "nodeType": "StructuredDocumentation",
                    "src": "14920:198:9",
                    "text": " @notice It allows the owner to recover tokens sent to the contract by mistake\n @param _token: token address\n @param _amount: token amount\n @dev Callable by owner"
                  },
                  "functionSelector": "b29a8140",
                  "id": 2381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2351,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2350,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "15187:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15187:9:9"
                    }
                  ],
                  "name": "recoverToken",
                  "nameLocation": "15132:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2346,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "15153:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "15145:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15145:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2348,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "15169:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "15161:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15161:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15144:33:9"
                  },
                  "returnParameters": {
                    "id": 2352,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15197:0:9"
                  },
                  "scope": 3149,
                  "src": "15123:275:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2407,
                    "nodeType": "Block",
                    "src": "15543:163:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2390,
                                "name": "_adminAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2384,
                                "src": "15561:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15586:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15578:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2391,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15578:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15578:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15561:27:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                              "id": 2396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15590:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              },
                              "value": "Cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              }
                            ],
                            "id": 2389,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15553:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15553:62:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2398,
                        "nodeType": "ExpressionStatement",
                        "src": "15553:62:9"
                      },
                      {
                        "expression": {
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2399,
                            "name": "adminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1221,
                            "src": "15625:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2400,
                            "name": "_adminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2384,
                            "src": "15640:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15625:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2402,
                        "nodeType": "ExpressionStatement",
                        "src": "15625:28:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2404,
                              "name": "_adminAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2384,
                              "src": "15685:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2403,
                            "name": "NewAdminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "15669:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15669:30:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2406,
                        "nodeType": "EmitStatement",
                        "src": "15664:35:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2382,
                    "nodeType": "StructuredDocumentation",
                    "src": "15404:74:9",
                    "text": " @notice Set admin address\n @dev Callable by owner"
                  },
                  "functionSelector": "704b6c02",
                  "id": 2408,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2387,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2386,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "15533:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15533:9:9"
                    }
                  ],
                  "name": "setAdmin",
                  "nameLocation": "15492:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2384,
                        "mutability": "mutable",
                        "name": "_adminAddress",
                        "nameLocation": "15509:13:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2408,
                        "src": "15501:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15501:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15500:23:9"
                  },
                  "returnParameters": {
                    "id": 2388,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15543:0:9"
                  },
                  "scope": 3149,
                  "src": "15483:223:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2516,
                    "nodeType": "Block",
                    "src": "16069:491:9",
                    "statements": [
                      {
                        "assignments": [
                          2428
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2428,
                            "mutability": "mutable",
                            "name": "length",
                            "nameLocation": "16087:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2516,
                            "src": "16079:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2427,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16079:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2430,
                        "initialValue": {
                          "id": 2429,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2415,
                          "src": "16096:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16079:21:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2431,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2428,
                            "src": "16115:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2432,
                                  "name": "userRounds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1259,
                                  "src": "16124:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                    "typeString": "mapping(address => uint256[] storage ref)"
                                  }
                                },
                                "id": 2434,
                                "indexExpression": {
                                  "id": 2433,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2411,
                                  "src": "16135:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16124:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 2435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "16124:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2436,
                              "name": "cursor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2413,
                              "src": "16150:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16124:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16115:41:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2449,
                        "nodeType": "IfStatement",
                        "src": "16111:113:9",
                        "trueBody": {
                          "id": 2448,
                          "nodeType": "Block",
                          "src": "16158:66:9",
                          "statements": [
                            {
                              "expression": {
                                "id": 2446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2439,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2428,
                                  "src": "16172:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2440,
                                        "name": "userRounds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1259,
                                        "src": "16181:10:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                          "typeString": "mapping(address => uint256[] storage ref)"
                                        }
                                      },
                                      "id": 2442,
                                      "indexExpression": {
                                        "id": 2441,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2411,
                                        "src": "16192:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16181:16:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 2443,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "16181:23:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2444,
                                    "name": "cursor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2413,
                                    "src": "16207:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16181:32:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16172:41:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2447,
                              "nodeType": "ExpressionStatement",
                              "src": "16172:41:9"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2454
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2454,
                            "mutability": "mutable",
                            "name": "values",
                            "nameLocation": "16251:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2516,
                            "src": "16234:23:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2452,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16234:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2453,
                              "nodeType": "ArrayTypeName",
                              "src": "16234:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2460,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2458,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2428,
                              "src": "16274:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "16260:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2455,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16264:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2456,
                              "nodeType": "ArrayTypeName",
                              "src": "16264:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 2459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16260:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16234:47:9"
                      },
                      {
                        "assignments": [
                          2465
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2465,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nameLocation": "16308:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2516,
                            "src": "16291:24:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct LucroPrediction.BetInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2463,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2462,
                                  "name": "BetInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1299,
                                  "src": "16291:7:9"
                                },
                                "referencedDeclaration": 1299,
                                "src": "16291:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                  "typeString": "struct LucroPrediction.BetInfo"
                                }
                              },
                              "id": 2464,
                              "nodeType": "ArrayTypeName",
                              "src": "16291:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BetInfo_$1299_storage_$dyn_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2472,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2470,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2428,
                              "src": "16332:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "16318:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct LucroPrediction.BetInfo memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2467,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2466,
                                  "name": "BetInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1299,
                                  "src": "16322:7:9"
                                },
                                "referencedDeclaration": 1299,
                                "src": "16322:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                  "typeString": "struct LucroPrediction.BetInfo"
                                }
                              },
                              "id": 2468,
                              "nodeType": "ArrayTypeName",
                              "src": "16322:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BetInfo_$1299_storage_$dyn_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo[]"
                              }
                            }
                          },
                          "id": 2471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16318:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct LucroPrediction.BetInfo memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16291:48:9"
                      },
                      {
                        "body": {
                          "id": 2507,
                          "nodeType": "Block",
                          "src": "16387:115:9",
                          "statements": [
                            {
                              "expression": {
                                "id": 2493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2483,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2454,
                                    "src": "16401:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 2485,
                                  "indexExpression": {
                                    "id": 2484,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2474,
                                    "src": "16408:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16401:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2486,
                                      "name": "userRounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1259,
                                      "src": "16413:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[] storage ref)"
                                      }
                                    },
                                    "id": 2488,
                                    "indexExpression": {
                                      "id": 2487,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2411,
                                      "src": "16424:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16413:16:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 2492,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2491,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2489,
                                      "name": "cursor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2413,
                                      "src": "16430:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2490,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2474,
                                      "src": "16439:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "16430:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16413:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16401:40:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2494,
                              "nodeType": "ExpressionStatement",
                              "src": "16401:40:9"
                            },
                            {
                              "expression": {
                                "id": 2505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2495,
                                    "name": "betInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2465,
                                    "src": "16455:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct LucroPrediction.BetInfo memory[] memory"
                                    }
                                  },
                                  "id": 2497,
                                  "indexExpression": {
                                    "id": 2496,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2474,
                                    "src": "16463:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16455:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                                    "typeString": "struct LucroPrediction.BetInfo memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2498,
                                      "name": "ledger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1249,
                                      "src": "16468:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                                      }
                                    },
                                    "id": 2502,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 2499,
                                        "name": "values",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2454,
                                        "src": "16475:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 2501,
                                      "indexExpression": {
                                        "id": 2500,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2474,
                                        "src": "16482:1:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16475:9:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16468:17:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                                      "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                                    }
                                  },
                                  "id": 2504,
                                  "indexExpression": {
                                    "id": 2503,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2411,
                                    "src": "16486:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16468:23:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                                    "typeString": "struct LucroPrediction.BetInfo storage ref"
                                  }
                                },
                                "src": "16455:36:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                                  "typeString": "struct LucroPrediction.BetInfo memory"
                                }
                              },
                              "id": 2506,
                              "nodeType": "ExpressionStatement",
                              "src": "16455:36:9"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2477,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2474,
                            "src": "16370:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2478,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2428,
                            "src": "16374:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16370:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2508,
                        "initializationExpression": {
                          "assignments": [
                            2474
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2474,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16363:1:9",
                              "nodeType": "VariableDeclaration",
                              "scope": 2508,
                              "src": "16355:9:9",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2473,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16355:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2476,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16367:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16355:13:9"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16382:3:9",
                            "subExpression": {
                              "id": 2480,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2474,
                              "src": "16382:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2482,
                          "nodeType": "ExpressionStatement",
                          "src": "16382:3:9"
                        },
                        "nodeType": "ForStatement",
                        "src": "16350:152:9"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 2509,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2454,
                              "src": "16520:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 2510,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2465,
                              "src": "16528:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct LucroPrediction.BetInfo memory[] memory"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2511,
                                "name": "cursor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2413,
                                "src": "16537:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 2512,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2428,
                                "src": "16546:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16537:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2514,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16519:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(uint256[] memory,struct LucroPrediction.BetInfo memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 2426,
                        "id": 2515,
                        "nodeType": "Return",
                        "src": "16512:41:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2409,
                    "nodeType": "StructuredDocumentation",
                    "src": "15712:187:9",
                    "text": " @notice Returns round epochs and bet information for a user that has participated\n @param user: user address\n @param cursor: cursor\n @param size: size"
                  },
                  "functionSelector": "951fd600",
                  "id": 2517,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserRounds",
                  "nameLocation": "15913:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2411,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "15944:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2517,
                        "src": "15936:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2410,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15936:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2413,
                        "mutability": "mutable",
                        "name": "cursor",
                        "nameLocation": "15966:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2517,
                        "src": "15958:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15958:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2415,
                        "mutability": "mutable",
                        "name": "size",
                        "nameLocation": "15990:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2517,
                        "src": "15982:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2414,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15982:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15926:74:9"
                  },
                  "returnParameters": {
                    "id": 2426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2419,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2517,
                        "src": "16024:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2417,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "16024:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2418,
                          "nodeType": "ArrayTypeName",
                          "src": "16024:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2423,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2517,
                        "src": "16042:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct LucroPrediction.BetInfo[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2421,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2420,
                              "name": "BetInfo",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1299,
                              "src": "16042:7:9"
                            },
                            "referencedDeclaration": 1299,
                            "src": "16042:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                              "typeString": "struct LucroPrediction.BetInfo"
                            }
                          },
                          "id": 2422,
                          "nodeType": "ArrayTypeName",
                          "src": "16042:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BetInfo_$1299_storage_$dyn_storage_ptr",
                            "typeString": "struct LucroPrediction.BetInfo[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2425,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2517,
                        "src": "16060:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16060:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16023:45:9"
                  },
                  "scope": 3149,
                  "src": "15904:656:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2530,
                    "nodeType": "Block",
                    "src": "16733:47:9",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2525,
                              "name": "userRounds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "16750:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                "typeString": "mapping(address => uint256[] storage ref)"
                              }
                            },
                            "id": 2527,
                            "indexExpression": {
                              "id": 2526,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2520,
                              "src": "16761:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16750:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 2528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16750:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2524,
                        "id": 2529,
                        "nodeType": "Return",
                        "src": "16743:30:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2518,
                    "nodeType": "StructuredDocumentation",
                    "src": "16566:87:9",
                    "text": " @notice Returns round epochs length\n @param user: user address"
                  },
                  "functionSelector": "273867d4",
                  "id": 2531,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserRoundsLength",
                  "nameLocation": "16667:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2520,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "16695:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2531,
                        "src": "16687:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2519,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16687:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16686:14:9"
                  },
                  "returnParameters": {
                    "id": 2524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2523,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2531,
                        "src": "16724:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16724:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16723:9:9"
                  },
                  "scope": 3149,
                  "src": "16658:122:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2605,
                    "nodeType": "Block",
                    "src": "17011:526:9",
                    "statements": [
                      {
                        "assignments": [
                          2543
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2543,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nameLocation": "17036:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2605,
                            "src": "17021:22:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                              "typeString": "struct LucroPrediction.BetInfo"
                            },
                            "typeName": {
                              "id": 2542,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2541,
                                "name": "BetInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1299,
                                "src": "17021:7:9"
                              },
                              "referencedDeclaration": 1299,
                              "src": "17021:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2549,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2544,
                              "name": "ledger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "17046:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                              }
                            },
                            "id": 2546,
                            "indexExpression": {
                              "id": 2545,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2534,
                              "src": "17053:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17046:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                              "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                            }
                          },
                          "id": 2548,
                          "indexExpression": {
                            "id": 2547,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2536,
                            "src": "17060:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17046:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                            "typeString": "struct LucroPrediction.BetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17021:44:9"
                      },
                      {
                        "assignments": [
                          2552
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2552,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "17088:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2605,
                            "src": "17075:18:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                              "typeString": "struct LucroPrediction.Round"
                            },
                            "typeName": {
                              "id": 2551,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2550,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1291,
                                "src": "17075:5:9"
                              },
                              "referencedDeclaration": 1291,
                              "src": "17075:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2556,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2553,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "17096:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                              "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                            }
                          },
                          "id": 2555,
                          "indexExpression": {
                            "id": 2554,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2534,
                            "src": "17103:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17096:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$1291_storage",
                            "typeString": "struct LucroPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17075:34:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2557,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2552,
                              "src": "17123:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                "typeString": "struct LucroPrediction.Round memory"
                              }
                            },
                            "id": 2558,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1272,
                            "src": "17123:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2559,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2552,
                              "src": "17142:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                "typeString": "struct LucroPrediction.Round memory"
                              }
                            },
                            "id": 2560,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closePrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1274,
                            "src": "17142:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "17123:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2565,
                        "nodeType": "IfStatement",
                        "src": "17119:78:9",
                        "trueBody": {
                          "id": 2564,
                          "nodeType": "Block",
                          "src": "17160:37:9",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 2562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17181:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 2540,
                              "id": 2563,
                              "nodeType": "Return",
                              "src": "17174:12:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2566,
                                  "name": "round",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2552,
                                  "src": "17225:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                    "typeString": "struct LucroPrediction.Round memory"
                                  }
                                },
                                "id": 2567,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "oracleCalled",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1290,
                                "src": "17225:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2568,
                                    "name": "betInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2543,
                                    "src": "17259:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                                      "typeString": "struct LucroPrediction.BetInfo memory"
                                    }
                                  },
                                  "id": 2569,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1296,
                                  "src": "17259:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17277:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17259:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "17225:53:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 2575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "17294:16:9",
                              "subExpression": {
                                "expression": {
                                  "id": 2573,
                                  "name": "betInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2543,
                                  "src": "17295:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                                    "typeString": "struct LucroPrediction.BetInfo memory"
                                  }
                                },
                                "id": 2574,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "claimed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1298,
                                "src": "17295:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "17225:85:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2587,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        },
                                        "id": 2581,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2577,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2552,
                                            "src": "17328:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                              "typeString": "struct LucroPrediction.Round memory"
                                            }
                                          },
                                          "id": 2578,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "closePrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1274,
                                          "src": "17328:16:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2579,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2552,
                                            "src": "17347:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                              "typeString": "struct LucroPrediction.Round memory"
                                            }
                                          },
                                          "id": 2580,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lockPrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1272,
                                          "src": "17347:15:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "src": "17328:34:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Position_$1262",
                                          "typeString": "enum LucroPrediction.Position"
                                        },
                                        "id": 2586,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2582,
                                            "name": "betInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2543,
                                            "src": "17382:7:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                                              "typeString": "struct LucroPrediction.BetInfo memory"
                                            }
                                          },
                                          "id": 2583,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "position",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1294,
                                          "src": "17382:16:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Position_$1262",
                                            "typeString": "enum LucroPrediction.Position"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2584,
                                            "name": "Position",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1262,
                                            "src": "17402:8:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Position_$1262_$",
                                              "typeString": "type(enum LucroPrediction.Position)"
                                            }
                                          },
                                          "id": 2585,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "Bull",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1260,
                                          "src": "17402:13:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Position_$1262",
                                            "typeString": "enum LucroPrediction.Position"
                                          }
                                        },
                                        "src": "17382:33:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "17328:87:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 2588,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "17327:89:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2599,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        },
                                        "id": 2593,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2589,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2552,
                                            "src": "17437:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                              "typeString": "struct LucroPrediction.Round memory"
                                            }
                                          },
                                          "id": 2590,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "closePrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1274,
                                          "src": "17437:16:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2591,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2552,
                                            "src": "17456:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                              "typeString": "struct LucroPrediction.Round memory"
                                            }
                                          },
                                          "id": 2592,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lockPrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1272,
                                          "src": "17456:15:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "src": "17437:34:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Position_$1262",
                                          "typeString": "enum LucroPrediction.Position"
                                        },
                                        "id": 2598,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2594,
                                            "name": "betInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2543,
                                            "src": "17495:7:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                                              "typeString": "struct LucroPrediction.BetInfo memory"
                                            }
                                          },
                                          "id": 2595,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "position",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1294,
                                          "src": "17495:16:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Position_$1262",
                                            "typeString": "enum LucroPrediction.Position"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2596,
                                            "name": "Position",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1262,
                                            "src": "17515:8:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Position_$1262_$",
                                              "typeString": "type(enum LucroPrediction.Position)"
                                            }
                                          },
                                          "id": 2597,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "Bear",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1261,
                                          "src": "17515:13:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Position_$1262",
                                            "typeString": "enum LucroPrediction.Position"
                                          }
                                        },
                                        "src": "17495:33:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "17437:91:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 2600,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "17436:93:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "17327:202:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2602,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "17326:204:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "17225:305:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2540,
                        "id": 2604,
                        "nodeType": "Return",
                        "src": "17206:324:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2532,
                    "nodeType": "StructuredDocumentation",
                    "src": "16786:145:9",
                    "text": " @notice Get the claimable stats of specific epoch and user account\n @param epoch: epoch\n @param user: user address"
                  },
                  "functionSelector": "a0c7f71c",
                  "id": 2606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimable",
                  "nameLocation": "16945:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2534,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "16963:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "16955:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2533,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16955:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2536,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "16978:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "16970:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16970:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16954:29:9"
                  },
                  "returnParameters": {
                    "id": 2540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2539,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "17005:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2538,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17005:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17004:6:9"
                  },
                  "scope": 3149,
                  "src": "16936:601:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2653,
                    "nodeType": "Block",
                    "src": "17792:290:9",
                    "statements": [
                      {
                        "assignments": [
                          2618
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2618,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nameLocation": "17817:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2653,
                            "src": "17802:22:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                              "typeString": "struct LucroPrediction.BetInfo"
                            },
                            "typeName": {
                              "id": 2617,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2616,
                                "name": "BetInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1299,
                                "src": "17802:7:9"
                              },
                              "referencedDeclaration": 1299,
                              "src": "17802:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$1299_storage_ptr",
                                "typeString": "struct LucroPrediction.BetInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2624,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2619,
                              "name": "ledger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "17827:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct LucroPrediction.BetInfo storage ref))"
                              }
                            },
                            "id": 2621,
                            "indexExpression": {
                              "id": 2620,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2609,
                              "src": "17834:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17827:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$1299_storage_$",
                              "typeString": "mapping(address => struct LucroPrediction.BetInfo storage ref)"
                            }
                          },
                          "id": 2623,
                          "indexExpression": {
                            "id": 2622,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "17841:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17827:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BetInfo_$1299_storage",
                            "typeString": "struct LucroPrediction.BetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17802:44:9"
                      },
                      {
                        "assignments": [
                          2627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2627,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "17869:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2653,
                            "src": "17856:18:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                              "typeString": "struct LucroPrediction.Round"
                            },
                            "typeName": {
                              "id": 2626,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2625,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1291,
                                "src": "17856:5:9"
                              },
                              "referencedDeclaration": 1291,
                              "src": "17856:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2631,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2628,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "17877:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                              "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                            }
                          },
                          "id": 2630,
                          "indexExpression": {
                            "id": 2629,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2609,
                            "src": "17884:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17877:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$1291_storage",
                            "typeString": "struct LucroPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17856:34:9"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17919:19:9",
                                "subExpression": {
                                  "expression": {
                                    "id": 2632,
                                    "name": "round",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2627,
                                    "src": "17920:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                      "typeString": "struct LucroPrediction.Round memory"
                                    }
                                  },
                                  "id": 2633,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "oracleCalled",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1290,
                                  "src": "17920:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 2637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17954:16:9",
                                "subExpression": {
                                  "expression": {
                                    "id": 2635,
                                    "name": "betInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2618,
                                    "src": "17955:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                                      "typeString": "struct LucroPrediction.BetInfo memory"
                                    }
                                  },
                                  "id": 2636,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "claimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1298,
                                  "src": "17955:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "17919:51:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2639,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "17986:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "17986:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2641,
                                    "name": "round",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2627,
                                    "src": "18004:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_memory_ptr",
                                      "typeString": "struct LucroPrediction.Round memory"
                                    }
                                  },
                                  "id": 2642,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "closeTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1270,
                                  "src": "18004:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2643,
                                  "name": "bufferSeconds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1225,
                                  "src": "18027:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18004:36:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17986:54:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "17919:121:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2647,
                                "name": "betInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2618,
                                "src": "18056:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BetInfo_$1299_memory_ptr",
                                  "typeString": "struct LucroPrediction.BetInfo memory"
                                }
                              },
                              "id": 2648,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1296,
                              "src": "18056:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18074:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "18056:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "17919:156:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2615,
                        "id": 2652,
                        "nodeType": "Return",
                        "src": "17900:175:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2607,
                    "nodeType": "StructuredDocumentation",
                    "src": "17543:146:9",
                    "text": " @notice Get the refundable stats of specific epoch and user account\n @param epoch: epoch\n @param user: user address"
                  },
                  "functionSelector": "7bf41254",
                  "id": 2654,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "refundable",
                  "nameLocation": "17703:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2609,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "17731:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2654,
                        "src": "17723:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17723:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2611,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "17754:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2654,
                        "src": "17746:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17746:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17713:51:9"
                  },
                  "returnParameters": {
                    "id": 2615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2614,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2654,
                        "src": "17786:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2613,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17786:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17785:6:9"
                  },
                  "scope": 3149,
                  "src": "17694:388:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2788,
                    "nodeType": "Block",
                    "src": "18225:1314:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2661,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1254,
                                      "src": "18256:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                        "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2663,
                                    "indexExpression": {
                                      "id": 2662,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2657,
                                      "src": "18263:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18256:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_storage",
                                      "typeString": "struct LucroPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2664,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardBaseCalAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1286,
                                  "src": "18256:33:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2665,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18293:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "18256:38:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2667,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1254,
                                      "src": "18314:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                        "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2669,
                                    "indexExpression": {
                                      "id": 2668,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2657,
                                      "src": "18321:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18314:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_storage",
                                      "typeString": "struct LucroPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2670,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1288,
                                  "src": "18314:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2671,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18344:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "18314:31:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "18256:89:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526577617264732063616c63756c61746564",
                              "id": 2674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18359:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d7676630e3121bb49b4e3f5dacd5e86304058e320b99ad1413edecdac7e31f1",
                                "typeString": "literal_string \"Rewards calculated\""
                              },
                              "value": "Rewards calculated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5d7676630e3121bb49b4e3f5dacd5e86304058e320b99ad1413edecdac7e31f1",
                                "typeString": "literal_string \"Rewards calculated\""
                              }
                            ],
                            "id": 2660,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18235:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18235:154:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2676,
                        "nodeType": "ExpressionStatement",
                        "src": "18235:154:9"
                      },
                      {
                        "assignments": [
                          2679
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2679,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "18413:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2788,
                            "src": "18399:19:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                              "typeString": "struct LucroPrediction.Round"
                            },
                            "typeName": {
                              "id": 2678,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2677,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1291,
                                "src": "18399:5:9"
                              },
                              "referencedDeclaration": 1291,
                              "src": "18399:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2683,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2680,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "18421:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                              "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                            }
                          },
                          "id": 2682,
                          "indexExpression": {
                            "id": 2681,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2657,
                            "src": "18428:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18421:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$1291_storage",
                            "typeString": "struct LucroPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18399:35:9"
                      },
                      {
                        "assignments": [
                          2685
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2685,
                            "mutability": "mutable",
                            "name": "rewardBaseCalAmount",
                            "nameLocation": "18452:19:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2788,
                            "src": "18444:27:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2684,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18444:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2686,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18444:27:9"
                      },
                      {
                        "assignments": [
                          2688
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2688,
                            "mutability": "mutable",
                            "name": "treasuryAmt",
                            "nameLocation": "18489:11:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2788,
                            "src": "18481:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2687,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18481:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2689,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18481:19:9"
                      },
                      {
                        "assignments": [
                          2691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2691,
                            "mutability": "mutable",
                            "name": "rewardAmount",
                            "nameLocation": "18518:12:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2788,
                            "src": "18510:20:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2690,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18510:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2692,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18510:20:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2693,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2679,
                              "src": "18566:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2694,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closePrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1274,
                            "src": "18566:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 2695,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2679,
                              "src": "18585:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2696,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1272,
                            "src": "18585:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "18566:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2721,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2679,
                                "src": "18833:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                  "typeString": "struct LucroPrediction.Round storage pointer"
                                }
                              },
                              "id": 2722,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "closePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1274,
                              "src": "18833:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 2723,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2679,
                                "src": "18852:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                  "typeString": "struct LucroPrediction.Round storage pointer"
                                }
                              },
                              "id": 2724,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lockPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1272,
                              "src": "18852:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "18833:34:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 2762,
                            "nodeType": "Block",
                            "src": "19097:123:9",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2749,
                                    "name": "rewardBaseCalAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2685,
                                    "src": "19111:19:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 2750,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19133:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "19111:23:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2752,
                                "nodeType": "ExpressionStatement",
                                "src": "19111:23:9"
                              },
                              {
                                "expression": {
                                  "id": 2755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2753,
                                    "name": "rewardAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2691,
                                    "src": "19148:12:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 2754,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19163:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "19148:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2756,
                                "nodeType": "ExpressionStatement",
                                "src": "19148:16:9"
                              },
                              {
                                "expression": {
                                  "id": 2760,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2757,
                                    "name": "treasuryAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2688,
                                    "src": "19178:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 2758,
                                      "name": "round",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2679,
                                      "src": "19192:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                        "typeString": "struct LucroPrediction.Round storage pointer"
                                      }
                                    },
                                    "id": 2759,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1280,
                                    "src": "19192:17:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "19178:31:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2761,
                                "nodeType": "ExpressionStatement",
                                "src": "19178:31:9"
                              }
                            ]
                          },
                          "id": 2763,
                          "nodeType": "IfStatement",
                          "src": "18829:391:9",
                          "trueBody": {
                            "id": 2748,
                            "nodeType": "Block",
                            "src": "18869:192:9",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2726,
                                    "name": "rewardBaseCalAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2685,
                                    "src": "18883:19:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 2727,
                                      "name": "round",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2679,
                                      "src": "18905:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                        "typeString": "struct LucroPrediction.Round storage pointer"
                                      }
                                    },
                                    "id": 2728,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "bearAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1284,
                                    "src": "18905:16:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18883:38:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2730,
                                "nodeType": "ExpressionStatement",
                                "src": "18883:38:9"
                              },
                              {
                                "expression": {
                                  "id": 2739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2731,
                                    "name": "treasuryAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2688,
                                    "src": "18935:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2735,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 2732,
                                              "name": "round",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2679,
                                              "src": "18950:5:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                                "typeString": "struct LucroPrediction.Round storage pointer"
                                              }
                                            },
                                            "id": 2733,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "totalAmount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1280,
                                            "src": "18950:17:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 2734,
                                            "name": "treasuryFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1231,
                                            "src": "18970:11:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "18950:31:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 2736,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "18949:33:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "3130303030",
                                      "id": 2737,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18985:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000_by_1",
                                        "typeString": "int_const 10000"
                                      },
                                      "value": "10000"
                                    },
                                    "src": "18949:41:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18935:55:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2740,
                                "nodeType": "ExpressionStatement",
                                "src": "18935:55:9"
                              },
                              {
                                "expression": {
                                  "id": 2746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2741,
                                    "name": "rewardAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2691,
                                    "src": "19004:12:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2742,
                                        "name": "round",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2679,
                                        "src": "19019:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                          "typeString": "struct LucroPrediction.Round storage pointer"
                                        }
                                      },
                                      "id": 2743,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "totalAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1280,
                                      "src": "19019:17:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 2744,
                                      "name": "treasuryAmt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2688,
                                      "src": "19039:11:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "19019:31:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "19004:46:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2747,
                                "nodeType": "ExpressionStatement",
                                "src": "19004:46:9"
                              }
                            ]
                          }
                        },
                        "id": 2764,
                        "nodeType": "IfStatement",
                        "src": "18562:658:9",
                        "trueBody": {
                          "id": 2720,
                          "nodeType": "Block",
                          "src": "18602:192:9",
                          "statements": [
                            {
                              "expression": {
                                "id": 2701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2698,
                                  "name": "rewardBaseCalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2685,
                                  "src": "18616:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2699,
                                    "name": "round",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2679,
                                    "src": "18638:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                      "typeString": "struct LucroPrediction.Round storage pointer"
                                    }
                                  },
                                  "id": 2700,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "bullAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1282,
                                  "src": "18638:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18616:38:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2702,
                              "nodeType": "ExpressionStatement",
                              "src": "18616:38:9"
                            },
                            {
                              "expression": {
                                "id": 2711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2703,
                                  "name": "treasuryAmt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2688,
                                  "src": "18668:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2707,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2704,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2679,
                                            "src": "18683:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                              "typeString": "struct LucroPrediction.Round storage pointer"
                                            }
                                          },
                                          "id": 2705,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "totalAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1280,
                                          "src": "18683:17:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 2706,
                                          "name": "treasuryFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1231,
                                          "src": "18703:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18683:31:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2708,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18682:33:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 2709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18718:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "18682:41:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18668:55:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2712,
                              "nodeType": "ExpressionStatement",
                              "src": "18668:55:9"
                            },
                            {
                              "expression": {
                                "id": 2718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2713,
                                  "name": "rewardAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2691,
                                  "src": "18737:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2714,
                                      "name": "round",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2679,
                                      "src": "18752:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                        "typeString": "struct LucroPrediction.Round storage pointer"
                                      }
                                    },
                                    "id": 2715,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1280,
                                    "src": "18752:17:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2716,
                                    "name": "treasuryAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2688,
                                    "src": "18772:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18752:31:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18737:46:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2719,
                              "nodeType": "ExpressionStatement",
                              "src": "18737:46:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2765,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2679,
                              "src": "19229:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2767,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardBaseCalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1286,
                            "src": "19229:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2768,
                            "name": "rewardBaseCalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "19257:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19229:47:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2770,
                        "nodeType": "ExpressionStatement",
                        "src": "19229:47:9"
                      },
                      {
                        "expression": {
                          "id": 2775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2771,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2679,
                              "src": "19286:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2773,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1288,
                            "src": "19286:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2774,
                            "name": "rewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2691,
                            "src": "19307:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19286:33:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2776,
                        "nodeType": "ExpressionStatement",
                        "src": "19286:33:9"
                      },
                      {
                        "expression": {
                          "id": 2779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2777,
                            "name": "treasuryAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "19357:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2778,
                            "name": "treasuryAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2688,
                            "src": "19375:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19357:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2780,
                        "nodeType": "ExpressionStatement",
                        "src": "19357:29:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2782,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2657,
                              "src": "19433:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2783,
                              "name": "rewardBaseCalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2685,
                              "src": "19452:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2784,
                              "name": "rewardAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2691,
                              "src": "19485:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2785,
                              "name": "treasuryAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2688,
                              "src": "19511:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2781,
                            "name": "RewardsCalculated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1387,
                            "src": "19402:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19402:130:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2787,
                        "nodeType": "EmitStatement",
                        "src": "19397:135:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2655,
                    "nodeType": "StructuredDocumentation",
                    "src": "18088:81:9",
                    "text": " @notice Calculate rewards for round\n @param epoch: epoch"
                  },
                  "id": 2789,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_calculateRewards",
                  "nameLocation": "18183:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2657,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "18209:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2789,
                        "src": "18201:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18201:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18200:15:9"
                  },
                  "returnParameters": {
                    "id": 2659,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18225:0:9"
                  },
                  "scope": 3149,
                  "src": "18174:1365:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2865,
                    "nodeType": "Block",
                    "src": "19792:650:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2800,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "19823:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                      "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2802,
                                  "indexExpression": {
                                    "id": 2801,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2792,
                                    "src": "19830:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19823:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_storage",
                                    "typeString": "struct LucroPrediction.Round storage ref"
                                  }
                                },
                                "id": 2803,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1268,
                                "src": "19823:27:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19854:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "19823:32:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920656e6420726f756e6420616674657220726f756e6420686173206c6f636b6564",
                              "id": 2806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19869:43:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a41dd959f6b8d59908b2f9cf13a8d0d10d9949d4d11b448e785beca06fef42a1",
                                "typeString": "literal_string \"Can only end round after round has locked\""
                              },
                              "value": "Can only end round after round has locked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a41dd959f6b8d59908b2f9cf13a8d0d10d9949d4d11b448e785beca06fef42a1",
                                "typeString": "literal_string \"Can only end round after round has locked\""
                              }
                            ],
                            "id": 2799,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19802:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19802:120:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2808,
                        "nodeType": "ExpressionStatement",
                        "src": "19802:120:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2810,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "19953:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "19953:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2812,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "19972:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                      "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2814,
                                  "indexExpression": {
                                    "id": 2813,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2792,
                                    "src": "19979:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19972:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_storage",
                                    "typeString": "struct LucroPrediction.Round storage ref"
                                  }
                                },
                                "id": 2815,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "closeTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1270,
                                "src": "19972:28:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19953:47:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920656e6420726f756e6420616674657220636c6f736554696d657374616d70",
                              "id": 2817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20014:41:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5aeb1b443dcf74ebb83f5c8c495d0ea37b2ffe70aeaa05c678145c1dbd7a2459",
                                "typeString": "literal_string \"Can only end round after closeTimestamp\""
                              },
                              "value": "Can only end round after closeTimestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5aeb1b443dcf74ebb83f5c8c495d0ea37b2ffe70aeaa05c678145c1dbd7a2459",
                                "typeString": "literal_string \"Can only end round after closeTimestamp\""
                              }
                            ],
                            "id": 2809,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19932:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19932:133:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2819,
                        "nodeType": "ExpressionStatement",
                        "src": "19932:133:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2821,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "20096:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "20096:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2823,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1254,
                                      "src": "20115:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                        "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2825,
                                    "indexExpression": {
                                      "id": 2824,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2792,
                                      "src": "20122:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "20115:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_storage",
                                      "typeString": "struct LucroPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2826,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "closeTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1270,
                                  "src": "20115:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2827,
                                  "name": "bufferSeconds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1225,
                                  "src": "20146:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20115:44:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20096:63:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920656e6420726f756e642077697468696e206275666665725365636f6e6473",
                              "id": 2830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20173:41:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_305b29a5e5f4ae7fa6be0480743fbd9163344a67bcc8501056392462fe190019",
                                "typeString": "literal_string \"Can only end round within bufferSeconds\""
                              },
                              "value": "Can only end round within bufferSeconds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_305b29a5e5f4ae7fa6be0480743fbd9163344a67bcc8501056392462fe190019",
                                "typeString": "literal_string \"Can only end round within bufferSeconds\""
                              }
                            ],
                            "id": 2820,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20075:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20075:149:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2832,
                        "nodeType": "ExpressionStatement",
                        "src": "20075:149:9"
                      },
                      {
                        "assignments": [
                          2835
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2835,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "20248:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2865,
                            "src": "20234:19:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                              "typeString": "struct LucroPrediction.Round"
                            },
                            "typeName": {
                              "id": 2834,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2833,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1291,
                                "src": "20234:5:9"
                              },
                              "referencedDeclaration": 1291,
                              "src": "20234:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2839,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2836,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "20256:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                              "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                            }
                          },
                          "id": 2838,
                          "indexExpression": {
                            "id": 2837,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2792,
                            "src": "20263:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20256:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$1291_storage",
                            "typeString": "struct LucroPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20234:35:9"
                      },
                      {
                        "expression": {
                          "id": 2844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2840,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2835,
                              "src": "20279:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2842,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closePrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1274,
                            "src": "20279:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2843,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "20298:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "20279:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2845,
                        "nodeType": "ExpressionStatement",
                        "src": "20279:24:9"
                      },
                      {
                        "expression": {
                          "id": 2850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2846,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2835,
                              "src": "20313:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2848,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closeOracleId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1278,
                            "src": "20313:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2849,
                            "name": "roundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2794,
                            "src": "20335:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20313:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2851,
                        "nodeType": "ExpressionStatement",
                        "src": "20313:29:9"
                      },
                      {
                        "expression": {
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2852,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2835,
                              "src": "20352:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2854,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "oracleCalled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1290,
                            "src": "20352:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20373:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "20352:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2857,
                        "nodeType": "ExpressionStatement",
                        "src": "20352:25:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2859,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2792,
                              "src": "20402:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2860,
                              "name": "roundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2794,
                              "src": "20409:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2861,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2835,
                                "src": "20418:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                  "typeString": "struct LucroPrediction.Round storage pointer"
                                }
                              },
                              "id": 2862,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "closePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1274,
                              "src": "20418:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 2858,
                            "name": "EndRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1331,
                            "src": "20393:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 2863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20393:42:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2864,
                        "nodeType": "EmitStatement",
                        "src": "20388:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2790,
                    "nodeType": "StructuredDocumentation",
                    "src": "19545:134:9",
                    "text": " @notice End round\n @param epoch: epoch\n @param roundId: roundId\n @param price: price of the round"
                  },
                  "id": 2866,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeEndRound",
                  "nameLocation": "19693:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2792,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "19724:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2866,
                        "src": "19716:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2791,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19716:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2794,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "19747:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2866,
                        "src": "19739:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2793,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19739:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2796,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "19771:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2866,
                        "src": "19764:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2795,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19764:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19706:76:9"
                  },
                  "returnParameters": {
                    "id": 2798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19792:0:9"
                  },
                  "scope": 3149,
                  "src": "19684:758:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2945,
                    "nodeType": "Block",
                    "src": "20697:681:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2877,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "20728:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                      "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2879,
                                  "indexExpression": {
                                    "id": 2878,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2869,
                                    "src": "20735:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "20728:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_storage",
                                    "typeString": "struct LucroPrediction.Round storage ref"
                                  }
                                },
                                "id": 2880,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1266,
                                "src": "20728:28:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20760:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "20728:33:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c79206c6f636b20726f756e6420616674657220726f756e64206861732073746172746564",
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20775:45:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_16f79d9e996c484c6ab868c786817e96a6590ee714435b79b344480dba01cfa6",
                                "typeString": "literal_string \"Can only lock round after round has started\""
                              },
                              "value": "Can only lock round after round has started"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_16f79d9e996c484c6ab868c786817e96a6590ee714435b79b344480dba01cfa6",
                                "typeString": "literal_string \"Can only lock round after round has started\""
                              }
                            ],
                            "id": 2876,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20707:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20707:123:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2885,
                        "nodeType": "ExpressionStatement",
                        "src": "20707:123:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2887,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "20861:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "20861:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2889,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "20880:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                      "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2891,
                                  "indexExpression": {
                                    "id": 2890,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2869,
                                    "src": "20887:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "20880:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_storage",
                                    "typeString": "struct LucroPrediction.Round storage ref"
                                  }
                                },
                                "id": 2892,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1268,
                                "src": "20880:27:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20861:46:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c79206c6f636b20726f756e64206166746572206c6f636b54696d657374616d70",
                              "id": 2894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20921:41:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4615b616084e6afd7e2bfca1c1e6bf78f2c06f5fdc371de5a933a8c06c2f3c13",
                                "typeString": "literal_string \"Can only lock round after lockTimestamp\""
                              },
                              "value": "Can only lock round after lockTimestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4615b616084e6afd7e2bfca1c1e6bf78f2c06f5fdc371de5a933a8c06c2f3c13",
                                "typeString": "literal_string \"Can only lock round after lockTimestamp\""
                              }
                            ],
                            "id": 2886,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20840:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20840:132:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2896,
                        "nodeType": "ExpressionStatement",
                        "src": "20840:132:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2898,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "21003:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "21003:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2900,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1254,
                                      "src": "21022:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                        "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2902,
                                    "indexExpression": {
                                      "id": 2901,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2869,
                                      "src": "21029:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "21022:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_storage",
                                      "typeString": "struct LucroPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2903,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lockTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1268,
                                  "src": "21022:27:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2904,
                                  "name": "bufferSeconds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1225,
                                  "src": "21052:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21022:43:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21003:62:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c79206c6f636b20726f756e642077697468696e206275666665725365636f6e6473",
                              "id": 2907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21079:42:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_65d9ebfb7b417d357c54ae150ee53f546dcdaa39c58b14378727fa7829cd41f8",
                                "typeString": "literal_string \"Can only lock round within bufferSeconds\""
                              },
                              "value": "Can only lock round within bufferSeconds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_65d9ebfb7b417d357c54ae150ee53f546dcdaa39c58b14378727fa7829cd41f8",
                                "typeString": "literal_string \"Can only lock round within bufferSeconds\""
                              }
                            ],
                            "id": 2897,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20982:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20982:149:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2909,
                        "nodeType": "ExpressionStatement",
                        "src": "20982:149:9"
                      },
                      {
                        "assignments": [
                          2912
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2912,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "21155:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 2945,
                            "src": "21141:19:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                              "typeString": "struct LucroPrediction.Round"
                            },
                            "typeName": {
                              "id": 2911,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2910,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1291,
                                "src": "21141:5:9"
                              },
                              "referencedDeclaration": 1291,
                              "src": "21141:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2916,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2913,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "21163:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                              "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                            }
                          },
                          "id": 2915,
                          "indexExpression": {
                            "id": 2914,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2869,
                            "src": "21170:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21163:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$1291_storage",
                            "typeString": "struct LucroPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21141:35:9"
                      },
                      {
                        "expression": {
                          "id": 2924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2917,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2912,
                              "src": "21186:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closeTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1270,
                            "src": "21186:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2920,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "21209:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "21209:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 2922,
                              "name": "intervalSeconds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1227,
                              "src": "21227:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21209:33:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21186:56:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2925,
                        "nodeType": "ExpressionStatement",
                        "src": "21186:56:9"
                      },
                      {
                        "expression": {
                          "id": 2930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2926,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2912,
                              "src": "21252:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2928,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1272,
                            "src": "21252:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2929,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2873,
                            "src": "21270:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "21252:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2931,
                        "nodeType": "ExpressionStatement",
                        "src": "21252:23:9"
                      },
                      {
                        "expression": {
                          "id": 2936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2932,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2912,
                              "src": "21285:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 2934,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockOracleId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1276,
                            "src": "21285:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2935,
                            "name": "roundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2871,
                            "src": "21306:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21285:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2937,
                        "nodeType": "ExpressionStatement",
                        "src": "21285:28:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2939,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2869,
                              "src": "21339:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2940,
                              "name": "roundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2871,
                              "src": "21346:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2941,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2912,
                                "src": "21355:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                  "typeString": "struct LucroPrediction.Round storage pointer"
                                }
                              },
                              "id": 2942,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lockPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1272,
                              "src": "21355:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 2938,
                            "name": "LockRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1339,
                            "src": "21329:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 2943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21329:42:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2944,
                        "nodeType": "EmitStatement",
                        "src": "21324:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2867,
                    "nodeType": "StructuredDocumentation",
                    "src": "20448:135:9",
                    "text": " @notice Lock round\n @param epoch: epoch\n @param roundId: roundId\n @param price: price of the round"
                  },
                  "id": 2946,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeLockRound",
                  "nameLocation": "20597:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2874,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2869,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "20629:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2946,
                        "src": "20621:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2868,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20621:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2871,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "20652:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2946,
                        "src": "20644:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20644:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2873,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "20676:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2946,
                        "src": "20669:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2872,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20669:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20611:76:9"
                  },
                  "returnParameters": {
                    "id": 2875,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20697:0:9"
                  },
                  "scope": 3149,
                  "src": "20588:790:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2986,
                    "nodeType": "Block",
                    "src": "21538:460:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2953,
                              "name": "genesisStartOnce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1219,
                              "src": "21569:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e6420697320747269676765726564",
                              "id": 2954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21599:51:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab",
                                "typeString": "literal_string \"Can only run after genesisStartRound is triggered\""
                              },
                              "value": "Can only run after genesisStartRound is triggered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab",
                                "typeString": "literal_string \"Can only run after genesisStartRound is triggered\""
                              }
                            ],
                            "id": 2952,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21548:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21548:112:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2956,
                        "nodeType": "ExpressionStatement",
                        "src": "21548:112:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2958,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "21691:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                      "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2962,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2961,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2959,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2949,
                                      "src": "21698:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "32",
                                      "id": 2960,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21706:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "21698:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21691:17:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_storage",
                                    "typeString": "struct LucroPrediction.Round storage ref"
                                  }
                                },
                                "id": 2963,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "closeTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1270,
                                "src": "21691:32:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21727:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "21691:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920737461727420726f756e6420616674657220726f756e64206e2d322068617320656e646564",
                              "id": 2966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21742:48:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25e36640e6894539ca9141c17c2fb43b389e358f68c3c034f58f90400971fe8d",
                                "typeString": "literal_string \"Can only start round after round n-2 has ended\""
                              },
                              "value": "Can only start round after round n-2 has ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25e36640e6894539ca9141c17c2fb43b389e358f68c3c034f58f90400971fe8d",
                                "typeString": "literal_string \"Can only start round after round n-2 has ended\""
                              }
                            ],
                            "id": 2957,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21670:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21670:130:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2968,
                        "nodeType": "ExpressionStatement",
                        "src": "21670:130:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2970,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "21831:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "21831:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2972,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "21850:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                      "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2976,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2975,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2973,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2949,
                                      "src": "21857:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "32",
                                      "id": 2974,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21865:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "21857:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21850:17:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_storage",
                                    "typeString": "struct LucroPrediction.Round storage ref"
                                  }
                                },
                                "id": 2977,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "closeTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1270,
                                "src": "21850:32:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21831:51:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c79207374617274206e657720726f756e6420616674657220726f756e64206e2d3220636c6f736554696d657374616d70",
                              "id": 2979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21896:57:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_48314e39a2428c78f4a19c0e2084c27c66b28314dadb8ba08949064279800d81",
                                "typeString": "literal_string \"Can only start new round after round n-2 closeTimestamp\""
                              },
                              "value": "Can only start new round after round n-2 closeTimestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_48314e39a2428c78f4a19c0e2084c27c66b28314dadb8ba08949064279800d81",
                                "typeString": "literal_string \"Can only start new round after round n-2 closeTimestamp\""
                              }
                            ],
                            "id": 2969,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21810:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21810:153:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2981,
                        "nodeType": "ExpressionStatement",
                        "src": "21810:153:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2983,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2949,
                              "src": "21985:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2982,
                            "name": "_startRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3045,
                            "src": "21973:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21973:18:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2985,
                        "nodeType": "ExpressionStatement",
                        "src": "21973:18:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2947,
                    "nodeType": "StructuredDocumentation",
                    "src": "21384:100:9",
                    "text": " @notice Start round\n Previous round n-2 must end\n @param epoch: epoch"
                  },
                  "id": 2987,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeStartRound",
                  "nameLocation": "21498:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2950,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2949,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "21522:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2987,
                        "src": "21514:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2948,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21514:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21513:15:9"
                  },
                  "returnParameters": {
                    "id": 2951,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21538:0:9"
                  },
                  "scope": 3149,
                  "src": "21489:509:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3044,
                    "nodeType": "Block",
                    "src": "22154:330:9",
                    "statements": [
                      {
                        "assignments": [
                          2995
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2995,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "22178:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 3044,
                            "src": "22164:19:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                              "typeString": "struct LucroPrediction.Round"
                            },
                            "typeName": {
                              "id": 2994,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2993,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1291,
                                "src": "22164:5:9"
                              },
                              "referencedDeclaration": 1291,
                              "src": "22164:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2999,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2996,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "22186:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                              "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                            }
                          },
                          "id": 2998,
                          "indexExpression": {
                            "id": 2997,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "22193:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22186:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$1291_storage",
                            "typeString": "struct LucroPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22164:35:9"
                      },
                      {
                        "expression": {
                          "id": 3005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3000,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "22209:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 3002,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "startTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1266,
                            "src": "22209:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3003,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "22232:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "22232:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22209:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3006,
                        "nodeType": "ExpressionStatement",
                        "src": "22209:38:9"
                      },
                      {
                        "expression": {
                          "id": 3014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3007,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "22257:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 3009,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1268,
                            "src": "22257:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3010,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22279:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "22279:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3012,
                              "name": "intervalSeconds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1227,
                              "src": "22297:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22279:33:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22257:55:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3015,
                        "nodeType": "ExpressionStatement",
                        "src": "22257:55:9"
                      },
                      {
                        "expression": {
                          "id": 3026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3016,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "22322:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 3018,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closeTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1270,
                            "src": "22322:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3019,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22345:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "22345:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3023,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 3021,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22364:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 3022,
                                    "name": "intervalSeconds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1227,
                                    "src": "22368:15:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "22364:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3024,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "22363:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22345:39:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22322:62:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3027,
                        "nodeType": "ExpressionStatement",
                        "src": "22322:62:9"
                      },
                      {
                        "expression": {
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3028,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "22394:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 3030,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "epoch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1264,
                            "src": "22394:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3031,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "22408:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22394:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3033,
                        "nodeType": "ExpressionStatement",
                        "src": "22394:19:9"
                      },
                      {
                        "expression": {
                          "id": 3038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3034,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "22423:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1291_storage_ptr",
                                "typeString": "struct LucroPrediction.Round storage pointer"
                              }
                            },
                            "id": 3036,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1280,
                            "src": "22423:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22443:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22423:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3039,
                        "nodeType": "ExpressionStatement",
                        "src": "22423:21:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3041,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2990,
                              "src": "22471:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3040,
                            "name": "StartRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "22460:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22460:17:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3043,
                        "nodeType": "EmitStatement",
                        "src": "22455:22:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2988,
                    "nodeType": "StructuredDocumentation",
                    "src": "22004:100:9",
                    "text": " @notice Start round\n Previous round n-2 must end\n @param epoch: epoch"
                  },
                  "id": 3045,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_startRound",
                  "nameLocation": "22118:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2990,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "22138:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 3045,
                        "src": "22130:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2989,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22130:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22129:15:9"
                  },
                  "returnParameters": {
                    "id": 2992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22154:0:9"
                  },
                  "scope": 3149,
                  "src": "22109:375:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3083,
                    "nodeType": "Block",
                    "src": "22749:240:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 3073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3053,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1254,
                                      "src": "22778:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                        "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 3055,
                                    "indexExpression": {
                                      "id": 3054,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3048,
                                      "src": "22785:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22778:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_storage",
                                      "typeString": "struct LucroPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 3056,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1266,
                                  "src": "22778:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3057,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22810:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22778:33:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3059,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1254,
                                      "src": "22827:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                        "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 3061,
                                    "indexExpression": {
                                      "id": 3060,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3048,
                                      "src": "22834:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22827:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$1291_storage",
                                      "typeString": "struct LucroPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 3062,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lockTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1268,
                                  "src": "22827:27:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3063,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22858:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22827:32:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "22778:81:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3066,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "22875:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "22875:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3068,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "22893:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                      "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 3070,
                                  "indexExpression": {
                                    "id": 3069,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3048,
                                    "src": "22900:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22893:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$1291_storage",
                                    "typeString": "struct LucroPrediction.Round storage ref"
                                  }
                                },
                                "id": 3071,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1266,
                                "src": "22893:28:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "22875:46:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "22778:143:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3074,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22937:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "22937:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3076,
                                  "name": "rounds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1254,
                                  "src": "22955:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$1291_storage_$",
                                    "typeString": "mapping(uint256 => struct LucroPrediction.Round storage ref)"
                                  }
                                },
                                "id": 3078,
                                "indexExpression": {
                                  "id": 3077,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3048,
                                  "src": "22962:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22955:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$1291_storage",
                                  "typeString": "struct LucroPrediction.Round storage ref"
                                }
                              },
                              "id": 3079,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lockTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1268,
                              "src": "22955:27:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22937:45:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "22778:204:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3052,
                        "id": 3082,
                        "nodeType": "Return",
                        "src": "22759:223:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3046,
                    "nodeType": "StructuredDocumentation",
                    "src": "22490:191:9",
                    "text": " @notice Determine if a round is valid for receiving bets\n Round must have started and locked\n Current timestamp must be within startTimestamp and closeTimestamp"
                  },
                  "id": 3084,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_bettable",
                  "nameLocation": "22695:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3048,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nameLocation": "22713:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 3084,
                        "src": "22705:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22705:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22704:15:9"
                  },
                  "returnParameters": {
                    "id": 3052,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3051,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3084,
                        "src": "22743:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3050,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "22743:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22742:6:9"
                  },
                  "scope": 3149,
                  "src": "22686:303:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3130,
                    "nodeType": "Block",
                    "src": "23215:517:9",
                    "statements": [
                      {
                        "assignments": [
                          3093
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3093,
                            "mutability": "mutable",
                            "name": "leastAllowedTimestamp",
                            "nameLocation": "23233:21:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 3130,
                            "src": "23225:29:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3092,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23225:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3098,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3094,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "23257:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "23257:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3096,
                            "name": "oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1239,
                            "src": "23275:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23257:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23225:71:9"
                      },
                      {
                        "assignments": [
                          3100,
                          3102,
                          null,
                          3104,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3100,
                            "mutability": "mutable",
                            "name": "roundId",
                            "nameLocation": "23314:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 3130,
                            "src": "23307:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 3099,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "23307:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3102,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "23330:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 3130,
                            "src": "23323:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 3101,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23323:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          {
                            "constant": false,
                            "id": 3104,
                            "mutability": "mutable",
                            "name": "timestamp",
                            "nameLocation": "23347:9:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 3130,
                            "src": "23339:17:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3103,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23339:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3108,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3105,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "23362:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 3106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44,
                            "src": "23362:35:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 3107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23362:37:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23306:93:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3110,
                                "name": "timestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3104,
                                "src": "23430:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 3111,
                                "name": "leastAllowedTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3093,
                                "src": "23443:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23430:34:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f7261636c6520757064617465206578636565646564206d61782074696d657374616d7020616c6c6f77616e6365",
                              "id": 3113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23478:48:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f33570aeabdc7840b27baeee2ba18f1f51901a851210e95175d48a2543a633e7",
                                "typeString": "literal_string \"Oracle update exceeded max timestamp allowance\""
                              },
                              "value": "Oracle update exceeded max timestamp allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f33570aeabdc7840b27baeee2ba18f1f51901a851210e95175d48a2543a633e7",
                                "typeString": "literal_string \"Oracle update exceeded max timestamp allowance\""
                              }
                            ],
                            "id": 3109,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23409:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23409:127:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3115,
                        "nodeType": "ExpressionStatement",
                        "src": "23409:127:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 3119,
                                    "name": "roundId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3100,
                                    "src": "23575:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  ],
                                  "id": 3118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23567:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3117,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23567:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23567:16:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 3121,
                                "name": "oracleLatestRoundId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1237,
                                "src": "23586:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23567:38:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f7261636c652075706461746520726f756e644964206d757374206265206c6172676572207468616e206f7261636c654c6174657374526f756e644964",
                              "id": 3123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23619:63:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_26bf7200ac9064fd4cd504d65207afe4b5d3eae2249dd8e9100c923d5898f73e",
                                "typeString": "literal_string \"Oracle update roundId must be larger than oracleLatestRoundId\""
                              },
                              "value": "Oracle update roundId must be larger than oracleLatestRoundId"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_26bf7200ac9064fd4cd504d65207afe4b5d3eae2249dd8e9100c923d5898f73e",
                                "typeString": "literal_string \"Oracle update roundId must be larger than oracleLatestRoundId\""
                              }
                            ],
                            "id": 3116,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23546:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23546:146:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3125,
                        "nodeType": "ExpressionStatement",
                        "src": "23546:146:9"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 3126,
                              "name": "roundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3100,
                              "src": "23710:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 3127,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3102,
                              "src": "23719:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "id": 3128,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "23709:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$",
                            "typeString": "tuple(uint80,int256)"
                          }
                        },
                        "functionReturnParameters": 3091,
                        "id": 3129,
                        "nodeType": "Return",
                        "src": "23702:23:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3085,
                    "nodeType": "StructuredDocumentation",
                    "src": "22995:145:9",
                    "text": " @notice Get latest recorded price from oracle\n If it falls below allowed buffer or has not updated, it would be invalid."
                  },
                  "id": 3131,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getPriceFromOracle",
                  "nameLocation": "23154:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3086,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23173:2:9"
                  },
                  "returnParameters": {
                    "id": 3091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3088,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3131,
                        "src": "23199:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 3087,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "23199:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3090,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3131,
                        "src": "23207:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 3089,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23207:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23198:16:9"
                  },
                  "scope": 3149,
                  "src": "23145:587:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3147,
                    "nodeType": "Block",
                    "src": "23916:124:9",
                    "statements": [
                      {
                        "assignments": [
                          3140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3140,
                            "mutability": "mutable",
                            "name": "size",
                            "nameLocation": "23934:4:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 3147,
                            "src": "23926:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3139,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23926:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3141,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23926:12:9"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "23957:52:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23971:28:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "account",
                                    "nodeType": "YulIdentifier",
                                    "src": "23991:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "23979:11:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23979:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "23971:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 3134,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "23991:7:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 3140,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "23971:4:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 3142,
                        "nodeType": "InlineAssembly",
                        "src": "23948:61:9"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3143,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3140,
                            "src": "24025:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24032:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "24025:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3138,
                        "id": 3146,
                        "nodeType": "Return",
                        "src": "24018:15:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3132,
                    "nodeType": "StructuredDocumentation",
                    "src": "23738:106:9",
                    "text": " @notice Returns true if `account` is a contract.\n @param account: account address"
                  },
                  "id": 3148,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isContract",
                  "nameLocation": "23858:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3134,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "23878:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 3148,
                        "src": "23870:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23870:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23869:17:9"
                  },
                  "returnParameters": {
                    "id": 3138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3137,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3148,
                        "src": "23910:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3136,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "23910:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23909:6:9"
                  },
                  "scope": 3149,
                  "src": "23849:191:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3150,
              "src": "598:23444:9",
              "usedErrors": []
            }
          ],
          "src": "32:24011:9"
        },
        "id": 9
      }
    },
    "contracts": {
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "AggregatorV3Interface": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "description",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_roundId",
                  "type": "uint80"
                }
              ],
              "name": "getRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "description()": "7284e416",
              "getRoundData(uint80)": "9a6fc8f5",
              "latestRoundData()": "feaf968c",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "IERC20Permit": {
          "abi": [
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e55932a4dbe034d342a70c36f72f3b15ac6e63bf233ba1fce24a7af6c18df4ab64736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 MSIZE ORIGIN LOG4 0xDB 0xE0 CALLVALUE 0xD3 TIMESTAMP 0xA7 0xC CALLDATASIZE 0xF7 0x2F EXTCODESIZE ISZERO 0xAC PUSH15 0x63BF233BA1FCE24A7AF6C18DF4AB64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
              "sourceMap": "701:6234:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;701:6234:6;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e55932a4dbe034d342a70c36f72f3b15ac6e63bf233ba1fce24a7af6c18df4ab64736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 MSIZE ORIGIN LOG4 0xDB 0xE0 CALLVALUE 0xD3 TIMESTAMP 0xA7 0xC CALLDATASIZE 0xF7 0x2F EXTCODESIZE ISZERO 0xAC PUSH15 0x63BF233BA1FCE24A7AF6C18DF4AB64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
              "sourceMap": "701:6234:6:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201832bdc6dbe663d3d647dbf58b963fe85fe06e3c56843f01d3e71e6eb61f9d8c64736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR ORIGIN 0xBD 0xC6 0xDB 0xE6 PUSH4 0xD3D647DB CREATE2 DUP12 SWAP7 EXTCODEHASH 0xE8 0x5F 0xE0 PUSH15 0x3C56843F01D3E71E6EB61F9D8C6473 PUSH16 0x6C634300080400330000000000000000 ",
              "sourceMap": "194:9169:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:7;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201832bdc6dbe663d3d647dbf58b963fe85fe06e3c56843f01d3e71e6eb61f9d8c64736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR ORIGIN 0xBD 0xC6 0xDB 0xE6 PUSH4 0xD3D647DB CREATE2 DUP12 SWAP7 EXTCODEHASH 0xE8 0x5F 0xE0 PUSH15 0x3C56843F01D3E71E6EB61F9D8C6473 PUSH16 0x6C634300080400330000000000000000 ",
              "sourceMap": "194:9169:7:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "contracts/LucroPrediction.sol": {
        "LucroPrediction": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_oracleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_adminAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_operatorAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_intervalSeconds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_bufferSeconds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minBetAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_oracleUpdateAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_treasuryFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BetBear",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BetBull",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Claim",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "price",
                  "type": "int256"
                }
              ],
              "name": "EndRound",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "price",
                  "type": "int256"
                }
              ],
              "name": "LockRound",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "NewAdminAddress",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bufferSeconds",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "intervalSeconds",
                  "type": "uint256"
                }
              ],
              "name": "NewBufferAndIntervalSeconds",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "minBetAmount",
                  "type": "uint256"
                }
              ],
              "name": "NewMinBetAmount",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "NewOperatorAddress",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "oracle",
                  "type": "address"
                }
              ],
              "name": "NewOracle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oracleUpdateAllowance",
                  "type": "uint256"
                }
              ],
              "name": "NewOracleUpdateAllowance",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "treasuryFee",
                  "type": "uint256"
                }
              ],
              "name": "NewTreasuryFee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                }
              ],
              "name": "Pause",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardBaseCalAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "treasuryAmount",
                  "type": "uint256"
                }
              ],
              "name": "RewardsCalculated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                }
              ],
              "name": "StartRound",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenRecovery",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TreasuryClaim",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                }
              ],
              "name": "Unpause",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_TREASURY_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "adminAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "betBear",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "betBull",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "bufferSeconds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "epochs",
                  "type": "uint256[]"
                }
              ],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimTreasury",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "claimable",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currentEpoch",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "executeRound",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "genesisLockOnce",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "genesisLockRound",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "genesisStartOnce",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "genesisStartRound",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "cursor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "size",
                  "type": "uint256"
                }
              ],
              "name": "getUserRounds",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum LucroPrediction.Position",
                      "name": "position",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "claimed",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct LucroPrediction.BetInfo[]",
                  "name": "",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getUserRoundsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "intervalSeconds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "ledger",
              "outputs": [
                {
                  "internalType": "enum LucroPrediction.Position",
                  "name": "position",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "claimed",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minBetAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "operatorAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracle",
              "outputs": [
                {
                  "internalType": "contract AggregatorV3Interface",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracleLatestRoundId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracleUpdateAllowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "recoverToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "refundable",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "rounds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lockTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "closeTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "lockPrice",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "closePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "lockOracleId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "closeOracleId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bullAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bearAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardBaseCalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "oracleCalled",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_adminAddress",
                  "type": "address"
                }
              ],
              "name": "setAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_bufferSeconds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_intervalSeconds",
                  "type": "uint256"
                }
              ],
              "name": "setBufferAndIntervalSeconds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_minBetAmount",
                  "type": "uint256"
                }
              ],
              "name": "setMinBetAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_operatorAddress",
                  "type": "address"
                }
              ],
              "name": "setOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_oracle",
                  "type": "address"
                }
              ],
              "name": "setOracle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_oracleUpdateAllowance",
                  "type": "uint256"
                }
              ],
              "name": "setOracleUpdateAllowance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_treasuryFee",
                  "type": "uint256"
                }
              ],
              "name": "setTreasuryFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "userRounds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1490:10",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:10",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "245:757:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "292:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "301:6:10"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "309:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "294:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "294:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "294:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "266:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "275:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "262:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "262:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "287:3:10",
                                    "type": "",
                                    "value": "288"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "258:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "258:33:10"
                              },
                              "nodeType": "YulIf",
                              "src": "255:2:10"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "327:29:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "346:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "340:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "340:16:10"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "331:5:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "390:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "365:24:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "365:31:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "365:31:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "405:15:10",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "415:5:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "405:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "429:40:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "454:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "465:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "450:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "450:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "444:25:10"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "433:7:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "503:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "478:24:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "478:33:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "478:33:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "520:17:10",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "530:7:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "520:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "546:40:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "571:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "582:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "567:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "567:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "561:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "561:25:10"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nodeType": "YulTypedName",
                                  "src": "550:7:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "620:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:24:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "595:33:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "595:33:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "637:17:10",
                              "value": {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "647:7:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "637:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "663:40:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "688:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "699:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "684:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "684:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "678:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "678:25:10"
                              },
                              "variables": [
                                {
                                  "name": "value_3",
                                  "nodeType": "YulTypedName",
                                  "src": "667:7:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "737:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "712:24:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "712:33:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "712:33:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "754:17:10",
                              "value": {
                                "name": "value_3",
                                "nodeType": "YulIdentifier",
                                "src": "764:7:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "754:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "780:36:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "800:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "811:3:10",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "796:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "796:19:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "790:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "790:26:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "780:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "825:36:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "845:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "856:3:10",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "841:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "841:19:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "835:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "835:26:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "825:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "870:36:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "890:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "901:3:10",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "886:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "886:19:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "880:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "880:26:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "870:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "915:36:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "935:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "946:3:10",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "931:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "931:19:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "925:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "925:26:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value7",
                                  "nodeType": "YulIdentifier",
                                  "src": "915:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "960:36:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "980:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "991:3:10",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "976:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "976:19:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "970:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "970:26:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value8",
                                  "nodeType": "YulIdentifier",
                                  "src": "960:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IERC20_$409t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "147:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "158:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "170:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "178:6:10",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "186:6:10",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "194:6:10",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "202:6:10",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "210:6:10",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "218:6:10",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "226:6:10",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "234:6:10",
                            "type": ""
                          }
                        ],
                        "src": "14:988:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1181:171:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1198:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1209:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1191:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1191:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1191:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1232:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1243:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1228:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1228:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1248:2:10",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1221:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1221:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1221:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1271:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1282:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1267:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1267:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1287:23:10",
                                    "type": "",
                                    "value": "Treasury fee too high"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1260:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1260:51:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1260:51:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1320:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1332:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1343:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1328:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1328:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1320:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1158:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1172:4:10",
                            "type": ""
                          }
                        ],
                        "src": "1007:345:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1402:86:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1466:16:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1475:1:10",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1478:1:10",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1468:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1468:12:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1468:12:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1425:5:10"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1436:5:10"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1451:3:10",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1456:1:10",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1447:3:10"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1447:11:10"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1460:1:10",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "1443:3:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1443:19:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1432:3:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1432:31:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1422:2:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1422:42:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1415:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1415:50:10"
                              },
                              "nodeType": "YulIf",
                              "src": "1412:2:10"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1391:5:10",
                            "type": ""
                          }
                        ],
                        "src": "1357:131:10"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$409t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(value4, value4) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n        value7 := mload(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n    }\n    function abi_encode_tuple_t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Treasury fee too high\")\n        tail := add(headStart, 96)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
                  "id": 10,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4E61 CODESIZE SUB DUP1 PUSH3 0x4E61 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x42 SWAP2 PUSH3 0x171 JUMP JUMPDEST PUSH3 0x4D CALLER PUSH3 0x121 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH2 0x3E8 DUP2 GT ISZERO PUSH3 0xB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792066656520746F6F20686967680000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 SWAP9 SWAP1 SWAP9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP8 DUP10 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP7 AND SWAP5 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0x6 SSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE PUSH1 0xC SSTORE PUSH1 0x8 SSTORE PUSH3 0x224 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x190 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x19D DUP2 PUSH3 0x20B JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MLOAD SWAP1 SWAP10 POP PUSH3 0x1B0 DUP2 PUSH3 0x20B JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MLOAD SWAP1 SWAP9 POP PUSH3 0x1C3 DUP2 PUSH3 0x20B JUMP JUMPDEST PUSH1 0x60 DUP12 ADD MLOAD SWAP1 SWAP8 POP PUSH3 0x1D6 DUP2 PUSH3 0x20B JUMP JUMPDEST DUP1 SWAP7 POP POP PUSH1 0x80 DUP11 ADD MLOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD MLOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD MLOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD MLOAD SWAP2 POP PUSH2 0x100 DUP11 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x4BFB PUSH3 0x266 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x73C ADD MSTORE DUP2 DUP2 PUSH2 0x833 ADD MSTORE DUP2 DUP2 PUSH2 0xB87 ADD MSTORE DUP2 DUP2 PUSH2 0xF7F ADD MSTORE DUP2 DUP2 PUSH2 0x1AEB ADD MSTORE PUSH2 0x2D25 ADD MSTORE PUSH2 0x4BFB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D1CD04F GT PUSH2 0x191 JUMPI DUP1 PUSH4 0xCF2F5039 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF2B3C809 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xFA968EEA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xFA968EEA EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF2B3C809 EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xF7FDEC28 EQ PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD1F7596 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xDD1F7596 EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0xEABA2361 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xEC324703 EQ PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF2F5039 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xD9D55EAC EQ PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x145 JUMPI DUP1 PUSH4 0xB29A8140 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0xB29A8140 EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x951FD600 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA0C7F71C EQ PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x890DC766 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x8C65C81F EQ PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D1CD04F EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60554011 GT PUSH2 0x24A JUMPI DUP1 PUSH4 0x7285C58B GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x7ADBF973 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x7B3205F5 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x7BF41254 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7285C58B EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x77E741C7 EQ PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C188593 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x6C188593 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60554011 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x6BA4C138 EQ PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x368ACB09 GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x286 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x452FD75A EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x368ACB09 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x3923E1B4 EQ PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF74174F GT PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xF74174F EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x127EFFB2 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x273867D4 EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x3BDC74 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xE89E5A4 EQ PUSH2 0x2F7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F5 PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x48AE JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x32F SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x364 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x48AE JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x32F JUMP JUMPDEST PUSH2 0x3BF PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x47DB JUMP JUMPDEST PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x486B JUMP JUMPDEST PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x1C4B JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A17 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x486B JUMP JUMPDEST PUSH2 0x1D5C JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x32F PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4883 JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x364 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x2489 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x48AE JUMP JUMPDEST PUSH2 0x256A JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x486B JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD PUSH1 0xB DUP13 ADD SLOAD PUSH1 0xC DUP14 ADD SLOAD PUSH1 0xD SWAP1 SWAP14 ADD SLOAD SWAP12 SWAP13 SWAP11 SWAP12 SWAP10 SWAP11 SWAP9 SWAP10 SWAP8 SWAP9 SWAP7 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP15 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP15 DUP16 MSTORE PUSH1 0x20 DUP16 ADD SWAP14 SWAP1 SWAP14 MSTORE SWAP12 DUP14 ADD SWAP11 SWAP1 SWAP11 MSTORE PUSH1 0x60 DUP13 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x1C0 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x364 JUMP JUMPDEST PUSH2 0x65B PUSH2 0x656 CALLDATASIZE PUSH1 0x4 PUSH2 0x47A9 JUMP JUMPDEST PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x678 CALLDATASIZE PUSH1 0x4 PUSH2 0x4883 JUMP JUMPDEST PUSH2 0x2AAA JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x68B CALLDATASIZE PUSH1 0x4 PUSH2 0x4780 JUMP JUMPDEST PUSH2 0x2D1B JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x69E CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x2E74 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x6BA CALLDATASIZE PUSH1 0x4 PUSH2 0x486B JUMP JUMPDEST PUSH2 0x2FE5 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x30A3 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4780 JUMP JUMPDEST PUSH2 0x331C JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x703 CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x334D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x32F SWAP1 PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x364 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x364 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x786 PUSH2 0x3404 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x85C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xB9197C6B8E21274BD1E2D9C956A88AF5CFEE510F630FAB3F046300F88B422361 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x899 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0x3551 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0x3404 JUMP JUMPDEST CALLER EXTCODESIZE ISZERO PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 EQ PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420697320746F6F206561726C792F6C6174650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x9F1 DUP3 PUSH2 0x35D6 JUMP JUMPDEST PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F756E64206E6F74206265747461626C650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D696E426574416D6F756E740000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xB6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920626574206F6E63652070657220726F756E640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0xBAF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD DUP3 SWAP2 SWAP1 PUSH2 0xBD0 SWAP1 DUP4 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0xBE5 SWAP1 DUP4 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0xA DUP3 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP1 DUP3 ADD DUP9 SWAP1 SSTORE PUSH1 0xF DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP7 MSTORE SWAP5 DUP5 SWAP1 KECCAK256 SWAP1 SWAP5 ADD DUP9 SWAP1 SSTORE SWAP1 MLOAD DUP6 DUP2 MSTORE DUP8 SWAP3 PUSH32 0xD8C1FE3E67AB767116A81F122B83C2557A8C2564019CB7C4F83DE1AEB1F1F0D SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xC8F PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC9B PUSH2 0x3551 JUMP JUMPDEST PUSH2 0xCA3 PUSH2 0x3404 JUMP JUMPDEST CALLER EXTCODESIZE ISZERO PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 EQ PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420697320746F6F206561726C792F6C6174650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0xDE9 DUP3 PUSH2 0x35D6 JUMP JUMPDEST PUSH2 0xE4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F756E64206E6F74206265747461626C650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D696E426574416D6F756E740000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920626574206F6E63652070657220726F756E640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0xFA7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD DUP3 SWAP2 SWAP1 PUSH2 0xFC8 SWAP1 DUP4 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0xFDD SWAP1 DUP4 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP9 SWAP1 SSTORE PUSH1 0xF DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP7 MSTORE SWAP5 DUP5 SWAP1 KECCAK256 SWAP1 SWAP5 ADD DUP9 SWAP1 SSTORE SWAP1 MLOAD DUP6 DUP2 MSTORE DUP8 SWAP3 PUSH32 0x438122D8CFF518D18388099A5181F0D17A12B4F1B55FAEDF6E4A6ACEE0060C12 SWAP2 ADD PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x107C PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x10B9 JUMPI POP PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F722F61646D696E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH2 0x114F PUSH2 0x3729 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0xAAA520FDD7D2C83061D632FA017B0432407E798818AF63EA908589FCEDA39AB7 SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1185 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F720000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2067656E657369735374617274526F756E64206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E63650000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x12C0 SWAP1 PUSH1 0x1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x12CE SWAP1 PUSH2 0x37A6 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH22 0x1000000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x3404 JUMP JUMPDEST CALLER EXTCODESIZE ISZERO PUSH2 0x1381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0x13EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1ACA JUMPI PUSH1 0xE PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x1433 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F756E6420686173206E6F7420737461727465640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x14F3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP GT PUSH2 0x1574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F756E6420686173206E6F7420656E64656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x15B3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1621 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x1614 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH2 0x2AAA JUMP JUMPDEST PUSH2 0x1687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F7220636C61696D00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x16C6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH2 0x160 ADD MLOAD DUP2 PUSH2 0x180 ADD MLOAD PUSH1 0xD PUSH1 0x0 DUP10 DUP10 DUP9 DUP2 DUP2 LT PUSH2 0x17CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x182F SWAP2 SWAP1 PUSH2 0x4ADD JUMP JUMPDEST PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x4AA4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x188A DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x187D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x18F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F7220726566756E64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x192D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x19C5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1A25 DUP2 DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP3 POP DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1A60 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AAF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 PUSH2 0x1AC2 DUP2 PUSH2 0x4B5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13EE JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1B12 JUMPI PUSH2 0x1B12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER DUP4 PUSH2 0x3478 JUMP JUMPDEST POP PUSH2 0xC8F PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1B24 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1BA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST DUP1 PUSH2 0x1C0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265207375706572696F7220746F20300000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x90EB87C560A0213754CEB3A7FA3012F01ACAB0A35602C1E1995ADF69DABC9D50 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1C53 PUSH2 0x3824 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1CD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x137B621413925496477D46E5055AC0D56178BDD724BA8BF843AFCEEF18268BA3 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1D52 PUSH2 0x3824 JUMP JUMPDEST PUSH2 0x899 PUSH1 0x0 PUSH2 0x38A5 JUMP JUMPDEST PUSH2 0x1D64 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1DE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x1E51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792066656520746F6F20686967680000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xB1C4EE38D35556741133DA7FF9B6F7AB0FA88D0406133126FF128F635490A857 SWAP1 PUSH1 0x20 ADD PUSH2 0x1C40 JUMP JUMPDEST PUSH2 0x1E91 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1F12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1F8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x203A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x205E SWAP2 SWAP1 PUSH2 0x48CF JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH32 0xB3EACD0E351FAFDFEFDEC84E1CD19679B38DBCD63EA7C2C24DA17FD2BC3B3C0E SWAP4 POP PUSH1 0x20 ADD SWAP2 POP PUSH2 0x1D3F SWAP1 POP JUMP JUMPDEST PUSH2 0x20B3 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F720000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2179 JUMPI POP PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x222B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E6420616E642067656E657369734C6F636B526F756E6420697320747269 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6767657265640000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2236 PUSH2 0x391A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x2266 PUSH1 0xA SLOAD DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x3B14 JUMP JUMPDEST PUSH2 0x228B PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x2278 SWAP2 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x3D6D JUMP JUMPDEST PUSH2 0x22A2 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x229D SWAP2 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST PUSH2 0x3FDA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x22B0 SWAP1 PUSH1 0x1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0xC8F SWAP1 PUSH2 0x417D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x233A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2372 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP5 DUP6 ADD MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x1C0 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0xD SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x1A0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x2453 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x246F JUMPI POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x246C SWAP2 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST TIMESTAMP GT JUMPDEST DUP1 ISZERO PUSH2 0x247E JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2491 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x24CE JUMPI POP PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x2534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F722F61646D696E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x253C PUSH2 0x4392 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x68B095021B1F40FE513109F513C66692F0B3219AEE674A69F4EFC57BADB8201D SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x2572 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x25F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0x2682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275666665725365636F6E6473206D75737420626520696E666572696F722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F20696E74657276616C5365636F6E6473000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xE60149E0431FEC12DF63DFAB5FCE2A9CEFE9A4D3DF5F41CB626F579AE1F2B91A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 DUP5 SWAP1 PUSH2 0x2701 SWAP1 DUP8 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x273C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2739 SWAP1 DUP8 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x277E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x27A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27EC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2855 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x280A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A8B JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2892 DUP3 DUP12 PUSH2 0x4A8C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x28C9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x290D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xD PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2956 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29DD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2A6D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2A83 SWAP1 PUSH2 0x4B5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x285B JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2A98 DUP6 DUP12 PUSH2 0x4A8C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B26 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B5E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP5 DUP6 ADD MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x1C0 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP5 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0xB DUP5 ADD SLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xC DUP5 ADD SLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0xD SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP4 AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE SWAP3 SWAP4 POP EQ ISZERO PUSH2 0x2C43 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x2483 JUMP JUMPDEST DUP1 PUSH2 0x1A0 ADD MLOAD DUP1 ISZERO PUSH2 0x2C58 JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2C66 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x247E JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xA0 ADD MLOAD SGT DUP1 ISZERO PUSH2 0x2CBD JUMPI POP PUSH1 0x0 DUP3 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2CBB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x247E JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xA0 ADD MLOAD SLT DUP1 ISZERO PUSH2 0x247E JUMPI POP PUSH1 0x1 DUP3 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D11 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D23 PUSH2 0x3824 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2DFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742062652070726564696374696F6E20746F6B656E206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x2E20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER DUP4 PUSH2 0x3478 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x14F11966A996E0629572E51064726D2057A80FBD34EFC066682C06A71DBB6E98 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2E68 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2EF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2F72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC47D127C07BDD56C5CCBA00463CE3BD3C1BCA71B4670EEA6E5D0C02E4AA156E2 SWAP1 PUSH1 0x20 ADD PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x2FED PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x306E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x93CCACEAC092FFB842C46B8718667A13A80E9058DCD0BD403D0B47215B30DA07 SWAP1 PUSH1 0x20 ADD PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x30AB PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x312C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F720000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x31D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E6420697320747269676765726564000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3282 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2067656E657369734C6F636B526F756E64206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x328D PUSH2 0x391A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x32BD PUSH1 0xA SLOAD DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x3B14 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x32CB SWAP1 PUSH1 0x1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x32D9 SWAP1 PUSH2 0x37A6 JUMP JUMPDEST POP POP PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3355 PUSH2 0x3824 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x33F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x3401 DUP2 PUSH2 0x38A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x3471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x354C SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x4401 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3606 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3622 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT JUMPDEST DUP1 ISZERO PUSH2 0x2483 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x369F SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x34CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x3731 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x37C8 SWAP2 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH2 0x37DD SWAP2 PUSH2 0x4ADD JUMP JUMPDEST PUSH2 0x37E7 SWAP1 TIMESTAMP PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x0 PUSH1 0x8 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH32 0x939F42374AA9BF1D8D8CD56D8A9110CB040CD8DFEAE44080C6FCF2645E51B452 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC SLOAD TIMESTAMP PUSH2 0x392D SWAP2 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x399C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39D4 SWAP2 SWAP1 PUSH2 0x48CF JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP SWAP3 POP DUP4 DUP2 GT ISZERO PUSH2 0x3A6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C6520757064617465206578636565646564206D61782074696D6573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74616D7020616C6C6F77616E6365000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xB SLOAD DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3B09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C652075706461746520726F756E644964206D757374206265206C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72676572207468616E206F7261636C654C6174657374526F756E644964000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3BB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E6420616674657220726F756E6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6861732073746172746564000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x3C53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E64206166746572206C6F636B5469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D657374616D7000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3C72 SWAP2 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x3D01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E642077697468696E206275666665 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x725365636F6E6473000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 SLOAD PUSH2 0x3D1C SWAP1 TIMESTAMP PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE DUP4 SWAP1 DUP6 SWAP1 PUSH32 0x482E76A65B448A42DEEF26E99E58FB20C85E26F075DEFFF8DF6AA80459B39006 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3E0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E6420616674657220726F756E642068 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6173206C6F636B65640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x3EAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E6420616674657220636C6F73655469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D657374616D7000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3ECB SWAP2 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x3F5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E642077697468696E20627566666572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5365636F6E647300000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x7 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0xD DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0xB6FF1FE915DB84788CBBBC017F0D2BEF9485FAD9FD0BD8CE9340FDE0D8410DD8 SWAP1 PUSH2 0x3D5F SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x4008 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD ISZERO JUMPDEST PUSH2 0x406E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264732063616C63756C617465640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SGT ISZERO PUSH2 0x40D2 JUMPI DUP4 PUSH1 0x9 ADD SLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH1 0x8 ADD SLOAD PUSH2 0x40AF SWAP2 SWAP1 PUSH2 0x4ADD JUMP JUMPDEST PUSH2 0x40B9 SWAP2 SWAP1 PUSH2 0x4AA4 JUMP JUMPDEST SWAP2 POP DUP2 DUP5 PUSH1 0x8 ADD SLOAD PUSH2 0x40CB SWAP2 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST SWAP1 POP PUSH2 0x410B JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD SLT ISZERO PUSH2 0x40FE JUMPI DUP4 PUSH1 0xA ADD SLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH1 0x8 ADD SLOAD PUSH2 0x40AF SWAP2 SWAP1 PUSH2 0x4ADD JUMP JUMPDEST POP POP POP PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0xB DUP5 ADD DUP4 SWAP1 SSTORE PUSH1 0xC DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x412E SWAP1 DUP5 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP6 SWAP1 PUSH32 0x6DFDFCB09C8804D0058826CD2539F1ACFBE3CB887C9BE03D928035BCE0F1A58D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4228 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E6420697320747269676765726564000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 PUSH2 0x4237 PUSH1 0x2 DUP5 PUSH2 0x4B1A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x42D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920737461727420726F756E6420616674657220726F756E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206E2D322068617320656E646564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 PUSH2 0x42E8 PUSH1 0x2 DUP5 PUSH2 0x4B1A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x4389 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79207374617274206E657720726F756E642061667465722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E64206E2D3220636C6F736554696D657374616D70000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x3401 DUP2 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x439A PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x377C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4463 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4510 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x4484 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4484 SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0x354C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x451F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4527 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x45B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x45E2 SWAP2 SWAP1 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x461F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4624 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4635 DUP8 DUP4 DUP4 DUP8 PUSH2 0x4640 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x46D3 JUMPI DUP3 MLOAD PUSH2 0x46CC JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x46CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST POP DUP2 PUSH2 0x451F JUMP JUMPDEST PUSH2 0x451F DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x46E8 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x4A3B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4770 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4779 DUP3 PUSH2 0x471C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4792 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x479B DUP4 PUSH2 0x471C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x47BD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x47C6 DUP5 PUSH2 0x471C JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47ED JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4804 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4817 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4825 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4839 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x485C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4779 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x487C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4895 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x48A5 PUSH1 0x20 DUP5 ADD PUSH2 0x471C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48C0 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x48E6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x48EF DUP7 PUSH2 0x4745 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x4912 PUSH1 0x80 DUP8 ADD PUSH2 0x4745 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x4955 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x496B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4B31 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP6 ADD SWAP1 DUP3 DUP10 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x49AF JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4993 JUMP JUMPDEST POP POP POP DUP5 DUP2 SUB DUP3 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE DUP8 DUP4 ADD SWAP2 DUP4 ADD SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A00 JUMPI DUP4 MLOAD PUSH2 0x49DC DUP5 DUP3 MLOAD PUSH2 0x491E JUMP JUMPDEST DUP1 DUP7 ADD MLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP5 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x49C7 JUMP JUMPDEST POP POP DUP1 SWAP5 POP POP POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x4A25 DUP3 DUP7 PUSH2 0x491E JUMP JUMPDEST DUP4 PUSH1 0x20 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4A5A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4B31 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4A9F JUMPI PUSH2 0x4A9F PUSH2 0x4B96 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4AD8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4B15 JUMPI PUSH2 0x4B15 PUSH2 0x4B96 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4B2C JUMPI PUSH2 0x4B2C PUSH2 0x4B96 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B4C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4B34 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x369F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4B8F JUMPI PUSH2 0x4B8F PUSH2 0x4B96 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E SLOAD 0xEF 0xD SWAP13 DUP10 EXTCODECOPY 0xD6 0x27 PUSH2 0x9A8 MSTORE 0xB8 EXTCODECOPY SSTORE TIMESTAMP EQ SIGNEXTEND 0xC0 MSIZE 0xC9 SWAP2 0xC9 PUSH15 0x90F408158F665364736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "598:23444:9:-:0;;;798:35;;;-1:-1:-1;;;;839:36:9;;;4956:765;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;734:10:8;936:18:1;:32::i;:::-;1006:5:2;996:15;;-1:-1:-1;;;;996:15:2;;;;1821:22:3;;1670:4:9;5279:32;;;5271:66;;;;-1:-1:-1;;;5271:66:9;;1209:2:10;5271:66:9;;;1191:21:10;1248:2;1228:18;;;1221:30;1287:23;1267:18;;;1260:51;1328:18;;5271:66:9;;;;;;;;5348:14;;;;;-1:-1:-1;;;;;;5348:14:9;;;5372:6;:46;;-1:-1:-1;;;;;;5372:46:9;;;-1:-1:-1;;;;;5372:46:9;;;;;;;5428:12;:28;;;;;;;;;;;;;;5466:15;:34;;;;;;;;;;;;;;;;5510:15;:34;5554:13;:30;;;;5594:12;:28;5632:21;:46;5688:11;:26;598:23444;;2426:187:1;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2426:187;;:::o;14:988:10:-;170:6;178;186;194;202;210;218;226;234;287:3;275:9;266:7;262:23;258:33;255:2;;;309:6;301;294:22;255:2;346:9;340:16;365:31;390:5;365:31;:::i;:::-;465:2;450:18;;444:25;415:5;;-1:-1:-1;478:33:10;444:25;478:33;:::i;:::-;582:2;567:18;;561:25;530:7;;-1:-1:-1;595:33:10;561:25;595:33;:::i;:::-;699:2;684:18;;678:25;647:7;;-1:-1:-1;712:33:10;678:25;712:33;:::i;:::-;764:7;754:17;;;811:3;800:9;796:19;790:26;780:36;;856:3;845:9;841:19;835:26;825:36;;901:3;890:9;886:19;880:26;870:36;;946:3;935:9;931:19;925:26;915:36;;991:3;980:9;976:19;970:26;960:36;;245:757;;;;;;;;;;;:::o;1357:131::-;-1:-1:-1;;;;;1432:31:10;;1422:42;;1412:2;;1478:1;1475;1468:12;1412:2;1402:86;:::o;:::-;598:23444:9;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:27072:10",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:10",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:147:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:10"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "188:16:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "197:1:10",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "200:1:10",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "190:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "190:12:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "190:12:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:10"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:10"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "142:42:10",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:54:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:65:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:73:10"
                              },
                              "nodeType": "YulIf",
                              "src": "111:2:10"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:10",
                            "type": ""
                          }
                        ],
                        "src": "14:196:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "274:120:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "284:22:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "299:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "293:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "293:13:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "284:5:10"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "372:16:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "381:1:10",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "384:1:10",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "374:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "374:12:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "374:12:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "328:5:10"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "339:5:10"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "346:22:10",
                                            "type": "",
                                            "value": "0xffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "335:3:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "335:34:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "325:2:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "325:45:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "318:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "318:53:10"
                              },
                              "nodeType": "YulIf",
                              "src": "315:2:10"
                            }
                          ]
                        },
                        "name": "abi_decode_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "253:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "264:5:10",
                            "type": ""
                          }
                        ],
                        "src": "215:179:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "469:126:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "515:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "524:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "532:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "517:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "517:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "517:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "490:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "499:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "486:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "486:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "511:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "482:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "482:32:10"
                              },
                              "nodeType": "YulIf",
                              "src": "479:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "550:39:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "579:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "560:18:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "560:29:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "550:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "435:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "446:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "458:6:10",
                            "type": ""
                          }
                        ],
                        "src": "399:196:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "687:177:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "733:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "742:6:10"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "750:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "735:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "735:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "735:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "708:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "717:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "704:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "704:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "729:2:10",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "700:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "700:32:10"
                              },
                              "nodeType": "YulIf",
                              "src": "697:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "768:39:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "797:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "778:18:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "778:29:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "768:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "816:42:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "843:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "854:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "839:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "839:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "826:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "826:32:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "816:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "645:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "656:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "668:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "676:6:10",
                            "type": ""
                          }
                        ],
                        "src": "600:264:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "973:228:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1019:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1028:6:10"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1036:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1021:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1021:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1021:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "994:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1003:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "990:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "990:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1015:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "986:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "986:32:10"
                              },
                              "nodeType": "YulIf",
                              "src": "983:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1054:39:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1083:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1064:18:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1064:29:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1054:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1102:42:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1129:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1140:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1125:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1125:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1112:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1112:32:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1102:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1153:42:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1180:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1191:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1176:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1176:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1163:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1163:32:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1153:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "923:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "934:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "946:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "954:6:10",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "962:6:10",
                            "type": ""
                          }
                        ],
                        "src": "869:332:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1311:560:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1357:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1366:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1374:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1359:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1359:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1359:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1332:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1341:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1328:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1328:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1353:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1324:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1324:32:10"
                              },
                              "nodeType": "YulIf",
                              "src": "1321:2:10"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1392:37:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1419:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1406:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1406:23:10"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1396:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1438:28:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1448:18:10",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1442:2:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1493:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1502:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1510:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1495:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1495:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1495:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1481:6:10"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1489:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1478:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1478:14:10"
                              },
                              "nodeType": "YulIf",
                              "src": "1475:2:10"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1528:32:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1542:9:10"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1553:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1538:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1538:22:10"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1532:2:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1608:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1617:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1625:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1610:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1610:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1610:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1587:2:10"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1591:4:10",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1583:3:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1583:13:10"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1598:7:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1579:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1579:27:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1572:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1572:35:10"
                              },
                              "nodeType": "YulIf",
                              "src": "1569:2:10"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1643:30:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1670:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1657:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1657:16:10"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1647:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1700:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1709:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1717:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1702:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1702:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1702:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1688:6:10"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1696:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1685:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1685:14:10"
                              },
                              "nodeType": "YulIf",
                              "src": "1682:2:10"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1784:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1793:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1801:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1786:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1786:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1786:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1749:2:10"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1757:1:10",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "1760:6:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "1753:3:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1753:14:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1745:3:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1745:23:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1770:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1741:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1741:32:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1775:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1738:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1738:45:10"
                              },
                              "nodeType": "YulIf",
                              "src": "1735:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1819:21:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1833:2:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1837:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1829:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1829:11:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1819:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1849:16:10",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1859:6:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1849:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1269:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1280:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1292:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1300:6:10",
                            "type": ""
                          }
                        ],
                        "src": "1206:665:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1954:219:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2000:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2009:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2017:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2002:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2002:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2002:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1975:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1984:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1971:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1971:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1996:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1967:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1967:32:10"
                              },
                              "nodeType": "YulIf",
                              "src": "1964:2:10"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2035:29:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2054:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2048:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2048:16:10"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2039:5:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2117:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2126:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2134:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2119:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2119:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2119:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2086:5:10"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "2107:5:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "2100:6:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2100:13:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2093:6:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2093:21:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2083:2:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2083:32:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2076:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2076:40:10"
                              },
                              "nodeType": "YulIf",
                              "src": "2073:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2152:15:10",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2162:5:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2152:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1920:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1931:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1943:6:10",
                            "type": ""
                          }
                        ],
                        "src": "1876:297:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2248:120:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2294:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2303:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2311:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2296:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2296:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2296:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2269:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2278:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2265:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2265:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2290:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2261:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2261:32:10"
                              },
                              "nodeType": "YulIf",
                              "src": "2258:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2329:33:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2352:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2339:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2339:23:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2329:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2214:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2225:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2237:6:10",
                            "type": ""
                          }
                        ],
                        "src": "2178:190:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2460:177:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2506:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2515:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2523:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2508:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2508:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2508:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2481:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2490:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2477:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2477:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2502:2:10",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2473:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2473:32:10"
                              },
                              "nodeType": "YulIf",
                              "src": "2470:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2541:33:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2564:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2551:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2551:23:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2541:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2583:48:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2616:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2627:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2612:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2612:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2593:18:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2593:38:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2583:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2418:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2429:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2441:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2449:6:10",
                            "type": ""
                          }
                        ],
                        "src": "2373:264:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2729:171:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2775:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2784:6:10"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2792:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2777:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2777:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2777:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2750:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2759:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2746:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2746:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2771:2:10",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2742:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2742:32:10"
                              },
                              "nodeType": "YulIf",
                              "src": "2739:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2810:33:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2833:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2820:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2820:23:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2810:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2852:42:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2879:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2890:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2875:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2875:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2862:12:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2862:32:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2852:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2687:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2698:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2710:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2718:6:10",
                            "type": ""
                          }
                        ],
                        "src": "2642:258:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3051:337:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3098:26:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3107:6:10"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3115:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3100:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3100:22:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3100:22:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3072:7:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3081:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3068:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3068:23:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3093:3:10",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3064:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3064:33:10"
                              },
                              "nodeType": "YulIf",
                              "src": "3061:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3133:49:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3172:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3143:28:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3143:39:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3133:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3191:35:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3211:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3222:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3207:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3207:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3201:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3201:25:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3191:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3235:35:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3255:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3266:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3251:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3251:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3245:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3245:25:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3235:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3279:35:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3299:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3310:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3295:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3295:18:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3289:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3289:25:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3279:6:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3323:59:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3366:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3377:3:10",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3362:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3362:19:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3333:28:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3333:49:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3323:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2985:9:10",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2996:7:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3008:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3016:6:10",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3024:6:10",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3032:6:10",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3040:6:10",
                            "type": ""
                          }
                        ],
                        "src": "2905:483:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3443:243:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3485:168:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3506:1:10",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3509:77:10",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3499:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3499:88:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3499:88:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3607:1:10",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3610:4:10",
                                          "type": "",
                                          "value": "0x21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3600:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3600:15:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3600:15:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3635:1:10",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3638:4:10",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3628:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3628:15:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3628:15:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3466:5:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3473:1:10",
                                        "type": "",
                                        "value": "2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3463:2:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3463:12:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3456:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3456:20:10"
                              },
                              "nodeType": "YulIf",
                              "src": "3453:2:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3669:3:10"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3674:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3662:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3662:18:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3662:18:10"
                            }
                          ]
                        },
                        "name": "abi_encode_enum_Position",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3427:5:10",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3434:3:10",
                            "type": ""
                          }
                        ],
                        "src": "3393:293:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3828:137:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3838:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3858:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3852:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3852:13:10"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3842:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3900:6:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3908:4:10",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3896:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3896:17:10"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3915:3:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3920:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3874:21:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3874:53:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3874:53:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3936:23:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3947:3:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3952:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3943:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3943:16:10"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3936:3:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3804:3:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3809:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3820:3:10",
                            "type": ""
                          }
                        ],
                        "src": "3691:274:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4071:125:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4081:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4093:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4104:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4089:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4089:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4081:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4123:9:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4138:6:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4146:42:10",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4134:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4134:55:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4116:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4116:74:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4116:74:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4040:9:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4051:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4062:4:10",
                            "type": ""
                          }
                        ],
                        "src": "3970:226:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4358:241:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4368:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4380:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4391:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4376:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4376:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4368:4:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4403:52:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4413:42:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4407:2:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4471:9:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4486:6:10"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4494:2:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4482:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4482:15:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4464:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4464:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4464:34:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4518:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4529:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4514:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4514:18:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4538:6:10"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4546:2:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4534:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4534:15:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4507:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4507:43:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4507:43:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4570:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4581:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4566:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4566:18:10"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4586:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4559:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4559:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4559:34:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4311:9:10",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4322:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4330:6:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4338:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4349:4:10",
                            "type": ""
                          }
                        ],
                        "src": "4201:398:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4733:168:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4743:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4755:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4766:2:10",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4751:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4751:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4743:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4785:9:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4800:6:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4808:42:10",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4796:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4796:55:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4778:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4778:74:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4778:74:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4872:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4883:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4868:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4868:18:10"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4888:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4861:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4861:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4861:34:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4694:9:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4705:6:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4713:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4724:4:10",
                            "type": ""
                          }
                        ],
                        "src": "4604:297:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5213:1199:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5223:12:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5233:2:10",
                                "type": "",
                                "value": "96"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5227:2:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5244:32:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5262:9:10"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5273:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5258:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5258:18:10"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5248:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5292:9:10"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5303:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5285:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5285:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5285:21:10"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5315:17:10",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "5326:6:10"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "5319:3:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5341:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5361:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5355:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5355:13:10"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5345:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5384:6:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5392:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5377:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5377:22:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5377:22:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5408:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5419:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5430:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5415:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5415:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5408:3:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5443:14:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5453:4:10",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "5447:2:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5466:29:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5484:6:10"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5492:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5480:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5480:15:10"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "5470:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5504:13:10",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "5513:4:10"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "5508:1:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5575:120:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5596:3:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "5607:6:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5601:5:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5601:13:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5589:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5589:26:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5589:26:10"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5628:19:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5639:3:10"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "5644:2:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5635:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5635:12:10"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5628:3:10"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5660:25:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "5674:6:10"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "5682:2:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5670:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5670:15:10"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5660:6:10"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5537:1:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5540:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5534:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5534:13:10"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5548:18:10",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5550:14:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5559:1:10"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5562:1:10",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5555:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5555:9:10"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5550:1:10"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5530:3:10",
                                "statements": []
                              },
                              "src": "5526:169:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5715:9:10"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "5726:2:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5711:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5711:18:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5735:3:10"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5740:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5731:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5731:19:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5704:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5704:47:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5704:47:10"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5760:16:10",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5773:3:10"
                              },
                              "variables": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5764:5:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5785:29:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5807:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5801:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5801:13:10"
                              },
                              "variables": [
                                {
                                  "name": "length_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5789:8:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5830:3:10"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5835:8:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5823:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5823:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5823:21:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5853:21:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5866:3:10"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5871:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5862:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5862:12:10"
                              },
                              "variableNames": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5853:5:10"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5883:31:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5903:6:10"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5911:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5899:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5899:15:10"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5887:8:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5923:15:10",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "5934:4:10"
                              },
                              "variables": [
                                {
                                  "name": "i_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5927:3:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6004:335:10",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6018:25:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6034:8:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "6028:5:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6028:15:10"
                                    },
                                    "variables": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulTypedName",
                                        "src": "6022:2:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "6087:2:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "6081:5:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6081:9:10"
                                        },
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6092:5:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_enum_Position",
                                        "nodeType": "YulIdentifier",
                                        "src": "6056:24:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6056:42:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6056:42:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "6122:5:10"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "6129:2:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6118:3:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6118:14:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_3",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6144:2:10"
                                                },
                                                {
                                                  "name": "_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6148:2:10"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "6140:3:10"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6140:11:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "6134:5:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6134:18:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6111:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6111:42:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6111:42:10"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6166:14:10",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6176:4:10",
                                      "type": "",
                                      "value": "0x40"
                                    },
                                    "variables": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulTypedName",
                                        "src": "6170:2:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "6204:5:10"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "6211:2:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6200:3:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6200:14:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "_3",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "6240:2:10"
                                                        },
                                                        {
                                                          "name": "_4",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "6244:2:10"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "6236:3:10"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "6236:11:10"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6230:5:10"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "6230:18:10"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "iszero",
                                                "nodeType": "YulIdentifier",
                                                "src": "6223:6:10"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6223:26:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "iszero",
                                            "nodeType": "YulIdentifier",
                                            "src": "6216:6:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6216:34:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6193:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6193:58:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6193:58:10"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6264:23:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6277:5:10"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6284:2:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6273:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6273:14:10"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6264:5:10"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6300:29:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6316:8:10"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "6326:2:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6312:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6312:17:10"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6300:8:10"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5958:3:10"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5963:8:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5955:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5955:17:10"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5973:22:10",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5975:18:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5986:3:10"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5991:1:10",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5982:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5982:11:10"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5975:3:10"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5951:3:10",
                                "statements": []
                              },
                              "src": "5947:392:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6348:13:10",
                              "value": {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "6356:5:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6348:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6381:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6392:4:10",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6377:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6377:20:10"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6399:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6370:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6370:36:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6370:36:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5166:9:10",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5177:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5185:6:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5193:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5204:4:10",
                            "type": ""
                          }
                        ],
                        "src": "4906:1506:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6512:92:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6522:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6534:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6545:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6530:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6530:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6522:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6564:9:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "6589:6:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6582:6:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6582:14:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6575:6:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6575:22:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6557:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6557:41:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6557:41:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6481:9:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6492:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6503:4:10",
                            "type": ""
                          }
                        ],
                        "src": "6417:187:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6738:125:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6748:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6760:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6771:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6756:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6756:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6748:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6790:9:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6805:6:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6813:42:10",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6801:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6801:55:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6783:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6783:74:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6783:74:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6707:9:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6718:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6729:4:10",
                            "type": ""
                          }
                        ],
                        "src": "6609:254:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6983:125:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6993:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7005:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7016:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7001:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7001:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6993:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7035:9:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7050:6:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7058:42:10",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7046:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7046:55:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7028:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7028:74:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7028:74:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$409__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6952:9:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6963:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6974:4:10",
                            "type": ""
                          }
                        ],
                        "src": "6868:240:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7275:196:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7285:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7297:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7308:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7293:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7293:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7285:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7345:6:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7353:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_Position",
                                  "nodeType": "YulIdentifier",
                                  "src": "7320:24:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7320:43:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7320:43:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7383:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7394:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7379:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7379:18:10"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7399:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7372:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7372:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7372:34:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7426:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7437:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7422:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7422:18:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value2",
                                            "nodeType": "YulIdentifier",
                                            "src": "7456:6:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "7449:6:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7449:14:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "7442:6:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7442:22:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7415:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7415:50:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7415:50:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_enum$_Position_$1262_t_uint256_t_bool__to_t_uint8_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7228:9:10",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7239:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7247:6:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7255:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7266:4:10",
                            "type": ""
                          }
                        ],
                        "src": "7113:358:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7575:76:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7585:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7597:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7608:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7593:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7593:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7585:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7627:9:10"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7638:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7620:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7620:25:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7620:25:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7544:9:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7555:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7566:4:10",
                            "type": ""
                          }
                        ],
                        "src": "7476:175:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7777:321:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7794:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7805:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7787:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7787:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7787:21:10"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7817:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7837:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7831:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7831:13:10"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7821:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7864:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7875:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7860:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7860:18:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7880:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7853:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7853:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7853:34:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7922:6:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7930:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7918:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7918:15:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7939:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7950:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7935:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7935:18:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7955:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "7896:21:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7896:66:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7896:66:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7971:121:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7987:9:10"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "8006:6:10"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8014:2:10",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "8002:3:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8002:15:10"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8019:66:10",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "7998:3:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7998:88:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7983:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7983:104:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8089:2:10",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7979:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7979:113:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7971:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7746:9:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7757:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7768:4:10",
                            "type": ""
                          }
                        ],
                        "src": "7656:442:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8277:170:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8294:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8305:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8287:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8287:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8287:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8328:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8339:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8324:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8324:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8344:2:10",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8317:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8317:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8317:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8367:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8378:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8363:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8363:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8383:22:10",
                                    "type": "",
                                    "value": "Pausable: not paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8356:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8356:50:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8356:50:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8415:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8427:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8438:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8423:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8423:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8415:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8254:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8268:4:10",
                            "type": ""
                          }
                        ],
                        "src": "8103:344:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8626:173:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8643:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8654:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8636:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8636:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8636:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8677:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8688:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8673:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8673:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8693:2:10",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8666:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8666:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8666:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8716:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8727:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8712:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8712:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8732:25:10",
                                    "type": "",
                                    "value": "Not eligible for refund"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8705:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8705:53:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8705:53:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8767:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8779:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8790:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8775:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8775:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8767:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_10916da313aec2d89ae884214021eae2adcdb0000848c813099dbdefabcb1887__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8603:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8617:4:10",
                            "type": ""
                          }
                        ],
                        "src": "8452:347:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8978:171:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8995:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9006:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8988:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8988:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8988:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9029:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9040:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9025:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9025:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9045:2:10",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9018:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9018:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9018:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9068:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9079:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9064:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9064:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9084:23:10",
                                    "type": "",
                                    "value": "Treasury fee too high"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9057:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9057:51:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9057:51:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9117:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9129:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9140:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9125:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9125:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9117:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8955:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8969:4:10",
                            "type": ""
                          }
                        ],
                        "src": "8804:345:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9328:233:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9345:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9356:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9338:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9338:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9338:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9379:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9390:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9375:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9375:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9395:2:10",
                                    "type": "",
                                    "value": "43"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9368:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9368:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9368:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9418:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9429:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9414:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9414:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9434:34:10",
                                    "type": "",
                                    "value": "Can only lock round after round "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9407:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9407:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9407:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9489:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9500:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9485:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9485:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9505:13:10",
                                    "type": "",
                                    "value": "has started"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9478:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9478:41:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9478:41:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9528:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9540:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9551:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9536:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9536:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9528:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_16f79d9e996c484c6ab868c786817e96a6590ee714435b79b344480dba01cfa6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9305:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9319:4:10",
                            "type": ""
                          }
                        ],
                        "src": "9154:407:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9740:239:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9757:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9768:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9750:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9750:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9750:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9791:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9802:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9787:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9787:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9807:2:10",
                                    "type": "",
                                    "value": "49"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9780:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9780:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9780:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9830:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9841:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9826:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9826:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9846:34:10",
                                    "type": "",
                                    "value": "Can only run after genesisStartR"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9819:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9819:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9819:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9901:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9912:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9897:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9897:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9917:19:10",
                                    "type": "",
                                    "value": "ound is triggered"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9890:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9890:47:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9890:47:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9946:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9958:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9969:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9954:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9954:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9946:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9717:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9731:4:10",
                            "type": ""
                          }
                        ],
                        "src": "9566:413:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10158:228:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10175:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10186:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10168:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10168:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10168:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10209:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10220:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10205:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10205:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10225:2:10",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10198:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10198:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10198:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10248:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10259:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10244:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10244:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10264:34:10",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10237:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10237:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10237:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10319:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10330:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10315:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10315:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10335:8:10",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10308:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10308:36:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10308:36:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10353:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10365:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10376:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10361:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10361:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10353:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10135:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10149:4:10",
                            "type": ""
                          }
                        ],
                        "src": "9984:402:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10565:236:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10582:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10593:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10575:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10575:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10575:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10616:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10627:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10612:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10612:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10632:2:10",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10605:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10605:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10605:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10655:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10666:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10651:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10651:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10671:34:10",
                                    "type": "",
                                    "value": "Can only start round after round"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10644:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10644:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10644:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10726:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10737:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10722:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10722:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10742:16:10",
                                    "type": "",
                                    "value": " n-2 has ended"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10715:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10715:44:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10715:44:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10768:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10780:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10791:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10776:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10776:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10768:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_25e36640e6894539ca9141c17c2fb43b389e358f68c3c034f58f90400971fe8d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10542:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10556:4:10",
                            "type": ""
                          }
                        ],
                        "src": "10391:410:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10980:251:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10997:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11008:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10990:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10990:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10990:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11031:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11042:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11027:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11027:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11047:2:10",
                                    "type": "",
                                    "value": "61"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11020:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11020:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11020:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11070:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11081:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11066:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11066:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11086:34:10",
                                    "type": "",
                                    "value": "Oracle update roundId must be la"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11059:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11059:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11059:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11141:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11152:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11137:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11137:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11157:31:10",
                                    "type": "",
                                    "value": "rger than oracleLatestRoundId"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11130:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11130:59:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11130:59:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11198:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11210:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11221:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11206:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11206:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11198:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_26bf7200ac9064fd4cd504d65207afe4b5d3eae2249dd8e9100c923d5898f73e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10957:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10971:4:10",
                            "type": ""
                          }
                        ],
                        "src": "10806:425:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11410:229:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11427:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11438:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11420:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11420:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11420:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11461:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11472:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11457:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11457:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11477:2:10",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11450:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11450:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11450:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11500:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11511:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11496:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11496:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11516:34:10",
                                    "type": "",
                                    "value": "Can only end round within buffer"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11489:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11489:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11489:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11571:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11582:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11567:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11567:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11587:9:10",
                                    "type": "",
                                    "value": "Seconds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11560:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11560:37:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11560:37:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11606:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11618:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11629:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11614:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11614:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11606:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_305b29a5e5f4ae7fa6be0480743fbd9163344a67bcc8501056392462fe190019__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11387:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11401:4:10",
                            "type": ""
                          }
                        ],
                        "src": "11236:403:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11818:170:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11835:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11846:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11828:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11828:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11828:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11869:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11880:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11865:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11865:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11885:2:10",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11858:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11858:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11858:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11908:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11919:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11904:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11904:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11924:22:10",
                                    "type": "",
                                    "value": "Contract not allowed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11897:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11897:50:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11897:50:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11956:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11968:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11979:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11964:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11964:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11956:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3121f7b79283aa0596509798902a70205287bb5aa7cf6024beaaf19d6d89ba68__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11795:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11809:4:10",
                            "type": ""
                          }
                        ],
                        "src": "11644:344:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12167:239:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12184:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12195:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12177:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12177:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12177:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12218:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12229:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12214:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12214:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12234:2:10",
                                    "type": "",
                                    "value": "49"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12207:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12207:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12207:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12257:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12268:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12253:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12253:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12273:34:10",
                                    "type": "",
                                    "value": "bufferSeconds must be inferior t"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12246:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12246:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12246:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12328:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12339:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12324:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12324:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12344:19:10",
                                    "type": "",
                                    "value": "o intervalSeconds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12317:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12317:47:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12317:47:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12373:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12385:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12396:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12381:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12381:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12373:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_33274a361372ebeacba5c8e2184d7f229ddb12fab7235d1315991afd5a00ecae__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12144:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12158:4:10",
                            "type": ""
                          }
                        ],
                        "src": "11993:413:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12585:172:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12602:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12613:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12595:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12595:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12595:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12636:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12647:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12632:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12632:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12652:2:10",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12625:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12625:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12625:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12675:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12686:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12671:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12671:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12691:24:10",
                                    "type": "",
                                    "value": "Not eligible for claim"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12664:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12664:52:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12664:52:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12725:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12737:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12748:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12733:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12733:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12725:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4485251d168175c070f4245faf8e035abbbbeb2b93ec5dd30a17635d7bf82fa6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12562:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12576:4:10",
                            "type": ""
                          }
                        ],
                        "src": "12411:346:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12936:229:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12953:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12964:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12946:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12946:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12946:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12987:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12998:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12983:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12983:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13003:2:10",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12976:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12976:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12976:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13026:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13037:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13022:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13022:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13042:34:10",
                                    "type": "",
                                    "value": "Can only lock round after lockTi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13015:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13015:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13015:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13097:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13108:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13093:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13093:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13113:9:10",
                                    "type": "",
                                    "value": "mestamp"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13086:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13086:37:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13086:37:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13132:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13144:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13155:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13140:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13140:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13132:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4615b616084e6afd7e2bfca1c1e6bf78f2c06f5fdc371de5a933a8c06c2f3c13__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12913:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12927:4:10",
                            "type": ""
                          }
                        ],
                        "src": "12762:403:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13344:245:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13361:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13372:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13354:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13354:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13354:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13395:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13406:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13391:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13391:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13411:2:10",
                                    "type": "",
                                    "value": "55"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13384:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13384:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13384:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13434:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13445:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13430:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13430:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13450:34:10",
                                    "type": "",
                                    "value": "Can only start new round after r"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13423:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13423:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13423:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13505:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13516:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13501:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13501:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13521:25:10",
                                    "type": "",
                                    "value": "ound n-2 closeTimestamp"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13494:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13494:53:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13494:53:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13556:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13568:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13579:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13564:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13564:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13556:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_48314e39a2428c78f4a19c0e2084c27c66b28314dadb8ba08949064279800d81__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13321:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13335:4:10",
                            "type": ""
                          }
                        ],
                        "src": "13170:419:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13768:168:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13785:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13796:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13778:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13778:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13778:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13819:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13830:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13815:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13815:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13835:2:10",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13808:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13808:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13808:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13858:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13869:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13854:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13854:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13874:20:10",
                                    "type": "",
                                    "value": "Not operator/admin"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13847:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13847:48:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13847:48:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13904:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13916:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13927:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13912:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13912:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13904:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_49d662e2e497c75dff2142bf1640750ac7d04cac14a37cbabfe479aeb27de903__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13745:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13759:4:10",
                            "type": ""
                          }
                        ],
                        "src": "13594:342:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14115:224:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14132:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14143:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14125:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14125:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14125:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14166:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14177:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14162:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14162:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14182:2:10",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14155:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14155:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14155:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14205:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14216:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14201:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14201:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14221:34:10",
                                    "type": "",
                                    "value": "Can only run genesisLockRound on"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14194:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14194:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14194:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14276:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14287:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14272:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14272:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14292:4:10",
                                    "type": "",
                                    "value": "ce"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14265:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14265:32:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14265:32:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14306:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14318:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14329:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14314:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14314:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14306:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_54c1dd6be5b30f20d2093c3e980ed73015a2bbe4a9e8d6c4aca1b60af3f18649__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14092:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14106:4:10",
                            "type": ""
                          }
                        ],
                        "src": "13941:398:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14518:228:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14535:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14546:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14528:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14528:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14528:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14569:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14580:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14565:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14565:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14585:2:10",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14558:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14558:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14558:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14608:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14619:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14604:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14604:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14624:34:10",
                                    "type": "",
                                    "value": "Address: insufficient balance fo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14597:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14597:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14597:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14679:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14690:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14675:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14675:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14695:8:10",
                                    "type": "",
                                    "value": "r call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14668:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14668:36:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14668:36:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14713:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14725:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14736:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14721:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14721:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14713:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14495:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14509:4:10",
                            "type": ""
                          }
                        ],
                        "src": "14344:402:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14925:229:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14942:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14953:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14935:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14935:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14935:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14976:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14987:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14972:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14972:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14992:2:10",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14965:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14965:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14965:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15015:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15026:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15011:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15011:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15031:34:10",
                                    "type": "",
                                    "value": "Can only end round after closeTi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15004:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15004:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15004:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15086:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15097:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15082:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15082:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15102:9:10",
                                    "type": "",
                                    "value": "mestamp"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15075:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15075:37:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15075:37:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15121:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15133:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15144:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15129:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15129:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15121:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5aeb1b443dcf74ebb83f5c8c495d0ea37b2ffe70aeaa05c678145c1dbd7a2459__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14902:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14916:4:10",
                            "type": ""
                          }
                        ],
                        "src": "14751:403:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15333:168:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15350:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15361:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15343:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15343:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15343:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15384:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15395:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15380:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15380:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15400:2:10",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15373:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15373:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15373:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15423:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15434:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15419:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15419:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15439:20:10",
                                    "type": "",
                                    "value": "Rewards calculated"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15412:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15412:48:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15412:48:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15469:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15481:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15492:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15477:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15477:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15469:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5d7676630e3121bb49b4e3f5dacd5e86304058e320b99ad1413edecdac7e31f1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15310:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15324:4:10",
                            "type": ""
                          }
                        ],
                        "src": "15159:342:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15680:224:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15697:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15708:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15690:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15690:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15690:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15731:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15742:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15727:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15727:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15747:2:10",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15720:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15720:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15720:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15770:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15781:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15766:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15766:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15786:34:10",
                                    "type": "",
                                    "value": "Cannot be prediction token addre"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15759:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15759:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15759:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15841:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15852:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15837:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15837:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15857:4:10",
                                    "type": "",
                                    "value": "ss"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15830:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15830:32:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15830:32:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15871:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15883:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15894:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15879:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15879:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15871:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5fdc01b32442620471a9658ad8d4f600b20f28bafa372c47b397a9042c39956d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15657:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15671:4:10",
                            "type": ""
                          }
                        ],
                        "src": "15506:398:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16083:234:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16100:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16111:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16093:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16093:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16093:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16134:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16145:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16130:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16130:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16150:2:10",
                                    "type": "",
                                    "value": "44"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16123:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16123:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16123:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16173:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16184:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16169:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16169:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16189:34:10",
                                    "type": "",
                                    "value": "Bet amount must be greater than "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16162:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16162:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16162:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16244:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16255:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16240:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16240:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16260:14:10",
                                    "type": "",
                                    "value": "minBetAmount"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16233:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16233:42:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16233:42:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16284:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16296:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16307:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16292:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16292:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16284:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16060:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16074:4:10",
                            "type": ""
                          }
                        ],
                        "src": "15909:408:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16496:169:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16513:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16524:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16506:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16506:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16506:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16547:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16558:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16543:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16543:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16563:2:10",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16536:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16536:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16536:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16586:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16597:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16582:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16582:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16602:21:10",
                                    "type": "",
                                    "value": "Round has not ended"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16575:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16575:49:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16575:49:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16633:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16645:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16656:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16641:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16641:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16633:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_620bac5ce7ce07e7a24266f5d1f82fa5a6fdb12107b06bacff04582c4c3dd298__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16473:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16487:4:10",
                            "type": ""
                          }
                        ],
                        "src": "16322:343:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16844:230:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16861:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16872:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16854:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16854:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16854:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16895:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16906:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16891:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16891:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16911:2:10",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16884:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16884:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16884:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16934:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16945:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16930:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16930:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16950:34:10",
                                    "type": "",
                                    "value": "Can only lock round within buffe"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16923:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16923:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16923:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17005:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17016:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17001:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17001:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17021:10:10",
                                    "type": "",
                                    "value": "rSeconds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16994:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16994:38:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16994:38:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17041:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17053:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17064:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17049:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17049:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17041:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_65d9ebfb7b417d357c54ae150ee53f546dcdaa39c58b14378727fa7829cd41f8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16821:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16835:4:10",
                            "type": ""
                          }
                        ],
                        "src": "16670:404:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17253:166:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17270:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17281:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17263:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17263:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17263:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17304:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17315:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17300:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17300:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17320:2:10",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17293:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17293:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17293:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17343:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17354:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17339:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17339:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17359:18:10",
                                    "type": "",
                                    "value": "Pausable: paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17332:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17332:46:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17332:46:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17387:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17399:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17410:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17395:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17395:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17387:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17230:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17244:4:10",
                            "type": ""
                          }
                        ],
                        "src": "17079:340:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17598:172:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17615:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17626:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17608:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17608:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17608:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17649:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17660:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17645:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17645:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17665:2:10",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17638:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17638:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17638:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17688:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17699:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17684:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17684:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17704:24:10",
                                    "type": "",
                                    "value": "Cannot be zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17677:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17677:52:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17677:52:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17738:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17750:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17761:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17746:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17746:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17738:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17575:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17589:4:10",
                            "type": ""
                          }
                        ],
                        "src": "17424:346:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17949:176:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17966:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17977:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17959:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17959:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17959:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18000:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18011:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17996:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17996:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18016:2:10",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17989:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17989:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17989:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18039:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18050:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18035:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18035:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18055:28:10",
                                    "type": "",
                                    "value": "Proxy contract not allowed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18028:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18028:56:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18028:56:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18093:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18105:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18116:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18101:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18101:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18093:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_805913a464b2b4d6ef9cb52137d9a1509b46d9c4cc7c32415f075bb6c16a902c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17926:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17940:4:10",
                            "type": ""
                          }
                        ],
                        "src": "17775:350:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18304:182:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18321:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18332:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18314:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18314:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18314:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18355:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18366:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18351:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18351:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18371:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18344:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18344:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18344:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18394:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18405:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18390:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18390:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18410:34:10",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18383:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18383:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18383:62:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18454:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18466:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18477:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18462:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18462:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18454:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18281:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18295:4:10",
                            "type": ""
                          }
                        ],
                        "src": "18130:356:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18665:168:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18682:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18693:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18675:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18675:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18675:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18716:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18727:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18712:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18712:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18732:2:10",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18705:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18705:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18705:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18755:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18766:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18751:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18751:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18771:20:10",
                                    "type": "",
                                    "value": "Round not bettable"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18744:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18744:48:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18744:48:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18801:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18813:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18824:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18809:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18809:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18801:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18642:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18656:4:10",
                            "type": ""
                          }
                        ],
                        "src": "18491:342:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19012:231:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19029:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19040:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19022:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19022:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19022:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19063:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19074:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19059:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19059:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19079:2:10",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19052:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19052:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19052:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19102:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19113:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19098:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19098:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19118:34:10",
                                    "type": "",
                                    "value": "Can only end round after round h"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19091:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19091:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19091:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19173:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19184:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19169:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19169:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19189:11:10",
                                    "type": "",
                                    "value": "as locked"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19162:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19162:39:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19162:39:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19210:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19222:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19233:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19218:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19218:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19210:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a41dd959f6b8d59908b2f9cf13a8d0d10d9949d4d11b448e785beca06fef42a1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18989:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19003:4:10",
                            "type": ""
                          }
                        ],
                        "src": "18838:405:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19422:225:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19439:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19450:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19432:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19432:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19432:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19473:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19484:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19469:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19469:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19489:2:10",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19462:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19462:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19462:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19512:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19523:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19508:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19508:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19528:34:10",
                                    "type": "",
                                    "value": "Can only run genesisStartRound o"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19501:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19501:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19501:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19583:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19594:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19579:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19579:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19599:5:10",
                                    "type": "",
                                    "value": "nce"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19572:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19572:33:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19572:33:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19614:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19626:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19637:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19622:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19622:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19614:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a9ea304ddc1d813a52e1a9668db582745527adccdd0906ce8d85b183192c0132__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19399:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19413:4:10",
                            "type": ""
                          }
                        ],
                        "src": "19248:399:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19826:171:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19843:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19854:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19836:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19836:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19836:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19877:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19888:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19873:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19873:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19893:2:10",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19866:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19866:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19866:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19916:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19927:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19912:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19912:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19932:23:10",
                                    "type": "",
                                    "value": "Must be superior to 0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19905:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19905:51:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19905:51:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19965:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19977:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19988:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19973:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19973:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19965:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b0163f2fb50c6c5784d12ab9af56eb359b1d810de577e2657eccb92b9a70f495__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19803:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19817:4:10",
                            "type": ""
                          }
                        ],
                        "src": "19652:345:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20176:300:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20193:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20204:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20186:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20186:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20186:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20227:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20238:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20223:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20223:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20243:2:10",
                                    "type": "",
                                    "value": "70"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20216:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20216:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20216:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20266:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20277:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20262:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20262:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20282:34:10",
                                    "type": "",
                                    "value": "Can only run after genesisStartR"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20255:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20255:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20255:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20337:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20348:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20333:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20333:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20353:34:10",
                                    "type": "",
                                    "value": "ound and genesisLockRound is tri"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20326:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20326:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20326:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20408:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20419:3:10",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20404:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20404:19:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20425:8:10",
                                    "type": "",
                                    "value": "ggered"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20397:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20397:37:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20397:37:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20443:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20455:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20466:3:10",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20451:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20451:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20443:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b0f2a84e88f57bf6d829bd69a411a43d04b00c018b197d9d18656699d1a2cb4f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20153:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20167:4:10",
                            "type": ""
                          }
                        ],
                        "src": "20002:474:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20655:179:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20672:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20683:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20665:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20665:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20665:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20706:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20717:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20702:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20702:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20722:2:10",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20695:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20695:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20695:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20745:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20756:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20741:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20741:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20761:31:10",
                                    "type": "",
                                    "value": "Address: call to non-contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20734:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20734:59:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20734:59:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20802:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20814:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20825:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20810:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20810:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20802:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20632:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20646:4:10",
                            "type": ""
                          }
                        ],
                        "src": "20481:353:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21013:171:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21030:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21041:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21023:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21023:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21023:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21064:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21075:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21060:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21060:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21080:2:10",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21053:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21053:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21053:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21103:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21114:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21099:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21099:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21119:23:10",
                                    "type": "",
                                    "value": "Round has not started"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21092:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21092:51:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21092:51:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21152:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21164:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21175:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21160:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21160:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21152:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d1836faf5a24c20648fe1feea8bcbadf99f3e9a49b28354c8afadd4a78cb02f7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20990:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21004:4:10",
                            "type": ""
                          }
                        ],
                        "src": "20839:345:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21363:177:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21380:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21391:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21373:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21373:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21373:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21414:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21425:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21410:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21410:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21430:2:10",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21403:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21403:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21403:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21453:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21464:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21449:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21449:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21469:29:10",
                                    "type": "",
                                    "value": "Can only bet once per round"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21442:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21442:57:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21442:57:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21508:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21520:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21531:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21516:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21516:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21508:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21340:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21354:4:10",
                            "type": ""
                          }
                        ],
                        "src": "21189:351:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21719:232:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21736:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21747:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21729:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21729:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21729:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21770:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21781:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21766:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21766:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21786:2:10",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21759:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21759:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21759:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21809:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21820:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21805:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21805:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21825:34:10",
                                    "type": "",
                                    "value": "SafeERC20: ERC20 operation did n"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21798:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21798:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21798:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21880:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21891:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21876:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21876:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21896:12:10",
                                    "type": "",
                                    "value": "ot succeed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21869:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21869:40:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21869:40:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21918:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21930:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21941:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21926:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21926:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21918:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21696:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21710:4:10",
                            "type": ""
                          }
                        ],
                        "src": "21545:406:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22130:181:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22147:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22158:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22140:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22140:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22140:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22181:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22192:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22177:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22177:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22197:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22170:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22170:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22170:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22220:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22231:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22216:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22216:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22236:33:10",
                                    "type": "",
                                    "value": "ReentrancyGuard: reentrant call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22209:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22209:61:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22209:61:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22279:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22291:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22302:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22287:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22287:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22279:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22107:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22121:4:10",
                            "type": ""
                          }
                        ],
                        "src": "21956:355:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22490:171:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22507:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22518:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22500:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22500:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22500:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22541:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22552:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22537:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22537:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22557:2:10",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22530:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22530:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22530:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22580:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22591:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22576:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22576:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22596:23:10",
                                    "type": "",
                                    "value": "Bet is too early/late"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22569:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22569:51:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22569:51:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22629:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22641:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22652:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22637:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22637:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22629:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22467:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22481:4:10",
                            "type": ""
                          }
                        ],
                        "src": "22316:345:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22840:236:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22857:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22868:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22850:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22850:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22850:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22891:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22902:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22887:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22887:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22907:2:10",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22880:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22880:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22880:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22930:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22941:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22926:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22926:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22946:34:10",
                                    "type": "",
                                    "value": "Oracle update exceeded max times"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22919:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22919:62:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22919:62:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23001:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23012:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22997:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22997:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "23017:16:10",
                                    "type": "",
                                    "value": "tamp allowance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22990:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22990:44:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22990:44:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23043:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23055:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23066:3:10",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23051:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23051:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23043:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f33570aeabdc7840b27baeee2ba18f1f51901a851210e95175d48a2543a633e7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22817:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22831:4:10",
                            "type": ""
                          }
                        ],
                        "src": "22666:410:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23255:162:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23272:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23283:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23265:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23265:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23265:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23306:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23317:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23302:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23302:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23322:2:10",
                                    "type": "",
                                    "value": "12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23295:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23295:30:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23295:30:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23345:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23356:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23341:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23341:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "23361:14:10",
                                    "type": "",
                                    "value": "Not operator"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23334:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23334:42:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23334:42:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23385:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23397:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23408:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23393:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23393:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23385:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f62ead2258bbb12f965d46919f1c0f382053ba2024e91da3661aec8b15585f38__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23232:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23246:4:10",
                            "type": ""
                          }
                        ],
                        "src": "23081:336:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23596:158:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23613:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23624:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23606:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23606:21:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23606:21:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23647:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23658:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23643:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23643:18:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23663:1:10",
                                    "type": "",
                                    "value": "9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23636:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23636:29:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23636:29:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23685:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23696:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23681:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23681:18:10"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "23701:11:10",
                                    "type": "",
                                    "value": "Not admin"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23674:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23674:39:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23674:39:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23722:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23734:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23745:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23730:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23730:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23722:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23573:9:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23587:4:10",
                            "type": ""
                          }
                        ],
                        "src": "23422:332:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23860:76:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23870:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23882:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23893:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23878:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23878:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23870:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23912:9:10"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23923:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23905:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23905:25:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23905:25:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23829:9:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "23840:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23851:4:10",
                            "type": ""
                          }
                        ],
                        "src": "23759:177:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24070:119:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24080:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24092:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24103:2:10",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24088:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24088:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24080:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24122:9:10"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "24133:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24115:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24115:25:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24115:25:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24160:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24171:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24156:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24156:18:10"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "24176:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24149:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24149:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24149:34:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24031:9:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "24042:6:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "24050:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24061:4:10",
                            "type": ""
                          }
                        ],
                        "src": "23941:248:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24351:162:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24361:26:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24373:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24384:2:10",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24369:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24369:18:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24361:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24403:9:10"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "24414:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24396:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24396:25:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24396:25:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24441:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24452:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24437:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24437:18:10"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "24457:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24430:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24430:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24430:34:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24484:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24495:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24480:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24480:18:10"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "24500:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24473:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24473:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24473:34:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24304:9:10",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "24315:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "24323:6:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "24331:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24342:4:10",
                            "type": ""
                          }
                        ],
                        "src": "24194:319:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24977:666:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24987:27:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24999:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25010:3:10",
                                    "type": "",
                                    "value": "448"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24995:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24995:19:10"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24987:4:10"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25030:9:10"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "25041:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25023:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25023:25:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25023:25:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25068:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25079:2:10",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25064:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25064:18:10"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "25084:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25057:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25057:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25057:34:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25111:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25122:2:10",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25107:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25107:18:10"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "25127:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25100:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25100:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25100:34:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25154:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25165:2:10",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25150:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25150:18:10"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "25170:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25143:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25143:34:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25143:34:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25197:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25208:3:10",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25193:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25193:19:10"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "25214:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25186:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25186:35:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25186:35:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25241:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25252:3:10",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25237:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25237:19:10"
                                  },
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "25258:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25230:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25230:35:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25230:35:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25285:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25296:3:10",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25281:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25281:19:10"
                                  },
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "25302:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25274:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25274:35:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25274:35:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25329:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25340:3:10",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25325:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25325:19:10"
                                  },
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "25346:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25318:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25318:35:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25318:35:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25373:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25384:3:10",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25369:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25369:19:10"
                                  },
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "25390:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25362:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25362:35:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25362:35:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25417:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25428:3:10",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25413:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25413:19:10"
                                  },
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "25434:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25406:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25406:35:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25406:35:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25461:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25472:3:10",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25457:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25457:19:10"
                                  },
                                  {
                                    "name": "value10",
                                    "nodeType": "YulIdentifier",
                                    "src": "25478:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25450:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25450:36:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25450:36:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25506:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25517:3:10",
                                        "type": "",
                                        "value": "352"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25502:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25502:19:10"
                                  },
                                  {
                                    "name": "value11",
                                    "nodeType": "YulIdentifier",
                                    "src": "25523:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25495:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25495:36:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25495:36:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25551:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25562:3:10",
                                        "type": "",
                                        "value": "384"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25547:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25547:19:10"
                                  },
                                  {
                                    "name": "value12",
                                    "nodeType": "YulIdentifier",
                                    "src": "25568:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25540:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25540:36:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25540:36:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25596:9:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25607:3:10",
                                        "type": "",
                                        "value": "416"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25592:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25592:19:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value13",
                                            "nodeType": "YulIdentifier",
                                            "src": "25627:7:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "25620:6:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25620:15:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "25613:6:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25613:23:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25585:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25585:52:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25585:52:10"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_int256_t_int256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_int256_t_int256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24838:9:10",
                            "type": ""
                          },
                          {
                            "name": "value13",
                            "nodeType": "YulTypedName",
                            "src": "24849:7:10",
                            "type": ""
                          },
                          {
                            "name": "value12",
                            "nodeType": "YulTypedName",
                            "src": "24858:7:10",
                            "type": ""
                          },
                          {
                            "name": "value11",
                            "nodeType": "YulTypedName",
                            "src": "24867:7:10",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "24876:7:10",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "24885:6:10",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "24893:6:10",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "24901:6:10",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "24909:6:10",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "24917:6:10",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "24925:6:10",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "24933:6:10",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "24941:6:10",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "24949:6:10",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "24957:6:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24968:4:10",
                            "type": ""
                          }
                        ],
                        "src": "24518:1125:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25696:80:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25723:22:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "25725:16:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25725:18:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25725:18:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25712:1:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "25719:1:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "25715:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25715:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "25709:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25709:13:10"
                              },
                              "nodeType": "YulIf",
                              "src": "25706:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25754:16:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25765:1:10"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25768:1:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25761:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25761:9:10"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "25754:3:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "25679:1:10",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "25682:1:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "25688:3:10",
                            "type": ""
                          }
                        ],
                        "src": "25648:128:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25827:228:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25858:168:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "25879:1:10"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "25882:77:10",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "25872:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25872:88:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25872:88:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "25980:1:10",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "25983:4:10",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "25973:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25973:15:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25973:15:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "26008:1:10"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26011:4:10",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "26001:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26001:15:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26001:15:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25847:1:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "25840:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25840:9:10"
                              },
                              "nodeType": "YulIf",
                              "src": "25837:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26035:14:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "26044:1:10"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "26047:1:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "26040:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26040:9:10"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "26035:1:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "25812:1:10",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "25815:1:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "25821:1:10",
                            "type": ""
                          }
                        ],
                        "src": "25781:274:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26112:176:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26231:22:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "26233:16:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26233:18:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26233:18:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "26143:1:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "26136:6:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26136:9:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "26129:6:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26129:17:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "26151:1:10"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26158:66:10",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "26226:1:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "26154:3:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26154:74:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "26148:2:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26148:81:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "26125:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26125:105:10"
                              },
                              "nodeType": "YulIf",
                              "src": "26122:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26262:20:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "26277:1:10"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "26280:1:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "26273:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26273:9:10"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "26262:7:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "26091:1:10",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "26094:1:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "26100:7:10",
                            "type": ""
                          }
                        ],
                        "src": "26060:228:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26342:76:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26364:22:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "26366:16:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26366:18:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26366:18:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "26358:1:10"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "26361:1:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "26355:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26355:8:10"
                              },
                              "nodeType": "YulIf",
                              "src": "26352:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26395:17:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "26407:1:10"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "26410:1:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "26403:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26403:9:10"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "26395:4:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "26324:1:10",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "26327:1:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "26333:4:10",
                            "type": ""
                          }
                        ],
                        "src": "26293:125:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26476:205:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "26486:10:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26495:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "26490:1:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26555:63:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "26580:3:10"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "26585:1:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "26576:3:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26576:11:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26599:3:10"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26604:1:10"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "26595:3:10"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26595:11:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "26589:5:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26589:18:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "26569:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26569:39:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26569:39:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "26516:1:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "26519:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "26513:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26513:13:10"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "26527:19:10",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "26529:15:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "26538:1:10"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26541:2:10",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "26534:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26534:10:10"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "26529:1:10"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "26509:3:10",
                                "statements": []
                              },
                              "src": "26505:113:10"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26644:31:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "26657:3:10"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "26662:6:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "26653:3:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26653:16:10"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26671:1:10",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "26646:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26646:27:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26646:27:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "26633:1:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "26636:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "26630:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26630:13:10"
                              },
                              "nodeType": "YulIf",
                              "src": "26627:2:10"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "26454:3:10",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "26459:3:10",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "26464:6:10",
                            "type": ""
                          }
                        ],
                        "src": "26423:258:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26733:148:10",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26824:22:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "26826:16:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26826:18:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26826:18:10"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26749:5:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26756:66:10",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "26746:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26746:77:10"
                              },
                              "nodeType": "YulIf",
                              "src": "26743:2:10"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26855:20:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26866:5:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26873:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26862:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26862:13:10"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "26855:3:10"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26715:5:10",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "26725:3:10",
                            "type": ""
                          }
                        ],
                        "src": "26686:195:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26918:152:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26935:1:10",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26938:77:10",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26928:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26928:88:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26928:88:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27032:1:10",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27035:4:10",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27025:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27025:15:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27025:15:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27056:1:10",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27059:4:10",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "27049:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27049:15:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27049:15:10"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "26886:184:10"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_enum_Position(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_BetInfo_$1299_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := 96\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _2 := 0x20\n        let srcPtr := add(value0, _2)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        mstore(add(headStart, _2), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value1)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _2)\n        let srcPtr_1 := add(value1, _2)\n        let i_1 := tail\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            let _3 := mload(srcPtr_1)\n            abi_encode_enum_Position(mload(_3), pos_1)\n            mstore(add(pos_1, _2), mload(add(_3, _2)))\n            let _4 := 0x40\n            mstore(add(pos_1, _4), iszero(iszero(mload(add(_3, _4)))))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _2)\n        }\n        tail := pos_1\n        mstore(add(headStart, 0x40), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$409__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_enum$_Position_$1262_t_uint256_t_bool__to_t_uint8_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_enum_Position(value0, headStart)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_10916da313aec2d89ae884214021eae2adcdb0000848c813099dbdefabcb1887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not eligible for refund\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Treasury fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_16f79d9e996c484c6ab868c786817e96a6590ee714435b79b344480dba01cfa6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Can only lock round after round \")\n        mstore(add(headStart, 96), \"has started\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Can only run after genesisStartR\")\n        mstore(add(headStart, 96), \"ound is triggered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_25e36640e6894539ca9141c17c2fb43b389e358f68c3c034f58f90400971fe8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Can only start round after round\")\n        mstore(add(headStart, 96), \" n-2 has ended\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_26bf7200ac9064fd4cd504d65207afe4b5d3eae2249dd8e9100c923d5898f73e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Oracle update roundId must be la\")\n        mstore(add(headStart, 96), \"rger than oracleLatestRoundId\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_305b29a5e5f4ae7fa6be0480743fbd9163344a67bcc8501056392462fe190019__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Can only end round within buffer\")\n        mstore(add(headStart, 96), \"Seconds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3121f7b79283aa0596509798902a70205287bb5aa7cf6024beaaf19d6d89ba68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Contract not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_33274a361372ebeacba5c8e2184d7f229ddb12fab7235d1315991afd5a00ecae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"bufferSeconds must be inferior t\")\n        mstore(add(headStart, 96), \"o intervalSeconds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4485251d168175c070f4245faf8e035abbbbeb2b93ec5dd30a17635d7bf82fa6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not eligible for claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4615b616084e6afd7e2bfca1c1e6bf78f2c06f5fdc371de5a933a8c06c2f3c13__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Can only lock round after lockTi\")\n        mstore(add(headStart, 96), \"mestamp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_48314e39a2428c78f4a19c0e2084c27c66b28314dadb8ba08949064279800d81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Can only start new round after r\")\n        mstore(add(headStart, 96), \"ound n-2 closeTimestamp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_49d662e2e497c75dff2142bf1640750ac7d04cac14a37cbabfe479aeb27de903__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not operator/admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_54c1dd6be5b30f20d2093c3e980ed73015a2bbe4a9e8d6c4aca1b60af3f18649__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Can only run genesisLockRound on\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5aeb1b443dcf74ebb83f5c8c495d0ea37b2ffe70aeaa05c678145c1dbd7a2459__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Can only end round after closeTi\")\n        mstore(add(headStart, 96), \"mestamp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d7676630e3121bb49b4e3f5dacd5e86304058e320b99ad1413edecdac7e31f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Rewards calculated\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5fdc01b32442620471a9658ad8d4f600b20f28bafa372c47b397a9042c39956d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Cannot be prediction token addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Bet amount must be greater than \")\n        mstore(add(headStart, 96), \"minBetAmount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_620bac5ce7ce07e7a24266f5d1f82fa5a6fdb12107b06bacff04582c4c3dd298__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Round has not ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_65d9ebfb7b417d357c54ae150ee53f546dcdaa39c58b14378727fa7829cd41f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Can only lock round within buffe\")\n        mstore(add(headStart, 96), \"rSeconds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_805913a464b2b4d6ef9cb52137d9a1509b46d9c4cc7c32415f075bb6c16a902c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Proxy contract not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Round not bettable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a41dd959f6b8d59908b2f9cf13a8d0d10d9949d4d11b448e785beca06fef42a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Can only end round after round h\")\n        mstore(add(headStart, 96), \"as locked\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a9ea304ddc1d813a52e1a9668db582745527adccdd0906ce8d85b183192c0132__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Can only run genesisStartRound o\")\n        mstore(add(headStart, 96), \"nce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b0163f2fb50c6c5784d12ab9af56eb359b1d810de577e2657eccb92b9a70f495__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Must be superior to 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b0f2a84e88f57bf6d829bd69a411a43d04b00c018b197d9d18656699d1a2cb4f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Can only run after genesisStartR\")\n        mstore(add(headStart, 96), \"ound and genesisLockRound is tri\")\n        mstore(add(headStart, 128), \"ggered\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d1836faf5a24c20648fe1feea8bcbadf99f3e9a49b28354c8afadd4a78cb02f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Round has not started\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Can only bet once per round\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Bet is too early/late\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f33570aeabdc7840b27baeee2ba18f1f51901a851210e95175d48a2543a633e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Oracle update exceeded max times\")\n        mstore(add(headStart, 96), \"tamp allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f62ead2258bbb12f965d46919f1c0f382053ba2024e91da3661aec8b15585f38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not operator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_int256_t_int256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_int256_t_int256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value13, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), value12)\n        mstore(add(headStart, 416), iszero(iszero(value13)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
                  "id": 10,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1210": [
                  {
                    "length": 32,
                    "start": 1852
                  },
                  {
                    "length": 32,
                    "start": 2099
                  },
                  {
                    "length": 32,
                    "start": 2951
                  },
                  {
                    "length": 32,
                    "start": 3967
                  },
                  {
                    "length": 32,
                    "start": 6891
                  },
                  {
                    "length": 32,
                    "start": 11557
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106102e85760003560e01c80637d1cd04f11610191578063cf2f5039116100e3578063f2b3c80911610097578063fa968eea11610071578063fa968eea1461072e578063fc0c546a14610737578063fc6f94681461075e57600080fd5b8063f2b3c809146106ec578063f2fde38b146106f5578063f7fdec281461070857600080fd5b8063dd1f7596116100c8578063dd1f7596146106c7578063eaba2361146106da578063ec324703146106e357600080fd5b8063cf2f5039146106ac578063d9d55eac146106bf57600080fd5b80638da5cb5b11610145578063b29a81401161011f578063b29a81401461067d578063b3ab15fb14610690578063cc32d176146106a357600080fd5b80638da5cb5b1461062a578063951fd60014610648578063a0c7f71c1461066a57600080fd5b80638456cb59116101765780638456cb5914610527578063890dc7661461052f5780638c65c81f1461054257600080fd5b80637d1cd04f146104fe5780637dc0d1d01461050757600080fd5b8063605540111161024a5780637285c58b116101fe5780637adbf973116101d85780637adbf973146104d05780637b3205f5146104e35780637bf41254146104eb57600080fd5b80637285c58b1461046657806376671808146104b457806377e741c7146104bd57600080fd5b80636c1885931161022f5780636c18859314610438578063704b6c021461044b578063715018a61461045e57600080fd5b8063605540111461041c5780636ba4c1381461042557600080fd5b8063368acb09116102a15780633f4ba83a116102865780633f4ba83a146103e9578063452fd75a146103f15780635c975abb146103f957600080fd5b8063368acb09146103cd5780633923e1b4146103d657600080fd5b80630f74174f116102d25780630f74174f1461030a578063127effb214610344578063273867d41461038957600080fd5b80623bdc74146102ed5780630e89e5a4146102f7575b600080fd5b6102f561077e565b005b6102f56103053660046148ae565b61089b565b60025461032f9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b6004546103649073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161033b565b6103bf61039736600461475f565b73ffffffffffffffffffffffffffffffffffffffff166000908152600f602052604090205490565b60405190815260200161033b565b6103bf60095481565b6102f56103e43660046148ae565b610c93565b6102f5611074565b6102f561117d565b60005474010000000000000000000000000000000000000000900460ff1661032f565b6103bf600c5481565b6102f56104333660046147db565b611310565b6102f561044636600461486b565b611b1c565b6102f561045936600461475f565b611c4b565b6102f5611d4a565b6104a5610474366004614883565b600d60209081526000928352604080842090915290825290208054600182015460029092015460ff91821692911683565b60405161033b93929190614a17565b6103bf600a5481565b6102f56104cb36600461486b565b611d5c565b6102f56104de36600461475f565b611e89565b6102f56120ab565b61032f6104f9366004614883565b6122be565b6103bf60065481565b6002546103649073ffffffffffffffffffffffffffffffffffffffff1681565b6102f5612489565b6102f561053d3660046148ae565b61256a565b6105c061055036600461486b565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b8c0154600c8d0154600d909d01549b9c9a9b999a98999798969795969495939492939192909160ff168e565b604080519e8f5260208f019d909d529b8d019a909a5260608c019890985260808b019690965260a08a019490945260c089019290925260e088015261010087015261012086015261014085015261016084015261018083015215156101a08201526101c00161033b565b60005473ffffffffffffffffffffffffffffffffffffffff16610364565b61065b6106563660046147a9565b6126c9565b60405161033b93929190614975565b61032f610678366004614883565b612aaa565b6102f561068b366004614780565b612d1b565b6102f561069e36600461475f565b612e74565b6103bf60085481565b6102f56106ba36600461486b565b612fe5565b6102f56130a3565b6103bf6106d5366004614780565b61331c565b6103bf60055481565b6103bf600b5481565b6103bf6103e881565b6102f561070336600461475f565b61334d565b60025461032f907501000000000000000000000000000000000000000000900460ff1681565b6103bf60075481565b6103647f000000000000000000000000000000000000000000000000000000000000000081565b6003546103649073ffffffffffffffffffffffffffffffffffffffff1681565b610786613404565b60035473ffffffffffffffffffffffffffffffffffffffff16331461080c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742061646d696e000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60098054600090915560035461085c9073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613478565b6040518181527fb9197c6b8e21274bd1e2d9c956a88af5cfee510f630fab3f046300f88b4223619060200160405180910390a15061089960018055565b565b6108a3613551565b6108ab613404565b333b15610914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f436f6e7472616374206e6f7420616c6c6f7765640000000000000000000000006044820152606401610803565b33321461097d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f787920636f6e7472616374206e6f7420616c6c6f7765640000000000006044820152606401610803565b600a5482146109e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f42657420697320746f6f206561726c792f6c61746500000000000000000000006044820152606401610803565b6109f1826135d6565b610a57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f526f756e64206e6f74206265747461626c6500000000000000000000000000006044820152606401610803565b600754811015610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f42657420616d6f756e74206d7573742062652067726561746572207468616e2060448201527f6d696e426574416d6f756e7400000000000000000000000000000000000000006064820152608401610803565b6000828152600d6020908152604080832033845290915290206001015415610b6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616e206f6e6c7920626574206f6e63652070657220726f756e6400000000006044820152606401610803565b610baf73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333084613641565b6000828152600e602052604090206008810154829190610bd0908390614a8c565b6008820155600a810154610be5908390614a8c565b600a8201556000848152600d602090815260408083203380855290835281842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081178255808201889055600f855283862080549182018155865294849020909401889055905185815287927f0d8c1fe3e67ab767116a81f122b83c2557a8c2564019cb7c4f83de1aeb1f1f0d91015b60405180910390a3505050610c8f60018055565b5050565b610c9b613551565b610ca3613404565b333b15610d0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f436f6e7472616374206e6f7420616c6c6f7765640000000000000000000000006044820152606401610803565b333214610d75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f787920636f6e7472616374206e6f7420616c6c6f7765640000000000006044820152606401610803565b600a548214610de0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f42657420697320746f6f206561726c792f6c61746500000000000000000000006044820152606401610803565b610de9826135d6565b610e4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f526f756e64206e6f74206265747461626c6500000000000000000000000000006044820152606401610803565b600754811015610ee1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f42657420616d6f756e74206d7573742062652067726561746572207468616e2060448201527f6d696e426574416d6f756e7400000000000000000000000000000000000000006064820152608401610803565b6000828152600d6020908152604080832033845290915290206001015415610f65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616e206f6e6c7920626574206f6e63652070657220726f756e6400000000006044820152606401610803565b610fa773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333084613641565b6000828152600e602052604090206008810154829190610fc8908390614a8c565b60088201556009810154610fdd908390614a8c565b60098201556000848152600d602090815260408083203380855290835281842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681556001808201889055600f855283862080549182018155865294849020909401889055905185815287927f438122d8cff518d18388099a5181f0d17a12b4f1b55faedf6e4a6acee0060c129101610c7b565b61107c6136a5565b60035473ffffffffffffffffffffffffffffffffffffffff163314806110b9575060045473ffffffffffffffffffffffffffffffffffffffff1633145b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f74206f70657261746f722f61646d696e00000000000000000000000000006044820152606401610803565b600280547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff16905561114f613729565b600a546040517faaa520fdd7d2c83061d632fa017b0432407e798818af63ea908589fceda39ab790600090a2565b611185613551565b60045473ffffffffffffffffffffffffffffffffffffffff163314611206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f74206f70657261746f7200000000000000000000000000000000000000006044820152606401610803565b6002547501000000000000000000000000000000000000000000900460ff16156112b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f43616e206f6e6c792072756e2067656e657369735374617274526f756e64206f60448201527f6e636500000000000000000000000000000000000000000000000000000000006064820152608401610803565b600a546112c0906001614a8c565b600a8190556112ce906137a6565b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff167501000000000000000000000000000000000000000000179055565b611318613404565b333b15611381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f436f6e7472616374206e6f7420616c6c6f7765640000000000000000000000006044820152606401610803565b3332146113ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f787920636f6e7472616374206e6f7420616c6c6f7765640000000000006044820152606401610803565b6000805b82811015611aca57600e6000858584818110611433577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815260200190815260200160002060010154600014156114b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f526f756e6420686173206e6f74207374617274656400000000000000000000006044820152606401610803565b600e60008585848181106114f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358152602001908152602001600020600301544211611574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f526f756e6420686173206e6f7420656e646564000000000000000000000000006044820152606401610803565b6000600e60008686858181106115b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029290920135835250810191909152604001600020600d015460ff161561184157611621858584818110611614577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013533612aaa565b611687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420656c696769626c6520666f7220636c61696d000000000000000000006044820152606401610803565b6000600e60008787868181106116c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1615151515815250509050806101600151816101800151600d60008989888181106117cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461182f9190614add565b6118399190614aa4565b915050611986565b61188a85858481811061187d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135336122be565b6118f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f7420656c696769626c6520666f7220726566756e640000000000000000006044820152606401610803565b600d600086868581811061192d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490505b6001600d60008787868181106119c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090810292909201358352508181019290925260409081016000908120338252909252902060020180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055611a258184614a8c565b9250848483818110611a60577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201353373ffffffffffffffffffffffffffffffffffffffff167f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf783604051611aaf91815260200190565b60405180910390a35080611ac281614b5d565b9150506113ee565b508015611b1257611b1273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163383613478565b50610c8f60018055565b611b246136a5565b60035473ffffffffffffffffffffffffffffffffffffffff163314611ba5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742061646d696e00000000000000000000000000000000000000000000006044820152606401610803565b80611c0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d757374206265207375706572696f7220746f203000000000000000000000006044820152606401610803565b6007819055600a546040518281527f90eb87c560a0213754ceb3a7fa3012f01acab0a35602c1e1995adf69dabc9d50906020015b60405180910390a250565b611c53613824565b73ffffffffffffffffffffffffffffffffffffffff8116611cd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616e6e6f74206265207a65726f2061646472657373000000000000000000006044820152606401610803565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f137b621413925496477d46e5055ac0d56178bdd724ba8bf843afceef18268ba3906020015b60405180910390a150565b611d52613824565b61089960006138a5565b611d646136a5565b60035473ffffffffffffffffffffffffffffffffffffffff163314611de5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742061646d696e00000000000000000000000000000000000000000000006044820152606401610803565b6103e8811115611e51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f54726561737572792066656520746f6f206869676800000000000000000000006044820152606401610803565b6008819055600a546040518281527fb1c4ee38d35556741133da7ff9b6f7ab0fa88d0406133126ff128f635490a85790602001611c40565b611e916136a5565b60035473ffffffffffffffffffffffffffffffffffffffff163314611f12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742061646d696e00000000000000000000000000000000000000000000006044820152606401610803565b73ffffffffffffffffffffffffffffffffffffffff8116611f8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616e6e6f74206265207a65726f2061646472657373000000000000000000006044820152606401610803565b6000600b55600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604080517ffeaf968c000000000000000000000000000000000000000000000000000000008152905163feaf968c9160048082019260a092909190829003018186803b15801561202657600080fd5b505afa15801561203a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205e91906148cf565b505060405173ffffffffffffffffffffffffffffffffffffffff851681527fb3eacd0e351fafdfefdec84e1cd19679b38dbcd63ea7c2c24da17fd2bc3b3c0e93506020019150611d3f9050565b6120b3613551565b60045473ffffffffffffffffffffffffffffffffffffffff163314612134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f74206f70657261746f7200000000000000000000000000000000000000006044820152606401610803565b6002547501000000000000000000000000000000000000000000900460ff168015612179575060025474010000000000000000000000000000000000000000900460ff165b61222b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604660248201527f43616e206f6e6c792072756e2061667465722067656e6573697353746172745260448201527f6f756e6420616e642067656e657369734c6f636b526f756e642069732074726960648201527f6767657265640000000000000000000000000000000000000000000000000000608482015260a401610803565b60008061223661391a565b915091508169ffffffffffffffffffff16600b81905550612266600a548369ffffffffffffffffffff1683613b14565b61228b6001600a546122789190614b1a565b8369ffffffffffffffffffff1683613d6d565b6122a26001600a5461229d9190614b1a565b613fda565b600a546122b0906001614a8c565b600a819055610c8f9061417d565b6000828152600d6020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152808220815160608101909252805483929190829060ff16600181111561233a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115612372577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260018281015460208084019190915260029384015460ff908116151560409485015260008a8152600e835284902084516101c08101865281548152938101549284019290925293810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c820154610180820152600d909101549091161580156101a08301819052929350909161245357508160400151155b801561246f5750600554816060015161246c9190614a8c565b42115b801561247e5750602082015115155b925050505b92915050565b612491613551565b60035473ffffffffffffffffffffffffffffffffffffffff163314806124ce575060045473ffffffffffffffffffffffffffffffffffffffff1633145b612534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f74206f70657261746f722f61646d696e00000000000000000000000000006044820152606401610803565b61253c614392565b600a546040517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d90600090a2565b6125726136a5565b60035473ffffffffffffffffffffffffffffffffffffffff1633146125f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742061646d696e00000000000000000000000000000000000000000000006044820152606401610803565b808210612682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f6275666665725365636f6e6473206d75737420626520696e666572696f72207460448201527f6f20696e74657276616c5365636f6e64730000000000000000000000000000006064820152608401610803565b6005829055600681905560408051838152602081018390527fe60149e0431fec12df63dfab5fce2a9cefe9a4d3df5f41cb626f579ae1f2b91a910160405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600f602052604081205460609182918490612701908790614b1a565b81111561273c5773ffffffffffffffffffffffffffffffffffffffff87166000908152600f6020526040902054612739908790614b1a565b90505b60008167ffffffffffffffff81111561277e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156127a7578160200160208202803683370190505b50905060008267ffffffffffffffff8111156127ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561285557816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161280a5790505b50905060005b83811015612a8b5773ffffffffffffffffffffffffffffffffffffffff8a166000908152600f60205260409020612892828b614a8c565b815481106128c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015483828151811061290d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600d6000848381518110612956577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091018101518252818101929092526040908101600090812073ffffffffffffffffffffffffffffffffffffffff8e168252909252908190208151606081019092528054829060ff1660018111156129dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115612a15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526001820154602082015260029091015460ff1615156040909101528251839083908110612a6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508080612a8390614b5d565b91505061285b565b508181612a98858b614a8c565b95509550955050505093509350939050565b6000828152600d6020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152808220815160608101909252805483929190829060ff166001811115612b26577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115612b5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260018281015460208084019190915260029384015460ff908116151560409485015260008a8152600e835284902084516101c081018652815481529381015492840192909252938101549282019290925260038201546060820152600482015460808201819052600583015460a08301819052600684015460c0840152600784015460e084015260088401546101008401526009840154610120840152600a840154610140840152600b840154610160840152600c840154610180840152600d9093015490931615156101a08201529293501415612c4357600092505050612483565b806101a001518015612c585750602082015115155b8015612c6657508160400151155b801561247e575080608001518160a00151138015612cbd5750600082516001811115612cbb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b8061247e575080608001518160a0015112801561247e5750600182516001811115612d11577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1495945050505050565b612d23613824565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612dff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f43616e6e6f742062652070726564696374696f6e20746f6b656e20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610803565b612e2073ffffffffffffffffffffffffffffffffffffffff83163383613478565b8173ffffffffffffffffffffffffffffffffffffffff167f14f11966a996e0629572e51064726d2057a80fbd34efc066682c06a71dbb6e9882604051612e6891815260200190565b60405180910390a25050565b60035473ffffffffffffffffffffffffffffffffffffffff163314612ef5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742061646d696e00000000000000000000000000000000000000000000006044820152606401610803565b73ffffffffffffffffffffffffffffffffffffffff8116612f72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616e6e6f74206265207a65726f2061646472657373000000000000000000006044820152606401610803565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fc47d127c07bdd56c5ccba00463ce3bd3c1bca71b4670eea6e5d0c02e4aa156e290602001611d3f565b612fed6136a5565b60035473ffffffffffffffffffffffffffffffffffffffff16331461306e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742061646d696e00000000000000000000000000000000000000000000006044820152606401610803565b600c8190556040518181527f93ccaceac092ffb842c46b8718667a13a80e9058dcd0bd403d0b47215b30da0790602001611d3f565b6130ab613551565b60045473ffffffffffffffffffffffffffffffffffffffff16331461312c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f74206f70657261746f7200000000000000000000000000000000000000006044820152606401610803565b6002547501000000000000000000000000000000000000000000900460ff166131d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f43616e206f6e6c792072756e2061667465722067656e6573697353746172745260448201527f6f756e64206973207472696767657265640000000000000000000000000000006064820152608401610803565b60025474010000000000000000000000000000000000000000900460ff1615613282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f43616e206f6e6c792072756e2067656e657369734c6f636b526f756e64206f6e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610803565b60008061328d61391a565b915091508169ffffffffffffffffffff16600b819055506132bd600a548369ffffffffffffffffffff1683613b14565b600a546132cb906001614a8c565b600a8190556132d9906137a6565b5050600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b600f602052816000526040600020818154811061333857600080fd5b90600052602060002001600091509150505481565b613355613824565b73ffffffffffffffffffffffffffffffffffffffff81166133f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610803565b613401816138a5565b50565b60026001541415613471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610803565b6002600155565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261354c9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152614401565b505050565b60005474010000000000000000000000000000000000000000900460ff1615610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610803565b6000818152600e60205260408120600101541580159061360657506000828152600e602052604090206002015415155b801561362257506000828152600e602052604090206001015442115b80156124835750506000908152600e6020526040902060020154421090565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261369f9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016134ca565b50505050565b60005474010000000000000000000000000000000000000000900460ff16610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610803565b6137316136a5565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6000818152600e6020526040902042600182018190556006546137c891614a8c565b6002808301919091556006546137dd91614add565b6137e79042614a8c565b600382015581815560006008820181905560405183917f939f42374aa9bf1d8d8cd56d8a9110cb040cd8dfeae44080c6fcf2645e51b45291a25050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610803565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000600c544261392d9190614a8c565b90506000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561399c57600080fd5b505afa1580156139b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139d491906148cf565b509350509250925083811115613a6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f7261636c6520757064617465206578636565646564206d61782074696d657360448201527f74616d7020616c6c6f77616e63650000000000000000000000000000000000006064820152608401610803565b600b548369ffffffffffffffffffff1611613b09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4f7261636c652075706461746520726f756e644964206d757374206265206c6160448201527f72676572207468616e206f7261636c654c6174657374526f756e6449640000006064820152608401610803565b509094909350915050565b6000838152600e6020526040902060010154613bb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f43616e206f6e6c79206c6f636b20726f756e6420616674657220726f756e642060448201527f68617320737461727465640000000000000000000000000000000000000000006064820152608401610803565b6000838152600e6020526040902060020154421015613c53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f43616e206f6e6c79206c6f636b20726f756e64206166746572206c6f636b546960448201527f6d657374616d70000000000000000000000000000000000000000000000000006064820152608401610803565b6005546000848152600e6020526040902060020154613c729190614a8c565b421115613d01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f43616e206f6e6c79206c6f636b20726f756e642077697468696e20627566666560448201527f725365636f6e64730000000000000000000000000000000000000000000000006064820152608401610803565b6000838152600e60205260409020600654613d1c9042614a8c565b60038201556004810182905560068101839055604051828152839085907f482e76a65b448a42deef26e99e58fb20c85e26f075defff8df6aa80459b39006906020015b60405180910390a350505050565b6000838152600e6020526040902060020154613e0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f43616e206f6e6c7920656e6420726f756e6420616674657220726f756e64206860448201527f6173206c6f636b656400000000000000000000000000000000000000000000006064820152608401610803565b6000838152600e6020526040902060030154421015613eac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f43616e206f6e6c7920656e6420726f756e6420616674657220636c6f7365546960448201527f6d657374616d70000000000000000000000000000000000000000000000000006064820152608401610803565b6005546000848152600e6020526040902060030154613ecb9190614a8c565b421115613f5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f43616e206f6e6c7920656e6420726f756e642077697468696e2062756666657260448201527f5365636f6e6473000000000000000000000000000000000000000000000000006064820152608401610803565b6000838152600e6020526040908190206005810183905560078101849055600d810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790559051839085907fb6ff1fe915db84788cbbbc017f0d2bef9485fad9fd0bd8ce9340fde0d8410dd890613d5f9086815260200190565b6000818152600e60205260409020600b015415801561400857506000818152600e60205260409020600c0154155b61406e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f526577617264732063616c63756c6174656400000000000000000000000000006044820152606401610803565b6000818152600e60205260408120600481015460058201549192918291829113156140d2578360090154925061271060085485600801546140af9190614add565b6140b99190614aa4565b91508184600801546140cb9190614b1a565b905061410b565b8360040154846005015412156140fe5783600a0154925061271060085485600801546140af9190614add565b5050506008810154600090815b600b8401839055600c84018190556009805483919060009061412e908490614a8c565b9091555050604080518481526020810183905290810183905285907f6dfdfcb09c8804d0058826cd2539f1acfbe3cb887c9be03d928035bce0f1a58d9060600160405180910390a25050505050565b6002547501000000000000000000000000000000000000000000900460ff16614228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f43616e206f6e6c792072756e2061667465722067656e6573697353746172745260448201527f6f756e64206973207472696767657265640000000000000000000000000000006064820152608401610803565b600e6000614237600284614b1a565b815260200190815260200160002060030154600014156142d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f43616e206f6e6c7920737461727420726f756e6420616674657220726f756e6460448201527f206e2d322068617320656e6465640000000000000000000000000000000000006064820152608401610803565b600e60006142e8600284614b1a565b815260200190815260200160002060030154421015614389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f43616e206f6e6c79207374617274206e657720726f756e64206166746572207260448201527f6f756e64206e2d3220636c6f736554696d657374616d700000000000000000006064820152608401610803565b613401816137a6565b61439a613551565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861377c3390565b6000614463826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166145109092919063ffffffff16565b9050805160001480614484575080806020019051810190614484919061484b565b61354c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610803565b606061451f8484600085614527565b949350505050565b6060824710156145b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610803565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516145e29190614959565b60006040518083038185875af1925050503d806000811461461f576040519150601f19603f3d011682016040523d82523d6000602084013e614624565b606091505b509150915061463587838387614640565b979650505050505050565b606083156146d35782516146cc5773ffffffffffffffffffffffffffffffffffffffff85163b6146cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610803565b508161451f565b61451f83838151156146e85781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108039190614a3b565b803573ffffffffffffffffffffffffffffffffffffffff8116811461474057600080fd5b919050565b805169ffffffffffffffffffff8116811461474057600080fd5b600060208284031215614770578081fd5b6147798261471c565b9392505050565b60008060408385031215614792578081fd5b61479b8361471c565b946020939093013593505050565b6000806000606084860312156147bd578081fd5b6147c68461471c565b95602085013595506040909401359392505050565b600080602083850312156147ed578182fd5b823567ffffffffffffffff80821115614804578384fd5b818501915085601f830112614817578384fd5b813581811115614825578485fd5b8660208260051b8501011115614839578485fd5b60209290920196919550909350505050565b60006020828403121561485c578081fd5b81518015158114614779578182fd5b60006020828403121561487c578081fd5b5035919050565b60008060408385031215614895578182fd5b823591506148a56020840161471c565b90509250929050565b600080604083850312156148c0578182fd5b50508035926020909101359150565b600080600080600060a086880312156148e6578081fd5b6148ef86614745565b945060208601519350604086015192506060860151915061491260808701614745565b90509295509295909350565b60028110614955577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000825161496b818460208701614b31565b9190910192915050565b60608082528451828201819052600091906020906080850190828901855b828110156149af57815184529284019290840190600101614993565b50505084810382860152865180825287830191830190855b81811015614a005783516149dc84825161491e565b808601518487015260409081015115159084015292840192918501916001016149c7565b505080945050505050826040830152949350505050565b60608101614a25828661491e565b8360208301528215156040830152949350505050565b6020815260008251806020840152614a5a816040850160208701614b31565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115614a9f57614a9f614b96565b500190565b600082614ad8577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614b1557614b15614b96565b500290565b600082821015614b2c57614b2c614b96565b500390565b60005b83811015614b4c578181015183820152602001614b34565b8381111561369f5750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415614b8f57614b8f614b96565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212205e54ef0d9c893cd6276109a852b83c5542140bc059c991c96e90f408158f665364736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D1CD04F GT PUSH2 0x191 JUMPI DUP1 PUSH4 0xCF2F5039 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF2B3C809 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xFA968EEA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xFA968EEA EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF2B3C809 EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xF7FDEC28 EQ PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD1F7596 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xDD1F7596 EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0xEABA2361 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xEC324703 EQ PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF2F5039 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xD9D55EAC EQ PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x145 JUMPI DUP1 PUSH4 0xB29A8140 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0xB29A8140 EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x951FD600 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA0C7F71C EQ PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x890DC766 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x8C65C81F EQ PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D1CD04F EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60554011 GT PUSH2 0x24A JUMPI DUP1 PUSH4 0x7285C58B GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x7ADBF973 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x7B3205F5 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x7BF41254 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7285C58B EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x77E741C7 EQ PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C188593 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x6C188593 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60554011 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x6BA4C138 EQ PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x368ACB09 GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x286 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x452FD75A EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x368ACB09 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x3923E1B4 EQ PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF74174F GT PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xF74174F EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x127EFFB2 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x273867D4 EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x3BDC74 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xE89E5A4 EQ PUSH2 0x2F7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F5 PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x48AE JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x32F SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x364 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x48AE JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x32F JUMP JUMPDEST PUSH2 0x3BF PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x47DB JUMP JUMPDEST PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x486B JUMP JUMPDEST PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x1C4B JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A17 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x486B JUMP JUMPDEST PUSH2 0x1D5C JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x32F PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4883 JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x364 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x2489 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x48AE JUMP JUMPDEST PUSH2 0x256A JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x486B JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD PUSH1 0xB DUP13 ADD SLOAD PUSH1 0xC DUP14 ADD SLOAD PUSH1 0xD SWAP1 SWAP14 ADD SLOAD SWAP12 SWAP13 SWAP11 SWAP12 SWAP10 SWAP11 SWAP9 SWAP10 SWAP8 SWAP9 SWAP7 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP15 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP15 DUP16 MSTORE PUSH1 0x20 DUP16 ADD SWAP14 SWAP1 SWAP14 MSTORE SWAP12 DUP14 ADD SWAP11 SWAP1 SWAP11 MSTORE PUSH1 0x60 DUP13 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x1C0 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x364 JUMP JUMPDEST PUSH2 0x65B PUSH2 0x656 CALLDATASIZE PUSH1 0x4 PUSH2 0x47A9 JUMP JUMPDEST PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x678 CALLDATASIZE PUSH1 0x4 PUSH2 0x4883 JUMP JUMPDEST PUSH2 0x2AAA JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x68B CALLDATASIZE PUSH1 0x4 PUSH2 0x4780 JUMP JUMPDEST PUSH2 0x2D1B JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x69E CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x2E74 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x6BA CALLDATASIZE PUSH1 0x4 PUSH2 0x486B JUMP JUMPDEST PUSH2 0x2FE5 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x30A3 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4780 JUMP JUMPDEST PUSH2 0x331C JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x703 CALLDATASIZE PUSH1 0x4 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x334D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x32F SWAP1 PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x364 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x364 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x786 PUSH2 0x3404 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x85C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xB9197C6B8E21274BD1E2D9C956A88AF5CFEE510F630FAB3F046300F88B422361 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x899 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0x3551 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0x3404 JUMP JUMPDEST CALLER EXTCODESIZE ISZERO PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 EQ PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420697320746F6F206561726C792F6C6174650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x9F1 DUP3 PUSH2 0x35D6 JUMP JUMPDEST PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F756E64206E6F74206265747461626C650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D696E426574416D6F756E740000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xB6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920626574206F6E63652070657220726F756E640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0xBAF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD DUP3 SWAP2 SWAP1 PUSH2 0xBD0 SWAP1 DUP4 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0xBE5 SWAP1 DUP4 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0xA DUP3 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP1 DUP3 ADD DUP9 SWAP1 SSTORE PUSH1 0xF DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP7 MSTORE SWAP5 DUP5 SWAP1 KECCAK256 SWAP1 SWAP5 ADD DUP9 SWAP1 SSTORE SWAP1 MLOAD DUP6 DUP2 MSTORE DUP8 SWAP3 PUSH32 0xD8C1FE3E67AB767116A81F122B83C2557A8C2564019CB7C4F83DE1AEB1F1F0D SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xC8F PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC9B PUSH2 0x3551 JUMP JUMPDEST PUSH2 0xCA3 PUSH2 0x3404 JUMP JUMPDEST CALLER EXTCODESIZE ISZERO PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 EQ PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420697320746F6F206561726C792F6C6174650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0xDE9 DUP3 PUSH2 0x35D6 JUMP JUMPDEST PUSH2 0xE4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F756E64206E6F74206265747461626C650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D696E426574416D6F756E740000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920626574206F6E63652070657220726F756E640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0xFA7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD DUP3 SWAP2 SWAP1 PUSH2 0xFC8 SWAP1 DUP4 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0xFDD SWAP1 DUP4 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP9 SWAP1 SSTORE PUSH1 0xF DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP7 MSTORE SWAP5 DUP5 SWAP1 KECCAK256 SWAP1 SWAP5 ADD DUP9 SWAP1 SSTORE SWAP1 MLOAD DUP6 DUP2 MSTORE DUP8 SWAP3 PUSH32 0x438122D8CFF518D18388099A5181F0D17A12B4F1B55FAEDF6E4A6ACEE0060C12 SWAP2 ADD PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x107C PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x10B9 JUMPI POP PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F722F61646D696E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH2 0x114F PUSH2 0x3729 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0xAAA520FDD7D2C83061D632FA017B0432407E798818AF63EA908589FCEDA39AB7 SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1185 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F720000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2067656E657369735374617274526F756E64206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E63650000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x12C0 SWAP1 PUSH1 0x1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x12CE SWAP1 PUSH2 0x37A6 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH22 0x1000000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x3404 JUMP JUMPDEST CALLER EXTCODESIZE ISZERO PUSH2 0x1381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0x13EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1ACA JUMPI PUSH1 0xE PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x1433 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F756E6420686173206E6F7420737461727465640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x14F3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP GT PUSH2 0x1574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F756E6420686173206E6F7420656E64656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x15B3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1621 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x1614 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH2 0x2AAA JUMP JUMPDEST PUSH2 0x1687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F7220636C61696D00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x16C6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH2 0x160 ADD MLOAD DUP2 PUSH2 0x180 ADD MLOAD PUSH1 0xD PUSH1 0x0 DUP10 DUP10 DUP9 DUP2 DUP2 LT PUSH2 0x17CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x182F SWAP2 SWAP1 PUSH2 0x4ADD JUMP JUMPDEST PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x4AA4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x188A DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x187D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x18F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F7220726566756E64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x192D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x19C5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1A25 DUP2 DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP3 POP DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1A60 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AAF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 PUSH2 0x1AC2 DUP2 PUSH2 0x4B5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13EE JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1B12 JUMPI PUSH2 0x1B12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER DUP4 PUSH2 0x3478 JUMP JUMPDEST POP PUSH2 0xC8F PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1B24 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1BA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST DUP1 PUSH2 0x1C0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265207375706572696F7220746F20300000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x90EB87C560A0213754CEB3A7FA3012F01ACAB0A35602C1E1995ADF69DABC9D50 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1C53 PUSH2 0x3824 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1CD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x137B621413925496477D46E5055AC0D56178BDD724BA8BF843AFCEEF18268BA3 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1D52 PUSH2 0x3824 JUMP JUMPDEST PUSH2 0x899 PUSH1 0x0 PUSH2 0x38A5 JUMP JUMPDEST PUSH2 0x1D64 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1DE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x1E51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792066656520746F6F20686967680000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xB1C4EE38D35556741133DA7FF9B6F7AB0FA88D0406133126FF128F635490A857 SWAP1 PUSH1 0x20 ADD PUSH2 0x1C40 JUMP JUMPDEST PUSH2 0x1E91 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1F12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1F8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x203A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x205E SWAP2 SWAP1 PUSH2 0x48CF JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH32 0xB3EACD0E351FAFDFEFDEC84E1CD19679B38DBCD63EA7C2C24DA17FD2BC3B3C0E SWAP4 POP PUSH1 0x20 ADD SWAP2 POP PUSH2 0x1D3F SWAP1 POP JUMP JUMPDEST PUSH2 0x20B3 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F720000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2179 JUMPI POP PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x222B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E6420616E642067656E657369734C6F636B526F756E6420697320747269 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6767657265640000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2236 PUSH2 0x391A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x2266 PUSH1 0xA SLOAD DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x3B14 JUMP JUMPDEST PUSH2 0x228B PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x2278 SWAP2 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x3D6D JUMP JUMPDEST PUSH2 0x22A2 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x229D SWAP2 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST PUSH2 0x3FDA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x22B0 SWAP1 PUSH1 0x1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0xC8F SWAP1 PUSH2 0x417D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x233A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2372 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP5 DUP6 ADD MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x1C0 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0xD SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x1A0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x2453 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x246F JUMPI POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x246C SWAP2 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST TIMESTAMP GT JUMPDEST DUP1 ISZERO PUSH2 0x247E JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2491 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x24CE JUMPI POP PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x2534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F722F61646D696E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x253C PUSH2 0x4392 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x68B095021B1F40FE513109F513C66692F0B3219AEE674A69F4EFC57BADB8201D SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x2572 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x25F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0x2682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275666665725365636F6E6473206D75737420626520696E666572696F722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F20696E74657276616C5365636F6E6473000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xE60149E0431FEC12DF63DFAB5FCE2A9CEFE9A4D3DF5F41CB626F579AE1F2B91A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 DUP5 SWAP1 PUSH2 0x2701 SWAP1 DUP8 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x273C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2739 SWAP1 DUP8 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x277E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x27A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27EC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2855 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x280A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A8B JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2892 DUP3 DUP12 PUSH2 0x4A8C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x28C9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x290D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xD PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2956 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29DD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2A6D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2A83 SWAP1 PUSH2 0x4B5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x285B JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2A98 DUP6 DUP12 PUSH2 0x4A8C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B26 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B5E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP5 DUP6 ADD MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x1C0 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP5 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0xB DUP5 ADD SLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xC DUP5 ADD SLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0xD SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP4 AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE SWAP3 SWAP4 POP EQ ISZERO PUSH2 0x2C43 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x2483 JUMP JUMPDEST DUP1 PUSH2 0x1A0 ADD MLOAD DUP1 ISZERO PUSH2 0x2C58 JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2C66 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x247E JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xA0 ADD MLOAD SGT DUP1 ISZERO PUSH2 0x2CBD JUMPI POP PUSH1 0x0 DUP3 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2CBB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x247E JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xA0 ADD MLOAD SLT DUP1 ISZERO PUSH2 0x247E JUMPI POP PUSH1 0x1 DUP3 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D11 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D23 PUSH2 0x3824 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2DFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742062652070726564696374696F6E20746F6B656E206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x2E20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER DUP4 PUSH2 0x3478 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x14F11966A996E0629572E51064726D2057A80FBD34EFC066682C06A71DBB6E98 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2E68 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2EF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2F72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC47D127C07BDD56C5CCBA00463CE3BD3C1BCA71B4670EEA6E5D0C02E4AA156E2 SWAP1 PUSH1 0x20 ADD PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x2FED PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x306E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x93CCACEAC092FFB842C46B8718667A13A80E9058DCD0BD403D0B47215B30DA07 SWAP1 PUSH1 0x20 ADD PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x30AB PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x312C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F720000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x31D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E6420697320747269676765726564000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3282 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2067656E657369734C6F636B526F756E64206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x328D PUSH2 0x391A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x32BD PUSH1 0xA SLOAD DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x3B14 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x32CB SWAP1 PUSH1 0x1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x32D9 SWAP1 PUSH2 0x37A6 JUMP JUMPDEST POP POP PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3355 PUSH2 0x3824 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x33F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x3401 DUP2 PUSH2 0x38A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x3471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x354C SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x4401 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3606 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3622 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT JUMPDEST DUP1 ISZERO PUSH2 0x2483 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x369F SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x34CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x3731 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x37C8 SWAP2 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH2 0x37DD SWAP2 PUSH2 0x4ADD JUMP JUMPDEST PUSH2 0x37E7 SWAP1 TIMESTAMP PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x0 PUSH1 0x8 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH32 0x939F42374AA9BF1D8D8CD56D8A9110CB040CD8DFEAE44080C6FCF2645E51B452 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC SLOAD TIMESTAMP PUSH2 0x392D SWAP2 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x399C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39D4 SWAP2 SWAP1 PUSH2 0x48CF JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP SWAP3 POP DUP4 DUP2 GT ISZERO PUSH2 0x3A6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C6520757064617465206578636565646564206D61782074696D6573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74616D7020616C6C6F77616E6365000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xB SLOAD DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3B09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C652075706461746520726F756E644964206D757374206265206C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72676572207468616E206F7261636C654C6174657374526F756E644964000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3BB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E6420616674657220726F756E6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6861732073746172746564000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x3C53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E64206166746572206C6F636B5469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D657374616D7000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3C72 SWAP2 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x3D01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E642077697468696E206275666665 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x725365636F6E6473000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 SLOAD PUSH2 0x3D1C SWAP1 TIMESTAMP PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE DUP4 SWAP1 DUP6 SWAP1 PUSH32 0x482E76A65B448A42DEEF26E99E58FB20C85E26F075DEFFF8DF6AA80459B39006 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3E0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E6420616674657220726F756E642068 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6173206C6F636B65640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x3EAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E6420616674657220636C6F73655469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D657374616D7000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3ECB SWAP2 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x3F5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E642077697468696E20627566666572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5365636F6E647300000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x7 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0xD DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0xB6FF1FE915DB84788CBBBC017F0D2BEF9485FAD9FD0BD8CE9340FDE0D8410DD8 SWAP1 PUSH2 0x3D5F SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x4008 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD ISZERO JUMPDEST PUSH2 0x406E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264732063616C63756C617465640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SGT ISZERO PUSH2 0x40D2 JUMPI DUP4 PUSH1 0x9 ADD SLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH1 0x8 ADD SLOAD PUSH2 0x40AF SWAP2 SWAP1 PUSH2 0x4ADD JUMP JUMPDEST PUSH2 0x40B9 SWAP2 SWAP1 PUSH2 0x4AA4 JUMP JUMPDEST SWAP2 POP DUP2 DUP5 PUSH1 0x8 ADD SLOAD PUSH2 0x40CB SWAP2 SWAP1 PUSH2 0x4B1A JUMP JUMPDEST SWAP1 POP PUSH2 0x410B JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD SLT ISZERO PUSH2 0x40FE JUMPI DUP4 PUSH1 0xA ADD SLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH1 0x8 ADD SLOAD PUSH2 0x40AF SWAP2 SWAP1 PUSH2 0x4ADD JUMP JUMPDEST POP POP POP PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0xB DUP5 ADD DUP4 SWAP1 SSTORE PUSH1 0xC DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x412E SWAP1 DUP5 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP6 SWAP1 PUSH32 0x6DFDFCB09C8804D0058826CD2539F1ACFBE3CB887C9BE03D928035BCE0F1A58D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4228 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E6420697320747269676765726564000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 PUSH2 0x4237 PUSH1 0x2 DUP5 PUSH2 0x4B1A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x42D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920737461727420726F756E6420616674657220726F756E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206E2D322068617320656E646564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 PUSH2 0x42E8 PUSH1 0x2 DUP5 PUSH2 0x4B1A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x4389 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79207374617274206E657720726F756E642061667465722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E64206E2D3220636C6F736554696D657374616D70000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x3401 DUP2 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x439A PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x377C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4463 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4510 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x4484 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4484 SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0x354C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x451F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4527 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x45B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x45E2 SWAP2 SWAP1 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x461F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4624 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4635 DUP8 DUP4 DUP4 DUP8 PUSH2 0x4640 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x46D3 JUMPI DUP3 MLOAD PUSH2 0x46CC JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x46CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST POP DUP2 PUSH2 0x451F JUMP JUMPDEST PUSH2 0x451F DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x46E8 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x4A3B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4770 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4779 DUP3 PUSH2 0x471C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4792 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x479B DUP4 PUSH2 0x471C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x47BD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x47C6 DUP5 PUSH2 0x471C JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47ED JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4804 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4817 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4825 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4839 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x485C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4779 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x487C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4895 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x48A5 PUSH1 0x20 DUP5 ADD PUSH2 0x471C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48C0 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x48E6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x48EF DUP7 PUSH2 0x4745 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x4912 PUSH1 0x80 DUP8 ADD PUSH2 0x4745 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x4955 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x496B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4B31 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP6 ADD SWAP1 DUP3 DUP10 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x49AF JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4993 JUMP JUMPDEST POP POP POP DUP5 DUP2 SUB DUP3 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE DUP8 DUP4 ADD SWAP2 DUP4 ADD SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A00 JUMPI DUP4 MLOAD PUSH2 0x49DC DUP5 DUP3 MLOAD PUSH2 0x491E JUMP JUMPDEST DUP1 DUP7 ADD MLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP5 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x49C7 JUMP JUMPDEST POP POP DUP1 SWAP5 POP POP POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x4A25 DUP3 DUP7 PUSH2 0x491E JUMP JUMPDEST DUP4 PUSH1 0x20 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4A5A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4B31 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4A9F JUMPI PUSH2 0x4A9F PUSH2 0x4B96 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4AD8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4B15 JUMPI PUSH2 0x4B15 PUSH2 0x4B96 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4B2C JUMPI PUSH2 0x4B2C PUSH2 0x4B96 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B4C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4B34 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x369F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4B8F JUMPI PUSH2 0x4B8F PUSH2 0x4B96 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E SLOAD 0xEF 0xD SWAP13 DUP10 EXTCODECOPY 0xD6 0x27 PUSH2 0x9A8 MSTORE 0xB8 EXTCODECOPY SSTORE TIMESTAMP EQ SIGNEXTEND 0xC0 MSIZE 0xC9 SWAP2 0xC9 PUSH15 0x90F408158F665364736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "598:23444:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11867:264;;;:::i;:::-;;5803:1039;;;;;;:::i;:::-;;:::i;798:35::-;;;;;;;;;;;;;;;6582:14:10;;6575:22;6557:41;;6545:2;6530:18;798:35:9;;;;;;;;939:30;;;;;;;;;;;;4146:42:10;4134:55;;;4116:74;;4104:2;4089:18;939:30:9;4071:125:10;16658:122:9;;;;;;:::i;:::-;16750:16;;16724:7;16750:16;;;:10;:16;;;;;:23;;16658:122;;;;7620:25:10;;;7608:2;7593:18;16658:122:9;7575:76:10;1348:29:9;;;;;;6924:1039;;;;;;:::i;:::-;;:::i;12358:190::-;;;:::i;11261:257::-;;;:::i;1615:84:2:-;1662:4;1685:7;;;;;;1615:84;;1573:36:9;;;;;;8074:1546;;;;;;:::i;:::-;;:::i;13182:258::-;;;;;;:::i;:::-;;:::i;15483:223::-;;;;;;:::i;:::-;;:::i;1824:101:1:-;;;:::i;1688:61:9:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1424:27::-;;;;;;14648:266;;;;;;:::i;:::-;;:::i;13858:374::-;;;;;;:::i;:::-;;:::i;9754:740::-;;;:::i;17694:388::-;;;;;;:::i;:::-;;:::i;1100:30::-;;;;;;756:35;;;;;;;;;11650:120;;;:::i;12652:446::-;;;;;;:::i;:::-;;:::i;1755:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25023:25:10;;;25079:2;25064:18;;25057:34;;;;25107:18;;;25100:34;;;;25165:2;25150:18;;25143:34;;;;25208:3;25193:19;;25186:35;;;;25252:3;25237:19;;25230:35;;;;25296:3;25281:19;;25274:35;;;;25340:3;25325:19;;25318:35;25384:3;25369:19;;25362:35;25428:3;25413:19;;25406:35;25472:3;25457:19;;25450:36;25517:3;25502:19;;25495:36;25562:3;25547:19;;25540:36;25620:15;25613:23;25607:3;25592:19;;25585:52;25010:3;24995:19;1755:39:9;24977:666:10;1201:85:1;1247:7;1273:6;;;1201:85;;15904:656:9;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;16936:601::-;;;;;;:::i;:::-;;:::i;15123:275::-;;;;;;:::i;:::-;;:::i;13528:244::-;;;;;;:::i;:::-;;:::i;1270:26::-;;;;;;14327:237;;;;;;:::i;:::-;;:::i;10583:579::-;;;:::i;1800:47::-;;;;;;:::i;:::-;;:::i;1003:28::-;;;;;;1496:34;;;;;;1627:47;;1670:4;1627:47;;2074:198:1;;;;;;:::i;:::-;;:::i;839:36:9:-;;;;;;;;;;;;1190:27;;;;;;700:29;;;;;882:27;;;;;;;;;11867:264;2261:21:3;:19;:21::i;:::-;3891:12:9::1;::::0;::::1;;3877:10;:26;3869:48;;;::::0;::::1;::::0;;23624:2:10;3869:48:9::1;::::0;::::1;23606:21:10::0;23663:1;23643:18;;;23636:29;23701:11;23681:18;;;23674:39;23730:18;;3869:48:9::1;;;;;;;;;11966:14:::2;::::0;;11934:29:::2;11990:18:::0;;;12037:12:::2;::::0;12018:55:::2;::::0;12037:12:::2;12018:5;:18:::0;::::2;::::0;12037:12:::2;11966:14:::0;12018:18:::2;:55::i;:::-;12088:36;::::0;7620:25:10;;;12088:36:9::2;::::0;7608:2:10;7593:18;12088:36:9::2;;;;;;;3927:1;2303:20:3::0;1716:1;2809:22;;2629:209;2303:20;11867:264:9:o;5803:1039::-;1239:19:2;:17;:19::i;:::-;2261:21:3::1;:19;:21::i;:::-;4296:10:9::2;23979:20:::0;24025:8;4275:57:::2;;;::::0;::::2;::::0;;11846:2:10;4275:57:9::2;::::0;::::2;11828:21:10::0;11885:2;11865:18;;;11858:30;11924:22;11904:18;;;11897:50;11964:18;;4275:57:9::2;11818:170:10::0;4275:57:9::2;4350:10;4364:9;4350:23;4342:62;;;::::0;::::2;::::0;;17977:2:10;4342:62:9::2;::::0;::::2;17959:21:10::0;18016:2;17996:18;;;17989:30;18055:28;18035:18;;;18028:56;18101:18;;4342:62:9::2;17949:176:10::0;4342:62:9::2;5949:12:::3;;5940:5;:21;5932:55;;;::::0;::::3;::::0;;22518:2:10;5932:55:9::3;::::0;::::3;22500:21:10::0;22557:2;22537:18;;;22530:30;22596:23;22576:18;;;22569:51;22637:18;;5932:55:9::3;22490:171:10::0;5932:55:9::3;6005:16;6015:5;6005:9;:16::i;:::-;5997:47;;;::::0;::::3;::::0;;18693:2:10;5997:47:9::3;::::0;::::3;18675:21:10::0;18732:2;18712:18;;;18705:30;18771:20;18751:18;;;18744:48;18809:18;;5997:47:9::3;18665:168:10::0;5997:47:9::3;6086:12;;6075:7;:23;;6054:114;;;::::0;::::3;::::0;;16111:2:10;6054:114:9::3;::::0;::::3;16093:21:10::0;16150:2;16130:18;;;16123:30;16189:34;16169:18;;;16162:62;16260:14;16240:18;;;16233:42;16292:19;;6054:114:9::3;16083:234:10::0;6054:114:9::3;6199:13;::::0;;;:6:::3;:13;::::0;;;;;;;6213:10:::3;6199:25:::0;;;;;;;:32:::3;;::::0;:37;6178:111:::3;;;::::0;::::3;::::0;;21391:2:10;6178:111:9::3;::::0;::::3;21373:21:10::0;21430:2;21410:18;;;21403:30;21469:29;21449:18;;;21442:57;21516:18;;6178:111:9::3;21363:177:10::0;6178:111:9::3;6300:58;:22;:5;:22;6323:10;6343:4;6350:7:::0;6300:22:::3;:58::i;:::-;6397:14;6453:13:::0;;;:6:::3;:13;::::0;;;;6496:17:::3;::::0;::::3;::::0;6414:7;;6453:13;6496:26:::3;::::0;6414:7;;6496:26:::3;:::i;:::-;6476:17;::::0;::::3;:46:::0;6551:16:::3;::::0;::::3;::::0;:25:::3;::::0;6570:6;;6551:25:::3;:::i;:::-;6532:16;::::0;::::3;:44:::0;6615:23:::3;6641:13:::0;;;:6:::3;:13;::::0;;;;;;;6655:10:::3;6641:25:::0;;;;;;;;;6676:32;;;::::3;6695:13;6676:32:::0;;::::3;::::0;;6718:14;;::::3;:23:::0;;;6751:10:::3;:22:::0;;;;;:34;;;;::::3;::::0;;;;;;;;;;::::3;::::0;;;6801;;7620:25:10;;;6641:13:9;;6801:34:::3;::::0;7593:18:10;6801:34:9::3;;;;;;;;4414:1;;;2303:20:3::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;5803:1039:9::0;;:::o;6924:::-;1239:19:2;:17;:19::i;:::-;2261:21:3::1;:19;:21::i;:::-;4296:10:9::2;23979:20:::0;24025:8;4275:57:::2;;;::::0;::::2;::::0;;11846:2:10;4275:57:9::2;::::0;::::2;11828:21:10::0;11885:2;11865:18;;;11858:30;11924:22;11904:18;;;11897:50;11964:18;;4275:57:9::2;11818:170:10::0;4275:57:9::2;4350:10;4364:9;4350:23;4342:62;;;::::0;::::2;::::0;;17977:2:10;4342:62:9::2;::::0;::::2;17959:21:10::0;18016:2;17996:18;;;17989:30;18055:28;18035:18;;;18028:56;18101:18;;4342:62:9::2;17949:176:10::0;4342:62:9::2;7070:12:::3;;7061:5;:21;7053:55;;;::::0;::::3;::::0;;22518:2:10;7053:55:9::3;::::0;::::3;22500:21:10::0;22557:2;22537:18;;;22530:30;22596:23;22576:18;;;22569:51;22637:18;;7053:55:9::3;22490:171:10::0;7053:55:9::3;7126:16;7136:5;7126:9;:16::i;:::-;7118:47;;;::::0;::::3;::::0;;18693:2:10;7118:47:9::3;::::0;::::3;18675:21:10::0;18732:2;18712:18;;;18705:30;18771:20;18751:18;;;18744:48;18809:18;;7118:47:9::3;18665:168:10::0;7118:47:9::3;7207:12;;7196:7;:23;;7175:114;;;::::0;::::3;::::0;;16111:2:10;7175:114:9::3;::::0;::::3;16093:21:10::0;16150:2;16130:18;;;16123:30;16189:34;16169:18;;;16162:62;16260:14;16240:18;;;16233:42;16292:19;;7175:114:9::3;16083:234:10::0;7175:114:9::3;7320:13;::::0;;;:6:::3;:13;::::0;;;;;;;7334:10:::3;7320:25:::0;;;;;;;:32:::3;;::::0;:37;7299:111:::3;;;::::0;::::3;::::0;;21391:2:10;7299:111:9::3;::::0;::::3;21373:21:10::0;21430:2;21410:18;;;21403:30;21469:29;21449:18;;;21442:57;21516:18;;7299:111:9::3;21363:177:10::0;7299:111:9::3;7421:58;:22;:5;:22;7444:10;7464:4;7471:7:::0;7421:22:::3;:58::i;:::-;7518:14;7574:13:::0;;;:6:::3;:13;::::0;;;;7617:17:::3;::::0;::::3;::::0;7535:7;;7574:13;7617:26:::3;::::0;7535:7;;7617:26:::3;:::i;:::-;7597:17;::::0;::::3;:46:::0;7672:16:::3;::::0;::::3;::::0;:25:::3;::::0;7691:6;;7672:25:::3;:::i;:::-;7653:16;::::0;::::3;:44:::0;7736:23:::3;7762:13:::0;;;:6:::3;:13;::::0;;;;;;;7776:10:::3;7762:25:::0;;;;;;;;;7797:32;;;::::3;::::0;;;7839:14;;::::3;:23:::0;;;7872:10:::3;:22:::0;;;;;:34;;;;::::3;::::0;;;;;;;;;;::::3;::::0;;;7922;;7620:25:10;;;7762:13:9;;7922:34:::3;::::0;7593:18:10;7922:34:9::3;7575:76:10::0;12358:190:9;1486:16:2;:14;:16::i;:::-;4017:12:9::1;::::0;::::1;;4003:10;:26;::::0;:59:::1;;-1:-1:-1::0;4047:15:9::1;::::0;::::1;;4033:10;:29;4003:59;3982:124;;;::::0;::::1;::::0;;13796:2:10;3982:124:9::1;::::0;::::1;13778:21:10::0;13835:2;13815:18;;;13808:30;13874:20;13854:18;;;13847:48;13912:18;;3982:124:9::1;13768:168:10::0;3982:124:9::1;12427:16:::2;:24:::0;;12461:23;;;;12494:10:::2;:8;:10::i;:::-;12528:12;::::0;12520:21:::2;::::0;::::2;::::0;;;::::2;12358:190::o:0;11261:257::-;1239:19:2;:17;:19::i;:::-;4186:15:9::1;::::0;::::1;;4172:10;:29;4164:54;;;::::0;::::1;::::0;;23283:2:10;4164:54:9::1;::::0;::::1;23265:21:10::0;23322:2;23302:18;;;23295:30;23361:14;23341:18;;;23334:42;23393:18;;4164:54:9::1;23255:162:10::0;4164:54:9::1;11345:16:::2;::::0;;;::::2;;;11344:17;11336:65;;;::::0;::::2;::::0;;19450:2:10;11336:65:9::2;::::0;::::2;19432:21:10::0;19489:2;19469:18;;;19462:30;19528:34;19508:18;;;19501:62;19599:5;19579:18;;;19572:33;19622:19;;11336:65:9::2;19422:225:10::0;11336:65:9::2;11427:12;::::0;:16:::2;::::0;11442:1:::2;11427:16;:::i;:::-;11412:12;:31:::0;;;11453:25:::2;::::0;:11:::2;:25::i;:::-;11488:16;:23:::0;;;::::2;::::0;::::2;::::0;;11261:257::o;8074:1546::-;2261:21:3;:19;:21::i;:::-;4296:10:9::1;23979:20:::0;24025:8;4275:57:::1;;;::::0;::::1;::::0;;11846:2:10;4275:57:9::1;::::0;::::1;11828:21:10::0;11885:2;11865:18;;;11858:30;11924:22;11904:18;;;11897:50;11964:18;;4275:57:9::1;11818:170:10::0;4275:57:9::1;4350:10;4364:9;4350:23;4342:62;;;::::0;::::1;::::0;;17977:2:10;4342:62:9::1;::::0;::::1;17959:21:10::0;18016:2;17996:18;;;17989:30;18055:28;18035:18;;;18028:56;18101:18;;4342:62:9::1;17949:176:10::0;4342:62:9::1;8174:14:::2;::::0;8221:1304:::2;8241:17:::0;;::::2;8221:1304;;;8304:6;:17;8311:6;;8318:1;8311:9;;;;;;;;;;;;;;;;;;;;;8304:17;;;;;;;;;;;:32;;;8340:1;8304:37;;8279:117;;;::::0;::::2;::::0;;21041:2:10;8279:117:9::2;::::0;::::2;21023:21:10::0;21080:2;21060:18;;;21053:30;21119:23;21099:18;;;21092:51;21160:18;;8279:117:9::2;21013:171:10::0;8279:117:9::2;8453:6;:17;8460:6;;8467:1;8460:9;;;;;;;;;;;;;;;;;;;;;8453:17;;;;;;;;;;;:32;;;8435:15;:50;8410:128;;;::::0;::::2;::::0;;16524:2:10;8410:128:9::2;::::0;::::2;16506:21:10::0;16563:2;16543:18;;;16536:30;16602:21;16582:18;;;16575:49;16641:18;;8410:128:9::2;16496:169:10::0;8410:128:9::2;8553:19;8637:6;:17;8644:6;;8651:1;8644:9;;;;;;;;;;;;;;;;::::0;;::::2;::::0;;;::::2;;8637:17:::0;;-1:-1:-1;8637:17:9;::::2;::::0;;;;;;-1:-1:-1;8637:17:9;:30:::2;;::::0;::::2;;8633:727;;;8716:32;8726:6;;8733:1;8726:9;;;;;;;;;;;;;;;;;;;;;8737:10;8716:9;:32::i;:::-;8687:125;;;::::0;::::2;::::0;;12613:2:10;8687:125:9::2;::::0;::::2;12595:21:10::0;12652:2;12632:18;;;12625:30;12691:24;12671:18;;;12664:52;12733:18;;8687:125:9::2;12585:172:10::0;8687:125:9::2;8830:18;8851:6;:17;8858:6;;8865:1;8858:9;;;;;;;;;;;;;;;;;;;;;8851:17;;;;;;;;;;;8830:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;9026:5;:25;;;8984:5;:18;;;8921:6;:17;8928:6;;8935:1;8928:9;;;;;;;;;;;;;;;;;;;;;8921:17;;;;;;;;;;;:29;8939:10;8921:29;;;;;;;;;;;;;;;:36;;;:81;;;;:::i;:::-;8920:131;;;;:::i;:::-;8886:165;;8633:727;;;;9179:33;9190:6;;9197:1;9190:9;;;;;;;;;;;;;;;;;;;;;9201:10;9179;:33::i;:::-;9150:127;;;::::0;::::2;::::0;;8654:2:10;9150:127:9::2;::::0;::::2;8636:21:10::0;8693:2;8673:18;;;8666:30;8732:25;8712:18;;;8705:53;8775:18;;9150:127:9::2;8626:173:10::0;9150:127:9::2;9309:6;:17;9316:6;;9323:1;9316:9;;;;;;;;;;;;;;;;;;;;;9309:17;;;;;;;;;;;:29;9327:10;9309:29;;;;;;;;;;;;;;;:36;;;9295:50;;8633:727;9414:4;9374:6;:17;9381:6;;9388:1;9381:9;;;;;;;;;;;;;;;;::::0;;::::2;::::0;;;::::2;;9374:17:::0;;-1:-1:-1;9374:17:9;;::::2;::::0;;;;;;;;-1:-1:-1;9374:17:9;;;9392:10:::2;9374:29:::0;;;;;;;:37:::2;;:44:::0;;;::::2;::::0;::::2;;::::0;;;::::2;::::0;;9432:21:::2;9442:11:::0;9432:21;::::2;:::i;:::-;;;9491:6;;9498:1;9491:9;;;;;;;;;;;;;;;;;;;;;9479:10;9473:41;;;9502:11;9473:41;;;;7620:25:10::0;;7608:2;7593:18;;7575:76;9473:41:9::2;;;;;;;;-1:-1:-1::0;8260:3:9;::::2;::::0;::::2;:::i;:::-;;;;8221:1304;;;-1:-1:-1::0;9539:10:9;;9535:79:::2;;9565:38;:18;:5;:18;9584:10;9596:6:::0;9565:18:::2;:38::i;:::-;4414:1;2303:20:3::0;1716:1;2809:22;;2629:209;13182:258:9;1486:16:2;:14;:16::i;:::-;3891:12:9::1;::::0;::::1;;3877:10;:26;3869:48;;;::::0;::::1;::::0;;23624:2:10;3869:48:9::1;::::0;::::1;23606:21:10::0;23663:1;23643:18;;;23636:29;23701:11;23681:18;;;23674:39;23730:18;;3869:48:9::1;23596:158:10::0;3869:48:9::1;13292:18:::0;13284:52:::2;;;::::0;::::2;::::0;;19854:2:10;13284:52:9::2;::::0;::::2;19836:21:10::0;19893:2;19873:18;;;19866:30;19932:23;19912:18;;;19905:51;19973:18;;13284:52:9::2;19826:171:10::0;13284:52:9::2;13346:12;:28:::0;;;13406:12:::2;::::0;13390:43:::2;::::0;7620:25:10;;;13390:43:9::2;::::0;7608:2:10;7593:18;13390:43:9::2;;;;;;;;13182:258:::0;:::o;15483:223::-;1094:13:1;:11;:13::i;:::-;15561:27:9::1;::::0;::::1;15553:62;;;::::0;::::1;::::0;;17626:2:10;15553:62:9::1;::::0;::::1;17608:21:10::0;17665:2;17645:18;;;17638:30;17704:24;17684:18;;;17677:52;17746:18;;15553:62:9::1;17598:172:10::0;15553:62:9::1;15625:12;:28:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;15669:30:::1;::::0;4116:74:10;;;15669:30:9::1;::::0;4104:2:10;4089:18;15669:30:9::1;;;;;;;;15483:223:::0;:::o;1824:101:1:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;14648:266:9:-:0;1486:16:2;:14;:16::i;:::-;3891:12:9::1;::::0;::::1;;3877:10;:26;3869:48;;;::::0;::::1;::::0;;23624:2:10;3869:48:9::1;::::0;::::1;23606:21:10::0;23663:1;23643:18;;;23636:29;23701:11;23681:18;;;23674:39;23730:18;;3869:48:9::1;23596:158:10::0;3869:48:9::1;1670:4:::2;14756:12;:32;;14748:66;;;::::0;::::2;::::0;;9006:2:10;14748:66:9::2;::::0;::::2;8988:21:10::0;9045:2;9025:18;;;9018:30;9084:23;9064:18;;;9057:51;9125:18;;14748:66:9::2;8978:171:10::0;14748:66:9::2;14824:11;:26:::0;;;14881:12:::2;::::0;14866:41:::2;::::0;7620:25:10;;;14866:41:9::2;::::0;7608:2:10;7593:18;14866:41:9::2;7575:76:10::0;13858:374:9;1486:16:2;:14;:16::i;:::-;3891:12:9::1;::::0;::::1;;3877:10;:26;3869:48;;;::::0;::::1;::::0;;23624:2:10;3869:48:9::1;::::0;::::1;23606:21:10::0;23663:1;23643:18;;;23636:29;23701:11;23681:18;;;23674:39;23730:18;;3869:48:9::1;23596:158:10::0;3869:48:9::1;13942:21:::2;::::0;::::2;13934:56;;;::::0;::::2;::::0;;17626:2:10;13934:56:9::2;::::0;::::2;17608:21:10::0;17665:2;17645:18;;;17638:30;17704:24;17684:18;;;17677:52;17746:18;;13934:56:9::2;17598:172:10::0;13934:56:9::2;14022:1;14000:19;:23:::0;14033:6:::2;:39:::0;;;::::2;;::::0;::::2;::::0;;::::2;::::0;;;14167:24:::2;::::0;;;;;;;:22:::2;::::0;:24:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;14033:39;14167:24;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;14207:18:9::2;::::0;4146:42:10;4134:55;;4116:74;;14207:18:9::2;::::0;-1:-1:-1;4104:2:10;4089:18;;-1:-1:-1;14207:18:9::2;::::0;-1:-1:-1;4071:125:10;9754:740:9;1239:19:2;:17;:19::i;:::-;4186:15:9::1;::::0;::::1;;4172:10;:29;4164:54;;;::::0;::::1;::::0;;23283:2:10;4164:54:9::1;::::0;::::1;23265:21:10::0;23322:2;23302:18;;;23295:30;23361:14;23341:18;;;23334:42;23393:18;;4164:54:9::1;23255:162:10::0;4164:54:9::1;9845:16:::2;::::0;;;::::2;;;:35:::0;::::2;;;-1:-1:-1::0;9865:15:9::2;::::0;;;::::2;;;9845:35;9824:152;;;::::0;::::2;::::0;;20204:2:10;9824:152:9::2;::::0;::::2;20186:21:10::0;20243:2;20223:18;;;20216:30;20282:34;20262:18;;;20255:62;20353:34;20333:18;;;20326:62;20425:8;20404:19;;;20397:37;20451:19;;9824:152:9::2;20176:300:10::0;9824:152:9::2;9988:21;10011:19:::0;10034:21:::2;:19;:21::i;:::-;9987:68;;;;10096:14;10088:23;;10066:19;:45;;;;10177:58;10192:12;;10206:14;10177:58;;10222:12;10177:14;:58::i;:::-;10245:61;10274:1;10259:12;;:16;;;;:::i;:::-;10277:14;10245:61;;10293:12;10245:13;:61::i;:::-;10316:35;10349:1;10334:12;;:16;;;;:::i;:::-;10316:17;:35::i;:::-;10432:12;::::0;:16:::2;::::0;10447:1:::2;10432:16;:::i;:::-;10417:12;:31:::0;;;10458:29:::2;::::0;:15:::2;:29::i;17694:388::-:0;17786:4;17827:13;;;:6;:13;;;;;;;;:19;;;;;;;;;;;17802:44;;;;;;;;;;17786:4;;17802:44;17827:19;17802:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17877:13:9;;;:6;:13;;;;;17856:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17802:44;17856:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17802:44;;-1:-1:-1;17856:34:9;;17919:51;;;17955:7;:15;;;17954:16;17919:51;:121;;;;;18027:13;;18004:5;:20;;;:36;;;;:::i;:::-;17986:15;:54;17919:121;:156;;;;-1:-1:-1;18056:14:9;;;;:19;;17919:156;17900:175;;;;17694:388;;;;;:::o;11650:120::-;1239:19:2;:17;:19::i;:::-;4017:12:9::1;::::0;::::1;;4003:10;:26;::::0;:59:::1;;-1:-1:-1::0;4047:15:9::1;::::0;::::1;;4033:10;:29;4003:59;3982:124;;;::::0;::::1;::::0;;13796:2:10;3982:124:9::1;::::0;::::1;13778:21:10::0;13835:2;13815:18;;;13808:30;13874:20;13854:18;;;13847:48;13912:18;;3982:124:9::1;13768:168:10::0;3982:124:9::1;11720:8:::2;:6;:8::i;:::-;11750:12;::::0;11744:19:::2;::::0;::::2;::::0;;;::::2;11650:120::o:0;12652:446::-;1486:16:2;:14;:16::i;:::-;3891:12:9::1;::::0;::::1;;3877:10;:26;3869:48;;;::::0;::::1;::::0;;23624:2:10;3869:48:9::1;::::0;::::1;23606:21:10::0;23663:1;23643:18;;;23636:29;23701:11;23681:18;;;23674:39;23730:18;;3869:48:9::1;23596:158:10::0;3869:48:9::1;12839:16:::2;12822:14;:33;12801:129;;;::::0;::::2;::::0;;12195:2:10;12801:129:9::2;::::0;::::2;12177:21:10::0;12234:2;12214:18;;;12207:30;12273:34;12253:18;;;12246:62;12344:19;12324:18;;;12317:47;12381:19;;12801:129:9::2;12167:239:10::0;12801:129:9::2;12940:13;:30:::0;;;12980:15:::2;:34:::0;;;13030:61:::2;::::0;;24115:25:10;;;24171:2;24156:18;;24149:34;;;13030:61:9::2;::::0;24088:18:10;13030:61:9::2;;;;;;;12652:446:::0;;:::o;15904:656::-;16124:16;;;16060:7;16124:16;;;:10;:16;;;;;:23;16024:16;;;;16096:4;;16124:32;;16150:6;;16124:32;:::i;:::-;16115:6;:41;16111:113;;;16181:16;;;;;;;:10;:16;;;;;:23;:32;;16207:6;;16181:32;:::i;:::-;16172:41;;16111:113;16234:23;16274:6;16260:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16260:21:9;;16234:47;;16291:24;16332:6;16318:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;16318:21:9;;;;;;;;;;;;;;;16291:48;;16355:9;16350:152;16374:6;16370:1;:10;16350:152;;;16413:16;;;;;;;:10;:16;;;;;16430:10;16439:1;16430:6;:10;:::i;:::-;16413:28;;;;;;;;;;;;;;;;;;;;;;;;16401:6;16408:1;16401:9;;;;;;;;;;;;;;;;;;;;;:40;;;;;16468:6;:17;16475:6;16482:1;16475:9;;;;;;;;;;;;;;;;;;;;;;;;;;;16468:17;;;;;;;;;;;;;-1:-1:-1;16468:17:9;;;:23;;;;;;;;;;;;16455:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;:7;;16463:1;;16455:10;;;;;;;;;;;;;;;;;;;:36;;;;16382:3;;;;;:::i;:::-;;;;16350:152;;;-1:-1:-1;16520:6:9;16528:7;16537:15;16546:6;16537;:15;:::i;:::-;16512:41;;;;;;;;;15904:656;;;;;;;:::o;16936:601::-;17005:4;17046:13;;;:6;:13;;;;;;;;:19;;;;;;;;;;;17021:44;;;;;;;;;;17005:4;;17021:44;17046:19;17021:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17096:13:9;;;:6;:13;;;;;17075:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17021:44;17075:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17021:44;;-1:-1:-1;17123:35:9;17119:78;;;17181:5;17174:12;;;;;;17119:78;17225:5;:18;;;:53;;;;-1:-1:-1;17259:14:9;;;;:19;;17225:53;:85;;;;;17295:7;:15;;;17294:16;17225:85;:305;;;;;17347:5;:15;;;17328:5;:16;;;:34;:87;;;;-1:-1:-1;17402:13:9;17382:16;;:33;;;;;;;;;;;;;;;;;17328:87;17327:202;;;;17456:5;:15;;;17437:5;:16;;;:34;:91;;;;-1:-1:-1;17515:13:9;17495:16;;:33;;;;;;;;;;;;;;;;;;16936:601;-1:-1:-1;;;;;16936:601:9:o;15123:275::-;1094:13:1;:11;:13::i;:::-;15233:5:9::1;15215:24;;:6;:24;;;;15207:71;;;::::0;::::1;::::0;;15708:2:10;15207:71:9::1;::::0;::::1;15690:21:10::0;15747:2;15727:18;;;15720:30;15786:34;15766:18;;;15759:62;15857:4;15837:18;;;15830:32;15879:19;;15207:71:9::1;15680:224:10::0;15207:71:9::1;15288:57;:27;::::0;::::1;15324:10;15337:7:::0;15288:27:::1;:57::i;:::-;15375:6;15361:30;;;15383:7;15361:30;;;;7620:25:10::0;;7608:2;7593:18;;7575:76;15361:30:9::1;;;;;;;;15123:275:::0;;:::o;13528:244::-;3891:12;;;;3877:10;:26;3869:48;;;;;;;23624:2:10;3869:48:9;;;23606:21:10;23663:1;23643:18;;;23636:29;23701:11;23681:18;;;23674:39;23730:18;;3869:48:9;23596:158:10;3869:48:9;13612:30:::1;::::0;::::1;13604:65;;;::::0;::::1;::::0;;17626:2:10;13604:65:9::1;::::0;::::1;17608:21:10::0;17665:2;17645:18;;;17638:30;17704:24;17684:18;;;17677:52;17746:18;;13604:65:9::1;17598:172:10::0;13604:65:9::1;13679:15;:34:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;13729:36:::1;::::0;4116:74:10;;;13729:36:9::1;::::0;4104:2:10;4089:18;13729:36:9::1;4071:125:10::0;14327:237:9;1486:16:2;:14;:16::i;:::-;3891:12:9::1;::::0;::::1;;3877:10;:26;3869:48;;;::::0;::::1;::::0;;23624:2:10;3869:48:9::1;::::0;::::1;23606:21:10::0;23663:1;23643:18;;;23636:29;23701:11;23681:18;;;23674:39;23730:18;;3869:48:9::1;23596:158:10::0;3869:48:9::1;14447:21:::2;:46:::0;;;14509:48:::2;::::0;7620:25:10;;;14509:48:9::2;::::0;7608:2:10;7593:18;14509:48:9::2;7575:76:10::0;10583:579:9;1239:19:2;:17;:19::i;:::-;4186:15:9::1;::::0;::::1;;4172:10;:29;4164:54;;;::::0;::::1;::::0;;23283:2:10;4164:54:9::1;::::0;::::1;23265:21:10::0;23322:2;23302:18;;;23295:30;23361:14;23341:18;;;23334:42;23393:18;;4164:54:9::1;23255:162:10::0;4164:54:9::1;10678:16:::2;::::0;;;::::2;;;10657:112;;;::::0;::::2;::::0;;9768:2:10;10657:112:9::2;::::0;::::2;9750:21:10::0;9807:2;9787:18;;;9780:30;9846:34;9826:18;;;9819:62;9917:19;9897:18;;;9890:47;9954:19;;10657:112:9::2;9740:239:10::0;10657:112:9::2;10788:15;::::0;;;::::2;;;10787:16;10779:63;;;::::0;::::2;::::0;;14143:2:10;10779:63:9::2;::::0;::::2;14125:21:10::0;14182:2;14162:18;;;14155:30;14221:34;14201:18;;;14194:62;14292:4;14272:18;;;14265:32;14314:19;;10779:63:9::2;14115:224:10::0;10779:63:9::2;10854:21;10877:19:::0;10900:21:::2;:19;:21::i;:::-;10853:68;;;;10962:14;10954:23;;10932:19;:45;;;;10988:58;11003:12;;11017:14;10988:58;;11033:12;10988:14;:58::i;:::-;11072:12;::::0;:16:::2;::::0;11087:1:::2;11072:16;:::i;:::-;11057:12;:31:::0;;;11098:25:::2;::::0;:11:::2;:25::i;:::-;-1:-1:-1::0;;11133:15:9::2;:22:::0;;;::::2;::::0;::::2;::::0;;10583:579::o;1800:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2074:198:1:-;1094:13;:11;:13::i;:::-;2162:22:::1;::::0;::::1;2154:73;;;::::0;::::1;::::0;;10186:2:10;2154:73:1::1;::::0;::::1;10168:21:10::0;10225:2;10205:18;;;10198:30;10264:34;10244:18;;;10237:62;10335:8;10315:18;;;10308:36;10361:19;;2154:73:1::1;10158:228:10::0;2154:73:1::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;2336:287:3:-;1759:1;2468:7;;:19;;2460:63;;;;;;;22158:2:10;2460:63:3;;;22140:21:10;22197:2;22177:18;;;22170:30;22236:33;22216:18;;;22209:61;22287:18;;2460:63:3;22130:181:10;2460:63:3;1759:1;2598:7;:18;2336:287::o;941:175:6:-;1050:58;;4808:42:10;4796:55;;1050:58:6;;;4778:74:10;4868:18;;;4861:34;;;1023:86:6;;1043:5;;1073:23;;4751:18:10;;1050:58:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;1767:106:2:-;1662:4;1685:7;;;;;;1836:9;1828:38;;;;;;;17281:2:10;1828:38:2;;;17263:21:10;17320:2;17300:18;;;17293:30;17359:18;17339;;;17332:46;17395:18;;1828:38:2;17253:166:10;22686:303:9;22743:4;22778:13;;;:6;:13;;;;;:28;;;:33;;;;:81;;-1:-1:-1;22827:13:9;;;;:6;:13;;;;;:27;;;:32;;22778:81;:143;;;;-1:-1:-1;22893:13:9;;;;:6;:13;;;;;:28;;;22875:15;:46;22778:143;:204;;;;-1:-1:-1;;22955:13:9;;;;:6;:13;;;;;:27;;;22937:15;:45;;22686:303::o;1355:203:6:-;1482:68;;4413:42:10;4482:15;;;1482:68:6;;;4464:34:10;4534:15;;4514:18;;;4507:43;4566:18;;;4559:34;;;1455:96:6;;1475:5;;1505:27;;4376:18:10;;1482:68:6;4358:241:10;1455:96:6;1355:203;;;;:::o;1945:106:2:-;1662:4;1685:7;;;;;;2003:41;;;;;;;8305:2:10;2003:41:2;;;8287:21:10;8344:2;8324:18;;;8317:30;8383:22;8363:18;;;8356:50;8423:18;;2003:41:2;8277:170:10;2433:117:2;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;;::::1;::::0;;2521:22:::1;734:10:8::0;2530:12:2::1;2521:22;::::0;4146:42:10;4134:55;;;4116:74;;4104:2;4089:18;2521:22:2::1;;;;;;;2433:117::o:0;22109:375:9:-;22164:19;22186:13;;;:6;:13;;;;;22232:15;22209:20;;;:38;;;22297:15;;22279:33;;;:::i;:::-;22257:19;;;;:55;;;;22368:15;;22364:19;;;:::i;:::-;22345:39;;:15;:39;:::i;:::-;22322:20;;;:62;22394:19;;;:11;22423:17;;;:21;;;22460:17;;22408:5;;22460:17;;;22109:375;;:::o;1359:130:1:-;1247:7;1273:6;1422:23;1273:6;734:10:8;1422:23:1;1414:68;;;;;;;18332:2:10;1414:68:1;;;18314:21:10;;;18351:18;;;18344:30;18410:34;18390:18;;;18383:62;18462:18;;1414:68:1;18304:182:10;2426:187:1;2499:16;2518:6;;;2534:17;;;;;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2426:187;;:::o;23145:587:9:-;23199:6;23207;23225:29;23275:21;;23257:15;:39;;;;:::i;:::-;23225:71;;23307:14;23323:12;23339:17;23362:6;;;;;;;;;;;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23306:93;;;;;;;;23443:21;23430:9;:34;;23409:127;;;;;;;22868:2:10;23409:127:9;;;22850:21:10;22907:2;22887:18;;;22880:30;22946:34;22926:18;;;22919:62;23017:16;22997:18;;;22990:44;23051:19;;23409:127:9;22840:236:10;23409:127:9;23586:19;;23575:7;23567:16;;:38;23546:146;;;;;;;11008:2:10;23546:146:9;;;10990:21:10;11047:2;11027:18;;;11020:30;11086:34;11066:18;;;11059:62;11157:31;11137:18;;;11130:59;11206:19;;23546:146:9;10980:251:10;23546:146:9;-1:-1:-1;23710:7:9;;23719:5;;-1:-1:-1;23145:587:9;-1:-1:-1;;23145:587:9:o;20588:790::-;20728:13;;;;:6;:13;;;;;:28;;;20707:123;;;;;;;9356:2:10;20707:123:9;;;9338:21:10;9395:2;9375:18;;;9368:30;9434:34;9414:18;;;9407:62;9505:13;9485:18;;;9478:41;9536:19;;20707:123:9;9328:233:10;20707:123:9;20880:13;;;;:6;:13;;;;;:27;;;20861:15;:46;;20840:132;;;;;;;12964:2:10;20840:132:9;;;12946:21:10;13003:2;12983:18;;;12976:30;13042:34;13022:18;;;13015:62;13113:9;13093:18;;;13086:37;13140:19;;20840:132:9;12936:229:10;20840:132:9;21052:13;;21022;;;;:6;:13;;;;;:27;;;:43;;21052:13;21022:43;:::i;:::-;21003:15;:62;;20982:149;;;;;;;16872:2:10;20982:149:9;;;16854:21:10;16911:2;16891:18;;;16884:30;16950:34;16930:18;;;16923:62;17021:10;17001:18;;;16994:38;17049:19;;20982:149:9;16844:230:10;20982:149:9;21141:19;21163:13;;;:6;:13;;;;;21227:15;;21209:33;;:15;:33;:::i;:::-;21186:20;;;:56;21252:15;;;:23;;;21285:18;;;:28;;;21329:42;;7620:25:10;;;21285:28:9;;21339:5;;21329:42;;7608:2:10;7593:18;21329:42:9;;;;;;;;20588:790;;;;:::o;19684:758::-;19823:13;;;;:6;:13;;;;;:27;;;19802:120;;;;;;;19040:2:10;19802:120:9;;;19022:21:10;19079:2;19059:18;;;19052:30;19118:34;19098:18;;;19091:62;19189:11;19169:18;;;19162:39;19218:19;;19802:120:9;19012:231:10;19802:120:9;19972:13;;;;:6;:13;;;;;:28;;;19953:15;:47;;19932:133;;;;;;;14953:2:10;19932:133:9;;;14935:21:10;14992:2;14972:18;;;14965:30;15031:34;15011:18;;;15004:62;15102:9;15082:18;;;15075:37;15129:19;;19932:133:9;14925:229:10;19932:133:9;20146:13;;20115;;;;:6;:13;;;;;:28;;;:44;;20146:13;20115:44;:::i;:::-;20096:15;:63;;20075:149;;;;;;;11438:2:10;20075:149:9;;;11420:21:10;11477:2;11457:18;;;11450:30;11516:34;11496:18;;;11489:62;11587:9;11567:18;;;11560:37;11614:19;;20075:149:9;11410:229:10;20075:149:9;20234:19;20256:13;;;:6;:13;;;;;;;20279:16;;;:24;;;20313:19;;;:29;;;20352:18;;;:25;;;;20373:4;20352:25;;;20393:42;;20335:7;;20263:5;;20393:42;;;;20298:5;7620:25:10;;7608:2;7593:18;;7575:76;18174:1365:9;18256:13;;;;:6;:13;;;;;:33;;;:38;:89;;;;-1:-1:-1;18314:13:9;;;;:6;:13;;;;;:26;;;:31;18256:89;18235:154;;;;;;;15361:2:10;18235:154:9;;;15343:21:10;15400:2;15380:18;;;15373:30;15439:20;15419:18;;;15412:48;15477:18;;18235:154:9;15333:168:10;18235:154:9;18399:19;18421:13;;;:6;:13;;;;;18585:15;;;;18566:16;;;;18421:13;;18399:19;;;;;18566:34;18562:658;;;18638:5;:16;;;18616:38;;18718:5;18703:11;;18683:5;:17;;;:31;;;;:::i;:::-;18682:41;;;;:::i;:::-;18668:55;;18772:11;18752:5;:17;;;:31;;;;:::i;:::-;18737:46;;18562:658;;;18852:5;:15;;;18833:5;:16;;;:34;18829:391;;;18905:5;:16;;;18883:38;;18985:5;18970:11;;18950:5;:17;;;:31;;;;:::i;18829:391::-;-1:-1:-1;;;19192:17:9;;;;19133:1;;;18829:391;19229:25;;;:47;;;19286:18;;;:33;;;19357:14;:29;;19375:11;;19357:14;-1:-1:-1;;19357:29:9;;19375:11;;19357:29;:::i;:::-;;;;-1:-1:-1;;19402:130:9;;;24396:25:10;;;24452:2;24437:18;;24430:34;;;24480:18;;;24473:34;;;19433:5:9;;19402:130;;24384:2:10;24369:18;19402:130:9;;;;;;;18174:1365;;;;;:::o;21489:509::-;21569:16;;;;;;;21548:112;;;;;;;9768:2:10;21548:112:9;;;9750:21:10;9807:2;9787:18;;;9780:30;9846:34;9826:18;;;9819:62;9917:19;9897:18;;;9890:47;9954:19;;21548:112:9;9740:239:10;21548:112:9;21691:6;:17;21698:9;21706:1;21698:5;:9;:::i;:::-;21691:17;;;;;;;;;;;:32;;;21727:1;21691:37;;21670:130;;;;;;;10593:2:10;21670:130:9;;;10575:21:10;10632:2;10612:18;;;10605:30;10671:34;10651:18;;;10644:62;10742:16;10722:18;;;10715:44;10776:19;;21670:130:9;10565:236:10;21670:130:9;21850:6;:17;21857:9;21865:1;21857:5;:9;:::i;:::-;21850:17;;;;;;;;;;;:32;;;21831:15;:51;;21810:153;;;;;;;13372:2:10;21810:153:9;;;13354:21:10;13411:2;13391:18;;;13384:30;13450:34;13430:18;;;13423:62;13521:25;13501:18;;;13494:53;13564:19;;21810:153:9;13344:245:10;21810:153:9;21973:18;21985:5;21973:11;:18::i;2186:115:2:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;;::::1;::::0;::::1;::::0;;2274:20:::1;2281:12;734:10:8::0;;655:96;5196:642:6;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;;;;21747:2:10;5720:111:6;;;21729:21:10;21786:2;21766:18;;;21759:30;21825:34;21805:18;;;21798:62;21896:12;21876:18;;;21869:40;21926:19;;5720:111:6;21719:232:10;4108:223:7;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:7:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;14546:2:10;5354:81:7;;;14528:21:10;14585:2;14565:18;;;14558:30;14624:34;14604:18;;;14597:62;14695:8;14675:18;;;14668:36;14721:19;;5354:81:7;14518:228:10;5354:81:7;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:7:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;1702:19;;;;8113:60;;;;;;;20683:2:10;8113:60:7;;;20665:21:10;20722:2;20702:18;;;20695:30;20761:31;20741:18;;;20734:59;20810:18;;8113:60:7;20655:179:10;8113:60:7;-1:-1:-1;8208:10:7;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;9161:133;9331:12;9324:20;;;;;;;;;;;:::i;14:196:10:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:179::-;293:13;;346:22;335:34;;325:45;;315:2;;384:1;381;374:12;399:196;458:6;511:2;499:9;490:7;486:23;482:32;479:2;;;532:6;524;517:22;479:2;560:29;579:9;560:29;:::i;:::-;550:39;469:126;-1:-1:-1;;;469:126:10:o;600:264::-;668:6;676;729:2;717:9;708:7;704:23;700:32;697:2;;;750:6;742;735:22;697:2;778:29;797:9;778:29;:::i;:::-;768:39;854:2;839:18;;;;826:32;;-1:-1:-1;;;687:177:10:o;869:332::-;946:6;954;962;1015:2;1003:9;994:7;990:23;986:32;983:2;;;1036:6;1028;1021:22;983:2;1064:29;1083:9;1064:29;:::i;:::-;1054:39;1140:2;1125:18;;1112:32;;-1:-1:-1;1191:2:10;1176:18;;;1163:32;;973:228;-1:-1:-1;;;973:228:10:o;1206:665::-;1292:6;1300;1353:2;1341:9;1332:7;1328:23;1324:32;1321:2;;;1374:6;1366;1359:22;1321:2;1419:9;1406:23;1448:18;1489:2;1481:6;1478:14;1475:2;;;1510:6;1502;1495:22;1475:2;1553:6;1542:9;1538:22;1528:32;;1598:7;1591:4;1587:2;1583:13;1579:27;1569:2;;1625:6;1617;1610:22;1569:2;1670;1657:16;1696:2;1688:6;1685:14;1682:2;;;1717:6;1709;1702:22;1682:2;1775:7;1770:2;1760:6;1757:1;1753:14;1749:2;1745:23;1741:32;1738:45;1735:2;;;1801:6;1793;1786:22;1735:2;1837;1829:11;;;;;1859:6;;-1:-1:-1;1311:560:10;;-1:-1:-1;;;;1311:560:10:o;1876:297::-;1943:6;1996:2;1984:9;1975:7;1971:23;1967:32;1964:2;;;2017:6;2009;2002:22;1964:2;2054:9;2048:16;2107:5;2100:13;2093:21;2086:5;2083:32;2073:2;;2134:6;2126;2119:22;2178:190;2237:6;2290:2;2278:9;2269:7;2265:23;2261:32;2258:2;;;2311:6;2303;2296:22;2258:2;-1:-1:-1;2339:23:10;;2248:120;-1:-1:-1;2248:120:10:o;2373:264::-;2441:6;2449;2502:2;2490:9;2481:7;2477:23;2473:32;2470:2;;;2523:6;2515;2508:22;2470:2;2564:9;2551:23;2541:33;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2460:177;;;;;:::o;2642:258::-;2710:6;2718;2771:2;2759:9;2750:7;2746:23;2742:32;2739:2;;;2792:6;2784;2777:22;2739:2;-1:-1:-1;;2820:23:10;;;2890:2;2875:18;;;2862:32;;-1:-1:-1;2729:171:10:o;2905:483::-;3008:6;3016;3024;3032;3040;3093:3;3081:9;3072:7;3068:23;3064:33;3061:2;;;3115:6;3107;3100:22;3061:2;3143:39;3172:9;3143:39;:::i;:::-;3133:49;;3222:2;3211:9;3207:18;3201:25;3191:35;;3266:2;3255:9;3251:18;3245:25;3235:35;;3310:2;3299:9;3295:18;3289:25;3279:35;;3333:49;3377:3;3366:9;3362:19;3333:49;:::i;:::-;3323:59;;3051:337;;;;;;;;:::o;3393:293::-;3473:1;3466:5;3463:12;3453:2;;3509:77;3506:1;3499:88;3610:4;3607:1;3600:15;3638:4;3635:1;3628:15;3453:2;3662:18;;3443:243::o;3691:274::-;3820:3;3858:6;3852:13;3874:53;3920:6;3915:3;3908:4;3900:6;3896:17;3874:53;:::i;:::-;3943:16;;;;;3828:137;-1:-1:-1;;3828:137:10:o;4906:1506::-;5233:2;5285:21;;;5355:13;;5258:18;;;5377:22;;;5204:4;;5233:2;5453:4;;5430:3;5415:19;;;5480:15;;;5204:4;5526:169;5540:6;5537:1;5534:13;5526:169;;;5601:13;;5589:26;;5635:12;;;;5670:15;;;;5562:1;5555:9;5526:169;;;-1:-1:-1;;;5731:19:10;;;5711:18;;;5704:47;5801:13;;5823:21;;;5899:15;;;;5862:12;;;5934:4;5947:392;5963:8;5958:3;5955:17;5947:392;;;6034:8;6028:15;6056:42;6092:5;6087:2;6081:9;6056:42;:::i;:::-;6140:11;;;6134:18;6118:14;;;6111:42;6176:4;6236:11;;;6230:18;6223:26;6216:34;6200:14;;;6193:58;6312:17;;;;6273:14;;;;5991:1;5982:11;5947:392;;;5951:3;;6356:5;6348:13;;;;;;6399:6;6392:4;6381:9;6377:20;6370:36;5213:1199;;;;;;:::o;7113:358::-;7308:2;7293:18;;7320:43;7297:9;7345:6;7320:43;:::i;:::-;7399:6;7394:2;7383:9;7379:18;7372:34;7456:6;7449:14;7442:22;7437:2;7426:9;7422:18;7415:50;7275:196;;;;;;:::o;7656:442::-;7805:2;7794:9;7787:21;7768:4;7837:6;7831:13;7880:6;7875:2;7864:9;7860:18;7853:34;7896:66;7955:6;7950:2;7939:9;7935:18;7930:2;7922:6;7918:15;7896:66;:::i;:::-;8014:2;8002:15;8019:66;7998:88;7983:104;;;;8089:2;7979:113;;7777:321;-1:-1:-1;;7777:321:10:o;25648:128::-;25688:3;25719:1;25715:6;25712:1;25709:13;25706:2;;;25725:18;;:::i;:::-;-1:-1:-1;25761:9:10;;25696:80::o;25781:274::-;25821:1;25847;25837:2;;25882:77;25879:1;25872:88;25983:4;25980:1;25973:15;26011:4;26008:1;26001:15;25837:2;-1:-1:-1;26040:9:10;;25827:228::o;26060:::-;26100:7;26226:1;26158:66;26154:74;26151:1;26148:81;26143:1;26136:9;26129:17;26125:105;26122:2;;;26233:18;;:::i;:::-;-1:-1:-1;26273:9:10;;26112:176::o;26293:125::-;26333:4;26361:1;26358;26355:8;26352:2;;;26366:18;;:::i;:::-;-1:-1:-1;26403:9:10;;26342:76::o;26423:258::-;26495:1;26505:113;26519:6;26516:1;26513:13;26505:113;;;26595:11;;;26589:18;26576:11;;;26569:39;26541:2;26534:10;26505:113;;;26636:6;26633:1;26630:13;26627:2;;;-1:-1:-1;;26671:1:10;26653:16;;26646:27;26476:205::o;26686:195::-;26725:3;26756:66;26749:5;26746:77;26743:2;;;26826:18;;:::i;:::-;-1:-1:-1;26873:1:10;26862:13;;26733:148::o;26886:184::-;26938:77;26935:1;26928:88;27035:4;27032:1;27025:15;27059:4;27056:1;27049:15"
            },
            "methodIdentifiers": {
              "MAX_TREASURY_FEE()": "f2b3c809",
              "adminAddress()": "fc6f9468",
              "betBear(uint256,uint256)": "0e89e5a4",
              "betBull(uint256,uint256)": "3923e1b4",
              "bufferSeconds()": "eaba2361",
              "claim(uint256[])": "6ba4c138",
              "claimTreasury()": "003bdc74",
              "claimable(uint256,address)": "a0c7f71c",
              "currentEpoch()": "76671808",
              "executeRound()": "7b3205f5",
              "genesisLockOnce()": "0f74174f",
              "genesisLockRound()": "d9d55eac",
              "genesisStartOnce()": "f7fdec28",
              "genesisStartRound()": "452fd75a",
              "getUserRounds(address,uint256,uint256)": "951fd600",
              "getUserRoundsLength(address)": "273867d4",
              "intervalSeconds()": "7d1cd04f",
              "ledger(uint256,address)": "7285c58b",
              "minBetAmount()": "fa968eea",
              "operatorAddress()": "127effb2",
              "oracle()": "7dc0d1d0",
              "oracleLatestRoundId()": "ec324703",
              "oracleUpdateAllowance()": "60554011",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "recoverToken(address,uint256)": "b29a8140",
              "refundable(uint256,address)": "7bf41254",
              "renounceOwnership()": "715018a6",
              "rounds(uint256)": "8c65c81f",
              "setAdmin(address)": "704b6c02",
              "setBufferAndIntervalSeconds(uint256,uint256)": "890dc766",
              "setMinBetAmount(uint256)": "6c188593",
              "setOperator(address)": "b3ab15fb",
              "setOracle(address)": "7adbf973",
              "setOracleUpdateAllowance(uint256)": "cf2f5039",
              "setTreasuryFee(uint256)": "77e741c7",
              "token()": "fc0c546a",
              "transferOwnership(address)": "f2fde38b",
              "treasuryAmount()": "368acb09",
              "treasuryFee()": "cc32d176",
              "unpause()": "3f4ba83a",
              "userRounds(address,uint256)": "dd1f7596"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_intervalSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bufferSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oracleUpdateAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasuryFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetBear\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetBull\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"name\":\"EndRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"name\":\"LockRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"NewAdminAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bufferSeconds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intervalSeconds\",\"type\":\"uint256\"}],\"name\":\"NewBufferAndIntervalSeconds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBetAmount\",\"type\":\"uint256\"}],\"name\":\"NewMinBetAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"NewOperatorAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"NewOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oracleUpdateAllowance\",\"type\":\"uint256\"}],\"name\":\"NewOracleUpdateAllowance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryFee\",\"type\":\"uint256\"}],\"name\":\"NewTreasuryFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardBaseCalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsCalculated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"StartRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenRecovery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TreasuryClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TREASURY_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"betBear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"betBull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bufferSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"epochs\",\"type\":\"uint256[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesisLockOnce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesisLockRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesisStartOnce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesisStartRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"getUserRounds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"enum LucroPrediction.Position\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"internalType\":\"struct LucroPrediction.BetInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserRoundsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"intervalSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"enum LucroPrediction.Position\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleLatestRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleUpdateAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"refundable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"lockPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"closePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lockOracleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeOracleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bullAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bearAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBaseCalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"oracleCalled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bufferSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_intervalSeconds\",\"type\":\"uint256\"}],\"name\":\"setBufferAndIntervalSeconds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBetAmount\",\"type\":\"uint256\"}],\"name\":\"setMinBetAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_oracleUpdateAllowance\",\"type\":\"uint256\"}],\"name\":\"setOracleUpdateAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_treasuryFee\",\"type\":\"uint256\"}],\"name\":\"setTreasuryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"betBear(uint256,uint256)\":{\"params\":{\"epoch\":\": epoch\"}},\"betBull(uint256,uint256)\":{\"params\":{\"epoch\":\": epoch\"}},\"claim(uint256[])\":{\"params\":{\"epochs\":\": array of epochs\"}},\"claimTreasury()\":{\"details\":\"Callable by admin\"},\"claimable(uint256,address)\":{\"params\":{\"epoch\":\": epoch\",\"user\":\": user address\"}},\"constructor\":{\"params\":{\"_adminAddress\":\": admin address\",\"_bufferSeconds\":\": buffer of time for resolution of price\",\"_intervalSeconds\":\": number of time within an interval\",\"_minBetAmount\":\": minimum bet amounts (in wei)\",\"_operatorAddress\":\": operator address\",\"_oracleAddress\":\": oracle address\",\"_oracleUpdateAllowance\":\": oracle update allowance\",\"_token\":\": prediction token\",\"_treasuryFee\":\": treasury fee (1000 = 10%)\"}},\"executeRound()\":{\"details\":\"Callable by operator\"},\"genesisLockRound()\":{\"details\":\"Callable by operator\"},\"genesisStartRound()\":{\"details\":\"Callable by admin or operator\"},\"getUserRounds(address,uint256,uint256)\":{\"params\":{\"cursor\":\": cursor\",\"size\":\": size\",\"user\":\": user address\"}},\"getUserRoundsLength(address)\":{\"params\":{\"user\":\": user address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Callable by admin or operator\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"recoverToken(address,uint256)\":{\"details\":\"Callable by owner\",\"params\":{\"_amount\":\": token amount\",\"_token\":\": token address\"}},\"refundable(uint256,address)\":{\"params\":{\"epoch\":\": epoch\",\"user\":\": user address\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"Callable by owner\"},\"setBufferAndIntervalSeconds(uint256,uint256)\":{\"details\":\"Callable by admin\"},\"setMinBetAmount(uint256)\":{\"details\":\"Callable by admin\"},\"setOperator(address)\":{\"details\":\"Callable by admin\"},\"setOracle(address)\":{\"details\":\"Callable by admin\"},\"setOracleUpdateAllowance(uint256)\":{\"details\":\"Callable by admin\"},\"setTreasuryFee(uint256)\":{\"details\":\"Callable by admin\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Callable by admin or operator\"}},\"title\":\"LucroPrediction\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"betBear(uint256,uint256)\":{\"notice\":\"Bet bear position\"},\"betBull(uint256,uint256)\":{\"notice\":\"Bet bull position\"},\"claim(uint256[])\":{\"notice\":\"Claim reward for an array of epochs\"},\"claimTreasury()\":{\"notice\":\"Claim all rewards in treasury\"},\"claimable(uint256,address)\":{\"notice\":\"Get the claimable stats of specific epoch and user account\"},\"constructor\":{\"notice\":\"Constructor\"},\"executeRound()\":{\"notice\":\"Start the next round n, lock price for round n-1, end round n-2\"},\"genesisLockRound()\":{\"notice\":\"Lock genesis round\"},\"genesisStartRound()\":{\"notice\":\"Start genesis round\"},\"getUserRounds(address,uint256,uint256)\":{\"notice\":\"Returns round epochs and bet information for a user that has participated\"},\"getUserRoundsLength(address)\":{\"notice\":\"Returns round epochs length\"},\"pause()\":{\"notice\":\"called by the admin to pause, triggers stopped state\"},\"recoverToken(address,uint256)\":{\"notice\":\"It allows the owner to recover tokens sent to the contract by mistake\"},\"refundable(uint256,address)\":{\"notice\":\"Get the refundable stats of specific epoch and user account\"},\"setAdmin(address)\":{\"notice\":\"Set admin address\"},\"setBufferAndIntervalSeconds(uint256,uint256)\":{\"notice\":\"Set buffer and interval (in seconds)\"},\"setMinBetAmount(uint256)\":{\"notice\":\"Set minBetAmount\"},\"setOperator(address)\":{\"notice\":\"Set operator address\"},\"setOracle(address)\":{\"notice\":\"Set Oracle address\"},\"setOracleUpdateAllowance(uint256)\":{\"notice\":\"Set oracle update allowance\"},\"setTreasuryFee(uint256)\":{\"notice\":\"Set treasury fee\"},\"unpause()\":{\"notice\":\"called by the admin to unpause, returns to normal state Reset genesis state. Once paused, the rounds would need to be kickstarted by genesis\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LucroPrediction.sol\":\"LucroPrediction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/LucroPrediction.sol\":{\"keccak256\":\"0x1d37b6ebe0d9dd21aa518d12fc1074df7b0e13f7357748c00a497aff721eb798\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfb35454db830df2d5b1403264d3a0840713296935f6f3bb41a1cafc75fc79e9\",\"dweb:/ipfs/QmWTgSHCnEnm1epUpoJQTC8RRsdm79EYmAhUHDDjb669gC\"]}},\"version\":1}"
        }
      }
    }
  }
}